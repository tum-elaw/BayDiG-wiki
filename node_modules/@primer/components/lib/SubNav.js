"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("./constants");

var _Flex = _interopRequireDefault(require("./Flex"));

var _sx = _interopRequireDefault(require("./sx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const ITEM_CLASS = 'SubNav-item';
const SELECTED_CLASS = 'selected';

const SubNavBase = _styledComponents.default.nav.withConfig({
  displayName: "SubNav__SubNavBase",
  componentId: "f7w0xa-0"
})(["display:flex;justify-content:space-between;.SubNav-body{display:flex;margin-bottom:-1px;> *{margin-left:", ";}> *:first-child{margin-left:0;}}.SubNav-actions{align-self:center;}", ";", ";", ";"], (0, _constants.get)('space.2'), _constants.COMMON, _constants.FLEX, _sx.default);

function SubNav({
  actions,
  className,
  children,
  label,
  ...rest
}) {
  const classes = (0, _classnames.default)(className, 'SubNav');
  return /*#__PURE__*/_react.default.createElement(SubNavBase, _extends({
    className: classes,
    "aria-label": label
  }, rest), /*#__PURE__*/_react.default.createElement("div", {
    className: "SubNav-body"
  }, children), actions && /*#__PURE__*/_react.default.createElement("div", {
    className: "SubNav-actions"
  }, actions));
}

SubNav.displayName = "SubNav";

function SubNavLinks(props) {
  return /*#__PURE__*/_react.default.createElement(_Flex.default, props);
}

SubNavLinks.displayName = "SubNavLinks";

const SubNavLink = _styledComponents.default.a.attrs(props => ({
  activeClassName: typeof props.to === 'string' ? 'selected' : '',
  className: (0, _classnames.default)(ITEM_CLASS, props.selected && SELECTED_CLASS, props.className)
})).withConfig({
  displayName: "SubNav__SubNavLink",
  componentId: "f7w0xa-1"
})(["padding-left:", ";padding-right:", ";font-weight:", ";font-size:", ";line-height:20px;min-height:34px;color:", ";text-align:center;text-decoration:none;border-top:1px solid ", ";border-bottom:1px solid ", ";border-right:1px solid ", ";display:flex;align-items:center;&:first-of-type{border-top-left-radius:", ";border-bottom-left-radius:", ";border-left:1px solid ", ";}&:last-of-type{border-top-right-radius:", ";border-bottom-right-radius:", ";}&:hover,&:focus{text-decoration:none;background-color:", ";transition:0.2s ease;.SubNav-octicon{color:", ";}}&.selected{color:", ";background-color:", ";border-color:", ";.SubNav-octicon{color:", ";}}", ";", ";"], (0, _constants.get)('space.3'), (0, _constants.get)('space.3'), (0, _constants.get)('fontWeights.semibold'), (0, _constants.get)('fontSizes.1'), (0, _constants.get)('colors.text.primary'), (0, _constants.get)('colors.border.primary'), (0, _constants.get)('colors.border.primary'), (0, _constants.get)('colors.border.primary'), (0, _constants.get)('radii.2'), (0, _constants.get)('radii.2'), (0, _constants.get)('colors.border.primary'), (0, _constants.get)('radii.2'), (0, _constants.get)('radii.2'), (0, _constants.get)('colors.bg.tertiary'), (0, _constants.get)('colors.icon.secondary'), (0, _constants.get)('colors.state.selected.primaryText'), (0, _constants.get)('colors.state.selected.primaryBg'), (0, _constants.get)('colors.state.selected.primaryBorder'), (0, _constants.get)('colors.state.selected.primaryText'), _constants.COMMON, _sx.default);

SubNavLink.displayName = 'SubNav.Link';
SubNavLinks.displayName = 'SubNav.Links';

var _default = Object.assign(SubNav, {
  Link: SubNavLink,
  Links: SubNavLinks
});

exports.default = _default;