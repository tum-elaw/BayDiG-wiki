/// <reference types="hoist-non-react-statics" />
/// <reference types="react" />
import * as History from 'history';
import BorderBox from './BorderBox';
import { ComponentProps } from './utils/types';
declare type SideNavBaseProps = {
    variant?: 'lightweight' | 'normal';
    bordered?: boolean;
} & ComponentProps<typeof BorderBox>;
declare function SideNavBase({ variant, className, bordered, children, ...props }: SideNavBaseProps): JSX.Element;
declare const SideNav: import("styled-components").StyledComponent<typeof SideNavBase, any, {}, never>;
declare type StyledSideNavLinkProps = {
    to?: History.LocationDescriptor;
    selected?: boolean;
    variant?: 'full' | 'normal';
};
declare const SideNavLink: import("styled-components").StyledComponent<"a", any, {
    hoverColor?: string | undefined;
    muted?: boolean | undefined;
    underline?: boolean | undefined;
} & import("./constants").SystemCommonProps & import("./sx").SxProp & import("./constants").SystemTypographyProps & StyledSideNavLinkProps, never>;
export declare type SideNavProps = ComponentProps<typeof SideNav>;
export declare type SideNavLinkProps = ComponentProps<typeof SideNavLink>;
declare const _default: string & import("styled-components").StyledComponentBase<typeof SideNavBase, any, {}, never> & import("hoist-non-react-statics").NonReactStatics<typeof SideNavBase, {}> & {
    Link: import("styled-components").StyledComponent<"a", any, {
        hoverColor?: string | undefined;
        muted?: boolean | undefined;
        underline?: boolean | undefined;
    } & import("./constants").SystemCommonProps & import("./sx").SxProp & import("./constants").SystemTypographyProps & StyledSideNavLinkProps, never>;
};
export default _default;
