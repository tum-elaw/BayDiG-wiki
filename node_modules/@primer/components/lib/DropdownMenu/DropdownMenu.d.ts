import React from 'react';
import { GroupedListProps, ListPropsBase, ItemInput } from '../ActionList/List';
import { OverlayProps } from '../Overlay';
export interface DropdownMenuProps extends Partial<Omit<GroupedListProps, keyof ListPropsBase>>, ListPropsBase {
    /**
     * A custom function component used to render the anchor element.
     * Will receive the selected text as `children` prop when an item is activated.
     * Uses a `DropdownButton` by default.
     */
    renderAnchor?: <T extends React.HTMLAttributes<HTMLElement>>(props: T) => JSX.Element;
    /**
     * A placeholder value to display on the trigger button when no selection has been made.
     */
    placeholder?: string;
    /**
     * An `ItemProps` item from the list of `items` which is currently selected.  This item will receive a checkmark next to it in the menu.
     */
    selectedItem?: ItemInput;
    /**
     * A callback which receives the selected item or `undefined` when an item is activated in the menu.  If the activated item is the same as the current
     * `selectedItem`, `undefined` will be passed.
     */
    onChange?: (item?: ItemInput) => unknown;
    /**
     * Props to be spread on the internal `Overlay` component.
     */
    overlayProps?: Partial<OverlayProps>;
}
/**
 * A `DropdownMenu` provides an anchor (button by default) that will open a floating menu of selectable items.  The menu can be
 * opened and navigated using keyboard or mouse.  When an item is selected, the menu will close and the `onChange` callback will be called.
 * If the default anchor button is used, the anchor contents will be updated with the selection.
 */
export declare function DropdownMenu({ renderAnchor, placeholder, selectedItem, onChange, overlayProps, items, ...listProps }: DropdownMenuProps): JSX.Element;
export declare namespace DropdownMenu {
    var displayName: string;
}
