"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.listItemStyles = void 0;

var _octiconsReact = require("@primer/octicons-react");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _constants = require("../constants");

var _StyledOcticon = _interopRequireDefault(require("../StyledOcticon"));

var _sx = _interopRequireDefault(require("../sx"));

var _SelectMenuContext = require("./SelectMenuContext");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const listItemStyles = (0, _styledComponents.css)(["display:flex;align-items:center;padding:", ";overflow:hidden;text-align:left;cursor:pointer;background-color:", ";border:0;border-bottom:", " solid ", ";color:", ";text-decoration:none;font-size:", ";font-family:inherit;width:100%;&:hover{text-decoration:none;}&:focus{outline:none;}&[hidden]{display:none !important;}@media (min-width:", "){padding-top:", ";padding-bottom:", ";}.SelectMenu-icon{width:", ";margin-right:", ";flex-shrink:0;}.SelectMenu-selected-icon{visibility:hidden;transition:transform 0.12s cubic-bezier(0.5,0.1,1,0.5),visibility 0s 0.12s linear;transform:scale(0);}&[aria-checked='true']{font-weight:500;color:", ";.SelectMenu-selected-icon{visibility:visible;transition:transform 0.12s cubic-bezier(0,0,0.2,1),visibility 0s linear;transform:scale(1);}}@media (hover:hover){&:hover,&:active,&:focus{background-color:", ";}}@media (hover:none){&:focus,&:active{background-color:", ";}-webkit-tap-highlight-color:", ";}"], (0, _constants.get)('space.3'), (0, _constants.get)('colors.bg.overlay'), (0, _constants.get)('borderWidths.1'), (0, _constants.get)('colors.selectMenu.borderSecondary'), (0, _constants.get)('colors.text.secondary'), (0, _constants.get)('fontSizes.0'), (0, _constants.get)('breakpoints.0'), (0, _constants.get)('space.2'), (0, _constants.get)('space.2'), (0, _constants.get)('space.3'), (0, _constants.get)('space.2'), (0, _constants.get)('colors.text.primary'), (0, _constants.get)('colors.state.hover.secondaryBg'), (0, _constants.get)('colors.bg.secondary'), (0, _constants.get)('colors.selectMenu.tapHighlight'));
exports.listItemStyles = listItemStyles;

const StyledItem = _styledComponents.default.a.attrs(() => ({
  role: 'menuitemcheckbox'
})).withConfig({
  displayName: "SelectMenuItem__StyledItem",
  componentId: "gjymba-0"
})(["", " ", " ", ";"], listItemStyles, _constants.COMMON, _sx.default);

const SelectMenuItem = /*#__PURE__*/(0, _react.forwardRef)(({
  children,
  selected,
  theme,
  onClick,
  ...rest
}, forwardedRef) => {
  const menuContext = (0, _react.useContext)(_SelectMenuContext.MenuContext);
  const backupRef = (0, _react.useRef)(null);
  const itemRef = forwardedRef !== null && forwardedRef !== void 0 ? forwardedRef : backupRef; // close the menu when an item is clicked
  // this can be overriden if the user provides a `onClick` prop and prevents default in it

  const handleClick = e => {
    onClick && onClick(e);

    if (!e.defaultPrevented) {
      var _menuContext$setOpen;

      (_menuContext$setOpen = menuContext.setOpen) === null || _menuContext$setOpen === void 0 ? void 0 : _menuContext$setOpen.call(menuContext, false);
    }
  };

  return /*#__PURE__*/_react.default.createElement(StyledItem, _extends({
    ref: itemRef
  }, rest, {
    theme: theme,
    onClick: handleClick,
    "aria-checked": selected
  }), /*#__PURE__*/_react.default.createElement(_StyledOcticon.default, {
    theme: theme,
    className: "SelectMenu-icon SelectMenu-selected-icon",
    icon: _octiconsReact.CheckIcon
  }), children);
});
SelectMenuItem.defaultProps = {
  selected: false
};
SelectMenuItem.displayName = 'SelectMenu.Item';
var _default = SelectMenuItem;
exports.default = _default;