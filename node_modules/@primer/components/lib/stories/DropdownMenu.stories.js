"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FavoriteColorStory = FavoriteColorStory;
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _ = require("..");

var _BaseStyles = _interopRequireDefault(require("../BaseStyles"));

var _DropdownMenu = require("../DropdownMenu");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const meta = {
  title: 'Composite components/DropdownMenu',
  component: _DropdownMenu.DropdownMenu,
  decorators: [Story => {
    return /*#__PURE__*/_react.default.createElement(_.ThemeProvider, {
      theme: _.theme
    }, /*#__PURE__*/_react.default.createElement(_BaseStyles.default, null, /*#__PURE__*/_react.default.createElement(Story, null)));
  }],
  parameters: {
    controls: {
      disable: true
    }
  }
};
var _default = meta;
exports.default = _default;

function FavoriteColorStory() {
  const items = _react.default.useMemo(() => [{
    text: 'ðŸ”µ Cyan'
  }, {
    text: 'ðŸ”´ Magenta'
  }, {
    text: 'ðŸŸ¡ Yellow'
  }], []);

  const [selectedItem, setSelectedItem] = _react.default.useState();

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Favorite Color"), /*#__PURE__*/_react.default.createElement("div", {
    id: "favorite-color-label"
  }, "Please select your favorite color:"), /*#__PURE__*/_react.default.createElement(_DropdownMenu.DropdownMenu, {
    renderAnchor: ({
      children,
      'aria-labelledby': ariaLabelledBy,
      ...anchorProps
    }) => /*#__PURE__*/_react.default.createElement(_DropdownMenu.DropdownButton, _extends({
      "aria-labelledby": `favorite-color-label ${ariaLabelledBy}`
    }, anchorProps), children),
    placeholder: "\uD83C\uDFA8",
    items: items,
    selectedItem: selectedItem,
    onChange: setSelectedItem
  }));
}

FavoriteColorStory.storyName = 'Favorite Color';