"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionsStory = ActionsStory;
exports.SimpleListStory = SimpleListStory;
exports.SingleSelectListStory = SingleSelectListStory;
exports.MultiSelectListStory = MultiSelectListStory;
exports.ComplexListInsetVariantStory = ComplexListInsetVariantStory;
exports.ComplexListFullVariantStory = ComplexListFullVariantStory;
exports.HeaderStory = HeaderStory;
exports.CustomItemChildren = CustomItemChildren;
exports.default = void 0;

var _octiconsReact = require("@primer/octicons-react");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _2 = require("..");

var _ActionList2 = require("../ActionList");

var _Header = require("../ActionList/Header");

var _BaseStyles = _interopRequireDefault(require("../BaseStyles"));

var _sx = _interopRequireDefault(require("../sx"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const ActionList = Object.assign(_ActionList2.ActionList, {
  Header: _Header.Header
});
const meta = {
  title: 'Composite components/ActionList',
  component: ActionList,
  decorators: [Story => /*#__PURE__*/_react.default.createElement(_2.ThemeProvider, null, /*#__PURE__*/_react.default.createElement(_BaseStyles.default, null, /*#__PURE__*/_react.default.createElement(Story, null)))],
  parameters: {
    controls: {
      disable: true
    }
  }
};
var _default = meta;
exports.default = _default;

const ErsatzOverlay = _styledComponents.default.div.withConfig({
  displayName: "ActionListstories__ErsatzOverlay",
  componentId: "akdcn0-0"
})(["border-radius:12px;box-shadow:0 1px 3px rgba(0,0,0,0.12),0 8px 24px rgba(149,157,165,0.2);position:absolute;min-width:192px;max-width:640px;"]);

function ActionsStory() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Actions"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    showItemDividers: true,
    items: [{
      leadingVisual: _octiconsReact.ServerIcon,
      text: 'Open current Codespace',
      description: "Your existing Codespace will be opened to its previous state, and you'll be asked to manually switch to new-branch.",
      descriptionVariant: 'block'
    }, {
      leadingVisual: _octiconsReact.PlusCircleIcon,
      text: 'Create new Codespace',
      description: 'Create a brand new Codespace with a fresh image and checkout this branch.',
      descriptionVariant: 'block'
    }]
  })));
}

ActionsStory.storyName = 'Actions';

function SimpleListStory() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Simple List"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    items: [{
      text: 'New file',
      showDivider: true
    }, ActionList.Divider, {
      text: 'Copy link',
      showDivider: true
    }, {
      text: 'Edit file',
      showDivider: true
    }, {
      text: 'Delete file',
      variant: 'danger',
      showDivider: true
    }]
  })));
}

SimpleListStory.storyName = 'Simple List';
const selectListItems = new Array(6).fill(undefined).map((_, i) => {
  return {
    text: `Item ${i}`,
    id: i
  };
});

function SingleSelectListStory() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Single Select List"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    items: selectListItems.map((item, index) => ({ ...item,
      selected: index === 1
    }))
  })));
}

SingleSelectListStory.storyName = 'Single Select';

function MultiSelectListStory() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Multi Select List"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    selectionVariant: "multiple",
    items: selectListItems.map((item, index) => ({ ...item,
      selected: index === 1 || index === 3
    }))
  })));
}

MultiSelectListStory.storyName = 'Multi Select';

function ComplexListInsetVariantStory() {
  const StyledDiv = _styledComponents.default.div.withConfig({
    displayName: "ActionListstories__StyledDiv",
    componentId: "akdcn0-1"
  })(["", ""], _sx.default);

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Complex List"), /*#__PURE__*/_react.default.createElement("h2", null, "Inset Variant"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    groupMetadata: [{
      groupId: '0'
    }, {
      groupId: '1',
      header: {
        title: 'Live query',
        variant: 'filled'
      }
    }, {
      groupId: '2',
      header: {
        title: 'Layout',
        variant: 'subtle'
      },
      showItemDividers: true
    }, {
      groupId: '3',
      renderItem: props => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({
        style: {
          fontWeight: 'bold'
        }
      }, props))
    }, {
      groupId: '4',
      renderItem: ({
        leadingVisual: LeadingVisual,
        ...props
      }) => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({}, props, {
        leadingVisual: () => /*#__PURE__*/_react.default.createElement(StyledDiv, {
          sx: {
            '&>svg': {
              fill: 'white'
            }
          }
        }, LeadingVisual && /*#__PURE__*/_react.default.createElement(LeadingVisual, null))
      })),
      renderGroup: ({
        sx: sxProps,
        ...props
      }) => /*#__PURE__*/_react.default.createElement(ActionList.Group, _extends({}, props, {
        sx: { ...sxProps,
          backgroundColor: 'cornflowerblue',
          color: 'white'
        }
      }))
    }],
    items: [{
      leadingVisual: _octiconsReact.TypographyIcon,
      text: 'Rename',
      groupId: '0'
    }, {
      leadingVisual: _octiconsReact.VersionsIcon,
      text: 'Duplicate',
      description: 'Create a copy',
      descriptionVariant: 'inline',
      groupId: '0'
    }, {
      leadingVisual: _octiconsReact.SearchIcon,
      text: 'repo:github/memex,github/github',
      groupId: '1',
      renderItem: props => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({
        style: {
          color: 'rebeccapurple'
        }
      }, props))
    }, {
      leadingVisual: _octiconsReact.NoteIcon,
      text: 'Table',
      description: 'Information-dense table optimized for operations across teams',
      descriptionVariant: 'block',
      groupId: '2'
    }, {
      leadingVisual: _octiconsReact.ProjectIcon,
      text: 'Board',
      description: 'Kanban-style board focused on visual states',
      descriptionVariant: 'block',
      groupId: '2'
    }, {
      leadingVisual: _octiconsReact.FilterIcon,
      text: 'Save sort and filters to current view',
      groupId: '3'
    }, {
      leadingVisual: _octiconsReact.FilterIcon,
      text: 'Save sort and filters to new view',
      groupId: '3'
    }, {
      leadingVisual: _octiconsReact.GearIcon,
      text: 'View settings',
      groupId: '4'
    }]
  })));
}

ComplexListInsetVariantStory.storyName = 'Complex List â€” Inset Variant';

function ComplexListFullVariantStory() {
  const StyledDiv = _styledComponents.default.div.withConfig({
    displayName: "ActionListstories__StyledDiv",
    componentId: "akdcn0-2"
  })(["", ""], _sx.default);

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Complex List"), /*#__PURE__*/_react.default.createElement("h2", null, "Full Variant"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    variant: "full",
    groupMetadata: [{
      groupId: '0'
    }, {
      groupId: '1',
      header: {
        title: 'Live query',
        variant: 'filled'
      }
    }, {
      groupId: '2',
      header: {
        title: 'Layout',
        variant: 'subtle'
      }
    }, {
      groupId: '3',
      renderItem: props => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({
        style: {
          fontWeight: 'bold'
        }
      }, props))
    }, {
      groupId: '4',
      renderItem: ({
        leadingVisual: LeadingVisual,
        ...props
      }) => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({}, props, {
        leadingVisual: () => /*#__PURE__*/_react.default.createElement(StyledDiv, {
          sx: {
            '&>svg': {
              fill: 'white'
            }
          }
        }, LeadingVisual && /*#__PURE__*/_react.default.createElement(LeadingVisual, null))
      })),
      renderGroup: ({
        sx: sxProps,
        ...props
      }) => /*#__PURE__*/_react.default.createElement(ActionList.Group, _extends({}, props, {
        sx: { ...sxProps,
          backgroundColor: 'cornflowerblue',
          color: 'white'
        }
      }))
    }],
    items: [{
      leadingVisual: _octiconsReact.TypographyIcon,
      text: 'Rename',
      groupId: '0'
    }, {
      leadingVisual: _octiconsReact.VersionsIcon,
      text: 'Duplicate',
      groupId: '0'
    }, {
      leadingVisual: _octiconsReact.SearchIcon,
      text: 'repo:github/memex,github/github',
      groupId: '1',
      renderItem: props => /*#__PURE__*/_react.default.createElement(ActionList.Item, _extends({
        style: {
          color: 'rebeccapurple'
        }
      }, props))
    }, {
      leadingVisual: _octiconsReact.NoteIcon,
      text: 'Table',
      description: 'Information-dense table optimized for operations across teams',
      descriptionVariant: 'block',
      groupId: '2'
    }, {
      leadingVisual: _octiconsReact.ProjectIcon,
      text: 'Board',
      description: 'Kanban-style board focused on visual states',
      descriptionVariant: 'block',
      groupId: '2'
    }, {
      leadingVisual: _octiconsReact.FilterIcon,
      text: 'Save sort and filters to current view',
      groupId: '3'
    }, {
      leadingVisual: _octiconsReact.FilterIcon,
      text: 'Save sort and filters to new view',
      groupId: '3'
    }, {
      leadingVisual: _octiconsReact.GearIcon,
      text: 'View settings',
      groupId: '4'
    }]
  })));
}

ComplexListFullVariantStory.storyName = 'Complex List â€” Full Variant';

function HeaderStory() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Header"), /*#__PURE__*/_react.default.createElement("h2", null, "Filled Variant"), /*#__PURE__*/_react.default.createElement(ActionList.Header, {
    title: "Layout",
    variant: "filled"
  }), /*#__PURE__*/_react.default.createElement("h2", null, "Subtle Variant"), /*#__PURE__*/_react.default.createElement(ActionList.Header, {
    title: "Layout",
    variant: "subtle"
  }));
}

HeaderStory.storyName = 'Header';

function CustomItemChildren() {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("h1", null, "Custom Item Children"), /*#__PURE__*/_react.default.createElement(ErsatzOverlay, null, /*#__PURE__*/_react.default.createElement(ActionList, {
    items: [{
      leadingVisual: _octiconsReact.ArrowRightIcon,
      children: /*#__PURE__*/_react.default.createElement(_2.Label, {
        outline: true,
        borderColor: "border.success"
      }, "Choose this one"),
      trailingIcon: _octiconsReact.ArrowLeftIcon
    }]
  })));
}

CustomItemChildren.storyName = 'Custom Item Children';