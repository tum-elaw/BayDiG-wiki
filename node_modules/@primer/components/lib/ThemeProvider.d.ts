import React from 'react';
export declare type Theme = {
    [key: string]: any;
};
declare type ColorMode = 'day' | 'night';
declare type ColorModeWithAuto = ColorMode | 'auto';
export declare type ThemeProviderProps = {
    theme?: Theme;
    colorMode?: ColorModeWithAuto;
    dayScheme?: string;
    nightScheme?: string;
};
export declare const ThemeProvider: React.FC<ThemeProviderProps>;
export declare function useTheme(): {
    theme?: Theme | undefined;
    colorScheme?: string | undefined;
    colorMode?: "auto" | "day" | "night" | undefined;
    resolvedColorMode?: "day" | "night" | undefined;
    dayScheme?: string | undefined;
    nightScheme?: string | undefined;
    setColorMode: React.Dispatch<React.SetStateAction<ColorModeWithAuto>>;
    setDayScheme: React.Dispatch<React.SetStateAction<string>>;
    setNightScheme: React.Dispatch<React.SetStateAction<string>>;
};
export declare function useColorSchemeVar(values: Record<string, string>, fallback?: string): string;
export default ThemeProvider;
