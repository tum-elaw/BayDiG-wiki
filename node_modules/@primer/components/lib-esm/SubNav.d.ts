import * as History from 'history';
import React from 'react';
import { SystemBorderProps, SystemCommonProps, SystemFlexProps } from './constants';
import { BoxProps } from './Box';
import { SxProp } from './sx';
import { ComponentProps } from './utils/types';
declare const SubNavBase: import("styled-components").StyledComponent<"nav", any, SystemFlexProps & SystemCommonProps & SxProp, never>;
export declare type SubNavProps = {
    actions?: React.ReactNode;
    align?: 'right';
    full?: boolean;
    label?: string;
} & ComponentProps<typeof SubNavBase>;
declare function SubNav({ actions, className, children, label, ...rest }: SubNavProps): JSX.Element;
export declare type SubNavLinksProps = BoxProps;
declare function SubNavLinks(props: SubNavLinksProps): JSX.Element;
declare namespace SubNavLinks {
    var displayName: string;
}
declare const SubNavLink: import("styled-components").StyledComponent<"a", any, {
    to?: History.LocationDescriptor<unknown> | undefined;
    selected?: boolean | undefined;
} & SystemCommonProps & SxProp & SystemBorderProps, never>;
export declare type SubNavLinkProps = ComponentProps<typeof SubNavLink>;
declare const _default: typeof SubNav & {
    Link: import("styled-components").StyledComponent<"a", any, {
        to?: History.LocationDescriptor<unknown> | undefined;
        selected?: boolean | undefined;
    } & SystemCommonProps & SxProp & SystemBorderProps, never>;
    Links: typeof SubNavLinks;
};
export default _default;
