function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { theme, ThemeProvider } from '..';
import BaseStyles from '../BaseStyles';
import { DropdownMenu, DropdownButton } from '../DropdownMenu';
const meta = {
  title: 'Composite components/DropdownMenu',
  component: DropdownMenu,
  decorators: [Story => {
    return /*#__PURE__*/React.createElement(ThemeProvider, {
      theme: theme
    }, /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(Story, null)));
  }],
  parameters: {
    controls: {
      disable: true
    }
  }
};
export default meta;
export function FavoriteColorStory() {
  const items = React.useMemo(() => [{
    text: 'ðŸ”µ Cyan'
  }, {
    text: 'ðŸ”´ Magenta'
  }, {
    text: 'ðŸŸ¡ Yellow'
  }], []);
  const [selectedItem, setSelectedItem] = React.useState();
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("h1", null, "Favorite Color"), /*#__PURE__*/React.createElement("div", {
    id: "favorite-color-label"
  }, "Please select your favorite color:"), /*#__PURE__*/React.createElement(DropdownMenu, {
    renderAnchor: ({
      children,
      'aria-labelledby': ariaLabelledBy,
      ...anchorProps
    }) => /*#__PURE__*/React.createElement(DropdownButton, _extends({
      "aria-labelledby": `favorite-color-label ${ariaLabelledBy}`
    }, anchorProps), children),
    placeholder: "\uD83C\uDFA8",
    items: items,
    selectedItem: selectedItem,
    onChange: setSelectedItem
  }));
}
FavoriteColorStory.storyName = 'Favorite Color';