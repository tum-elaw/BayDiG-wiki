import React from 'react';
import { ThemeProvider, BaseStyles, BorderBox, themeGet, useTheme } from '..';
import { createGlobalStyle } from 'styled-components';
export default {
  title: 'Generic behaviors/ThemeProvider',
  component: ThemeProvider,
  argTypes: {
    theme: {
      table: {
        disable: true
      }
    }
  }
};
const GlobalStyle = createGlobalStyle`
    body {
        background-color: ${themeGet('colors.bg.canvas')};
    }
`;

function ActiveColorScheme() {
  const {
    colorScheme
  } = useTheme();
  return /*#__PURE__*/React.createElement("span", null, "Active color scheme: ", colorScheme);
}

ActiveColorScheme.displayName = "ActiveColorScheme";
export const Default = args => {
  return /*#__PURE__*/React.createElement(ThemeProvider, args, /*#__PURE__*/React.createElement(GlobalStyle, null), /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(ActiveColorScheme, null)));
};
Default.displayName = "Default";
Default.args = {
  colorMode: 'day',
  dayScheme: 'light',
  nightScheme: 'dark'
};

function NightMode() {
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    colorMode: "night"
  }, /*#__PURE__*/React.createElement(BorderBox, {
    my: 3,
    p: 3,
    color: "text.primary",
    bg: "bg.canvas"
  }, "Always night mode (", /*#__PURE__*/React.createElement(ActiveColorScheme, null), ")"));
}

NightMode.displayName = "NightMode";

function InverseMode() {
  const {
    resolvedColorMode
  } = useTheme();
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    colorMode: resolvedColorMode === 'day' ? 'night' : 'day'
  }, /*#__PURE__*/React.createElement(BorderBox, {
    my: 3,
    p: 3,
    color: "text.primary",
    bg: "bg.canvas"
  }, "Always inverse of parent mode (", /*#__PURE__*/React.createElement(ActiveColorScheme, null), ")"));
}

InverseMode.displayName = "InverseMode";
export const Nested = args => {
  return /*#__PURE__*/React.createElement(ThemeProvider, args, /*#__PURE__*/React.createElement(GlobalStyle, null), /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(ActiveColorScheme, null), /*#__PURE__*/React.createElement(NightMode, null), /*#__PURE__*/React.createElement(InverseMode, null)));
};
Nested.displayName = "Nested";
Nested.args = {
  colorMode: 'day',
  dayScheme: 'light',
  nightScheme: 'dark_dimmed'
};