import React, { useState, useRef } from 'react';
import styled from 'styled-components';
import { BaseStyles, Overlay, Button, Text, ButtonDanger, ThemeProvider, Position, Flex } from '..';
export default {
  title: 'Internal components/Overlay',
  component: Overlay,
  decorators: [Story => {
    return /*#__PURE__*/React.createElement(ThemeProvider, null, /*#__PURE__*/React.createElement(BaseStyles, null, /*#__PURE__*/React.createElement(Story, null)));
  }]
};
const DummyItem = styled.button.withConfig({
  displayName: "Overlaystories__DummyItem",
  componentId: "sc-92ppmu-0"
})(["border-radius:6px;font-weight:400;padding:6px 8px;font-weight:400;text-align:left;margin:0;font-size:14px;background:none;border:none;&:hover{background:#f0f3f5;}&:focus{background:red;}"]);
export const DropdownOverlay = () => {
  const [isOpen, setIsOpen] = useState(false);
  const buttonRef = useRef(null);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {
    ref: buttonRef,
    sx: {
      position: 'relative'
    },
    onClick: () => setIsOpen(!isOpen)
  }, "open overlay"), isOpen ? /*#__PURE__*/React.createElement(Overlay, {
    returnFocusRef: buttonRef,
    height: "auto",
    width: "sm",
    ignoreClickRefs: [buttonRef],
    onEscape: () => setIsOpen(false),
    onClickOutside: () => setIsOpen(false)
  }, /*#__PURE__*/React.createElement(Flex, {
    flexDirection: "column",
    p: 2
  }, /*#__PURE__*/React.createElement(DummyItem, null, "Copy link"), /*#__PURE__*/React.createElement(DummyItem, null, "Quote reply"), /*#__PURE__*/React.createElement(DummyItem, null, "Reference in new issue"), /*#__PURE__*/React.createElement(DummyItem, null, "Edit"), /*#__PURE__*/React.createElement(DummyItem, null, "Delete"))) : null);
};
export const DialogOverlay = () => {
  const [isOpen, setIsOpen] = useState(false);
  const buttonRef = useRef(null);
  const confirmButtonRef = useRef(null);
  const anchorRef = useRef(null);

  const closeOverlay = () => setIsOpen(false);

  return /*#__PURE__*/React.createElement(Position, {
    position: "absolute",
    top: 0,
    left: 0,
    bottom: 0,
    right: 0,
    ref: anchorRef
  }, /*#__PURE__*/React.createElement(Button, {
    ref: buttonRef,
    onClick: () => setIsOpen(!isOpen)
  }, "open overlay"), isOpen ? /*#__PURE__*/React.createElement(Overlay, {
    initialFocusRef: confirmButtonRef,
    returnFocusRef: buttonRef,
    ignoreClickRefs: [buttonRef],
    onEscape: closeOverlay,
    onClickOutside: closeOverlay,
    width: "sm"
  }, /*#__PURE__*/React.createElement(Flex, {
    flexDirection: "column",
    p: 2
  }, /*#__PURE__*/React.createElement(Text, null, "Are you sure?"), /*#__PURE__*/React.createElement(ButtonDanger, {
    onClick: closeOverlay
  }, "Cancel"), /*#__PURE__*/React.createElement(Button, {
    onClick: closeOverlay,
    ref: confirmButtonRef
  }, "Confirm"))) : null);
};
DialogOverlay.displayName = "DialogOverlay";