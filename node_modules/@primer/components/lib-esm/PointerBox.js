function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import BorderBox from './BorderBox';
import Caret from './Caret';

function PointerBox(props) {
  // don't destructure these, just grab them
  const {
    bg,
    border,
    borderColor,
    theme
  } = props;
  const {
    caret,
    children,
    ...boxProps
  } = props;
  const caretProps = {
    bg,
    borderColor,
    borderWidth: border,
    location: caret,
    theme
  };
  return /*#__PURE__*/React.createElement(BorderBox, _extends({
    sx: {
      position: 'relative'
    }
  }, boxProps), children, /*#__PURE__*/React.createElement(Caret, caretProps));
}

PointerBox.displayName = "PointerBox";
export default PointerBox;