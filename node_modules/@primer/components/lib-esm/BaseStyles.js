function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import styled, { createGlobalStyle } from 'styled-components';
import { COMMON, TYPOGRAPHY } from './constants';
const GlobalStyle = createGlobalStyle`
  * { box-sizing: border-box; }
  body { margin: 0; }
  table { border-collapse: collapse; }
  
  [role="button"]:focus:not(:focus-visible):not(.focus-visible),
  [role="tabpanel"][tabindex="0"]:focus:not(:focus-visible):not(.focus-visible),
  button:focus:not(:focus-visible):not(.focus-visible),
  summary:focus:not(:focus-visible):not(.focus-visible),
  a:focus:not(:focus-visible):not(.focus-visible) {
    outline: none;
    box-shadow: none;
  }

  [tabindex="0"]:focus:not(:focus-visible):not(.focus-visible),
  details-dialog:focus:not(:focus-visible):not(.focus-visible) {
    outline: none;
  }
`;
const Base = styled.div.withConfig({
  displayName: "BaseStyles__Base",
  componentId: "qvuaww-0"
})(["", ";", ";"], TYPOGRAPHY, COMMON);

function BaseStyles(props) {
  const {
    children,
    ...rest
  } = props; // load polyfill for :focus-visible

  require('focus-visible');

  return /*#__PURE__*/React.createElement(Base, _extends({}, rest, {
    "data-portal-root": true
  }), /*#__PURE__*/React.createElement(GlobalStyle, null), children);
}

BaseStyles.displayName = "BaseStyles";
BaseStyles.defaultProps = {
  color: 'text.primary',
  fontFamily: 'normal',
  lineHeight: 'default'
};
export default BaseStyles;