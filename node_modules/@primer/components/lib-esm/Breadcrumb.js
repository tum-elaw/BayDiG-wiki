function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import classnames from 'classnames'; // eslint-disable-next-line import/no-namespace

import React from 'react';
import styled from 'styled-components';
import Box from './Box';
import { COMMON, FLEX, get } from './constants';
import sx from './sx';
const SELECTED_CLASS = 'selected';
const Wrapper = styled.li.withConfig({
  displayName: "Breadcrumb__Wrapper",
  componentId: "c1r3ff-0"
})(["display:inline-block;white-space:nowrap;list-style:none;&::after{padding-right:0.5em;padding-left:0.5em;color:", ";font-size:", ";content:'/';}&:first-child{margin-left:0;}&:last-child{&::after{content:none;}}"], get('colors.text.disabled'), get('fontSizes.1'));
const BreadcrumbBase = styled.nav.withConfig({
  displayName: "Breadcrumb__BreadcrumbBase",
  componentId: "c1r3ff-1"
})(["display:flex;justify-content:space-between;", ";", ";", ";"], COMMON, FLEX, sx);

function Breadcrumb({
  className,
  children,
  theme,
  ...rest
}) {
  const classes = classnames(className, 'Breadcrumb');
  const wrappedChildren = React.Children.map(children, child => /*#__PURE__*/React.createElement(Wrapper, {
    theme: theme
  }, child));
  return /*#__PURE__*/React.createElement(BreadcrumbBase, _extends({
    className: classes,
    "aria-label": "breadcrumb",
    theme: theme
  }, rest), /*#__PURE__*/React.createElement(Box, {
    as: "ol",
    my: 0,
    pl: 0
  }, wrappedChildren));
}

Breadcrumb.displayName = "Breadcrumb";
const BreadcrumbItem = styled.a.attrs(props => ({
  activeClassName: typeof props.to === 'string' ? 'selected' : '',
  className: classnames(props.selected && SELECTED_CLASS, props.className),
  'aria-current': props.selected ? 'page' : null
})).withConfig({
  displayName: "Breadcrumb__BreadcrumbItem",
  componentId: "c1r3ff-2"
})(["color:", ";display:inline-block;font-size:", ";text-decoration:none;&:hover{text-decoration:underline;}&.selected{color:", ";pointer-events:none;}", " ", ";"], get('colors.text.link'), get('fontSizes.1'), get('colors.text.primary'), COMMON, sx);
Breadcrumb.displayName = 'Breadcrumb';
BreadcrumbItem.displayName = 'Breadcrumb.Item';
export default Object.assign(Breadcrumb, {
  Item: BreadcrumbItem
});