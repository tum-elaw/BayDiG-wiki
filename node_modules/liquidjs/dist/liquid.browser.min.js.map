{"version":3,"file":"liquid.browser.min.js","sources":["../src/drop/drop.ts","../src/util/underscore.ts","../src/cache/lru.ts","../src/drop/comparable.ts","../src/render/boolean.ts","../src/render/operator.ts","../src/util/operator-trie.ts","../src/liquid-options.ts","../src/util/error.ts","../src/context/context.ts","../src/parser/token-kind.ts","../src/fs/browser.ts","../src/util/type-guards.ts","../src/util/character.ts","../src/parser/whitespace-ctrl.ts","../src/tokens/token.ts","../src/tokens/number-token.ts","../src/tokens/identifier-token.ts","../src/drop/empty-drop.ts","../src/drop/blank-drop.ts","../src/drop/null-drop.ts","../src/util/literal.ts","../src/tokens/literal-token.ts","../src/tokens/operator-token.ts","../src/parser/parse-string-literal.ts","../src/tokens/property-access-token.ts","../src/util/assert.ts","../src/tokens/filter-token.ts","../src/tokens/hash-token.ts","../src/tokens/quoted-token.ts","../src/tokens/html-token.ts","../src/tokens/delimited-token.ts","../src/tokens/tag-token.ts","../src/tokens/range-token.ts","../src/tokens/output-token.ts","../src/parser/tokenizer.ts","../src/parser/match-operator.ts","../src/render/emitter.ts","../src/render/render.ts","../src/parser/parse-stream.ts","../src/template/template-impl.ts","../src/render/expression.ts","../src/template/tag/hash.ts","../src/util/async.ts","../src/template/tag/tag.ts","../src/template/filter/filter.ts","../src/parser/filter-arg.ts","../src/template/value.ts","../src/template/output.ts","../src/template/html.ts","../src/parser/parser.ts","../src/builtin/tags/assign.ts","../src/util/collection.ts","../src/drop/forloop-drop.ts","../src/builtin/tags/for.ts","../src/builtin/tags/capture.ts","../src/context/block-mode.ts","../src/builtin/tags/case.ts","../src/builtin/tags/comment.ts","../src/builtin/tags/include.ts","../src/builtin/tags/render.ts","../src/builtin/tags/decrement.ts","../src/builtin/tags/cycle.ts","../src/builtin/tags/if.ts","../src/builtin/tags/increment.ts","../src/builtin/tags/layout.ts","../src/drop/block-drop.ts","../src/builtin/tags/block.ts","../src/builtin/tags/raw.ts","../src/drop/tablerowloop-drop.ts","../src/builtin/tags/index.ts","../src/builtin/tags/tablerow.ts","../src/builtin/tags/unless.ts","../src/builtin/tags/break.ts","../src/builtin/tags/continue.ts","../src/builtin/filters/html.ts","../src/builtin/filters/math.ts","../src/util/strftime.ts","../src/builtin/filters/url.ts","../src/builtin/filters/array.ts","../src/builtin/filters/date.ts","../src/builtin/filters/object.ts","../src/builtin/filters/string.ts","../src/template/tag/tag-map.ts","../src/template/filter/filter-map.ts","../src/liquid.ts"],"sourcesContent":["export abstract class Drop {\n  public valueOf (): any {\n    return undefined\n  }\n\n  public liquidMethodMissing (key: string): Promise<string | undefined> | string | undefined {\n    return undefined\n  }\n}\n","import { Drop } from '../drop/drop'\n\nconst toStr = Object.prototype.toString\nconst toLowerCase = String.prototype.toLowerCase\n\n/*\n * Checks if value is classified as a String primitive or object.\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is a string, else false.\n */\nexport function isString (value: any): value is string {\n  return toStr.call(value) === '[object String]'\n}\n\nexport function isFunction (value: any): value is Function {\n  return typeof value === 'function'\n}\n\nexport function promisify<T1, T2> (fn: (arg1: T1, cb: (err: Error | null, result: T2) => void) => void): (arg1: T1) => Promise<T2>;\nexport function promisify<T1, T2, T3> (fn: (arg1: T1, arg2: T2, cb: (err: Error | null, result: T3) => void) => void): (arg1: T1, arg2: T2) => Promise<T3>;\nexport function promisify (fn: any) {\n  return function (...args: any[]) {\n    return new Promise((resolve, reject) => {\n      fn(...args, (err: Error, result: any) => {\n        err ? reject(err) : resolve(result)\n      })\n    })\n  }\n}\n\nexport function stringify (value: any): string {\n  value = toValue(value)\n  return isNil(value) ? '' : String(value)\n}\n\nexport function toValue (value: any): any {\n  return value instanceof Drop ? value.valueOf() : value\n}\n\nexport function isNumber (value: any): value is number {\n  return typeof value === 'number'\n}\n\nexport function toLiquid (value: any): any {\n  if (value && isFunction(value.toLiquid)) return toLiquid(value.toLiquid())\n  return value\n}\n\nexport function isNil (value: any): boolean {\n  return value === null || value === undefined\n}\n\nexport function isArray (value: any): value is any[] {\n  // be compatible with IE 8\n  return toStr.call(value) === '[object Array]'\n}\n\n/*\n * Iterates over own enumerable string keyed properties of an object and invokes iteratee for each property.\n * The iteratee is invoked with three arguments: (value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning false.\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @return {Object} Returns object.\n */\nexport function forOwn <T> (\n  object: {[key: string]: T} | undefined,\n  iteratee: ((val: T, key: string, obj: {[key: string]: T}) => boolean | void)\n) {\n  object = object || {}\n  for (const k in object) {\n    if (object.hasOwnProperty(k)) {\n      if (iteratee(object[k], k, object) === false) break\n    }\n  }\n  return object\n}\n\nexport function last <T>(arr: T[]): T;\nexport function last (arr: string): string;\nexport function last (arr: any[] | string): any | string {\n  return arr[arr.length - 1]\n}\n\n/*\n * Checks if value is the language type of Object.\n * (e.g. arrays, functions, objects, regexes, new Number(0), and new String(''))\n * @param {any} value The value to check.\n * @return {Boolean} Returns true if value is an object, else false.\n */\nexport function isObject (value: any): value is object {\n  const type = typeof value\n  return value !== null && (type === 'object' || type === 'function')\n}\n\nexport function range (start: number, stop: number, step = 1) {\n  const arr: number[] = []\n  for (let i = start; i < stop; i += step) {\n    arr.push(i)\n  }\n  return arr\n}\n\nexport function padStart (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => ch + str)\n}\n\nexport function padEnd (str: any, length: number, ch = ' ') {\n  return pad(str, length, ch, (str, ch) => str + ch)\n}\n\nexport function pad (str: any, length: number, ch: string, add: (str: string, ch: string) => string) {\n  str = String(str)\n  let n = length - str.length\n  while (n-- > 0) str = add(str, ch)\n  return str\n}\n\nexport function identify<T> (val: T): T {\n  return val\n}\n\nexport function snakeCase (str: string) {\n  return str.replace(\n    /(\\w?)([A-Z])/g,\n    (_, a, b) => (a ? a + '_' : '') + b.toLowerCase()\n  )\n}\n\nexport function changeCase (str: string): string {\n  const hasLowerCase = [...str].some(ch => ch >= 'a' && ch <= 'z')\n  return hasLowerCase ? str.toUpperCase() : str.toLowerCase()\n}\n\nexport function ellipsis (str: string, N: number): string {\n  return str.length > N ? str.substr(0, N - 3) + '...' : str\n}\n\n// compare string in case-insensitive way, undefined values to the tail\nexport function caseInsensitiveCompare (a: any, b: any) {\n  if (a == null && b == null) return 0\n  if (a == null) return 1\n  if (b == null) return -1\n  a = toLowerCase.call(a)\n  b = toLowerCase.call(b)\n  if (a < b) return -1\n  if (a > b) return 1\n  return 0\n}\n","import { Cache } from './cache'\n\nclass Node<T> {\n  constructor (\n    public key: string,\n    public value: T,\n    public next: Node<T>,\n    public prev: Node<T>\n  ) {}\n}\n\nexport class LRU<T> implements Cache<T> {\n  private cache: { [key: string]: Node<T> } = {}\n  private head: Node<T>\n  private tail: Node<T>\n\n  constructor (\n    public limit: number,\n    public size = 0\n  ) {\n    this.head = new Node<T>('HEAD', null as any, null as any, null as any)\n    this.tail = new Node<T>('TAIL', null as any, null as any, null as any)\n    this.head.next = this.tail\n    this.tail.prev = this.head\n  }\n\n  write (key: string, value: T) {\n    if (this.cache[key]) {\n      this.cache[key].value = value\n    } else {\n      const node = new Node(key, value, this.head.next, this.head)\n      this.head.next.prev = node\n      this.head.next = node\n\n      this.cache[key] = node\n      this.size++\n      this.ensureLimit()\n    }\n  }\n\n  read (key: string): T | undefined {\n    if (!this.cache[key]) return\n    const { value } = this.cache[key]\n    this.remove(key)\n    this.write(key, value)\n    return value\n  }\n\n  remove (key: string) {\n    const node = this.cache[key]\n    node.prev.next = node.next\n    node.next.prev = node.prev\n    delete this.cache[key]\n    this.size--\n  }\n\n  clear () {\n    this.head.next = this.tail\n    this.tail.prev = this.head\n    this.size = 0\n    this.cache = {}\n  }\n\n  private ensureLimit () {\n    if (this.size > this.limit) this.remove(this.tail.prev.key)\n  }\n}\n","import { isFunction } from '../util/underscore'\n\nexport interface Comparable {\n  equals: (rhs: any) => boolean;\n  gt: (rhs: any) => boolean;\n  geq: (rhs: any) => boolean;\n  lt: (rhs: any) => boolean;\n  leq: (rhs: any) => boolean;\n}\n\nexport function isComparable (arg: any): arg is Comparable {\n  return arg && isFunction(arg.equals)\n}\n","import { Context } from '../context/context'\n\nexport function isTruthy (val: any, ctx: Context): boolean {\n  return !isFalsy(val, ctx)\n}\n\nexport function isFalsy (val: any, ctx: Context): boolean {\n  if (ctx.opts.jsTruthy) {\n    return !val\n  } else {\n    return val === false || undefined === val || val === null\n  }\n}\n","import { isComparable } from '../drop/comparable'\nimport { Context } from '../context/context'\nimport { isFunction } from '../util/underscore'\nimport { isTruthy } from '../render/boolean'\n\nexport interface Operators {\n  [key: string]: (lhs: any, rhs: any, ctx: Context) => boolean;\n}\n\nexport const defaultOperators: Operators = {\n  '==': (l: any, r: any) => {\n    if (isComparable(l)) return l.equals(r)\n    if (isComparable(r)) return r.equals(l)\n    return l === r\n  },\n  '!=': (l: any, r: any) => {\n    if (isComparable(l)) return !l.equals(r)\n    if (isComparable(r)) return !r.equals(l)\n    return l !== r\n  },\n  '>': (l: any, r: any) => {\n    if (isComparable(l)) return l.gt(r)\n    if (isComparable(r)) return r.lt(l)\n    return l > r\n  },\n  '<': (l: any, r: any) => {\n    if (isComparable(l)) return l.lt(r)\n    if (isComparable(r)) return r.gt(l)\n    return l < r\n  },\n  '>=': (l: any, r: any) => {\n    if (isComparable(l)) return l.geq(r)\n    if (isComparable(r)) return r.leq(l)\n    return l >= r\n  },\n  '<=': (l: any, r: any) => {\n    if (isComparable(l)) return l.leq(r)\n    if (isComparable(r)) return r.geq(l)\n    return l <= r\n  },\n  'contains': (l: any, r: any) => {\n    return l && isFunction(l.indexOf) ? l.indexOf(r) > -1 : false\n  },\n  'and': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) && isTruthy(r, ctx),\n  'or': (l: any, r: any, ctx: Context) => isTruthy(l, ctx) || isTruthy(r, ctx)\n}\n","import { Operators } from '../render/operator'\n\nexport interface Trie {\n  [key: string]: any;\n}\n\nexport function createTrie (operators: Operators): Trie {\n  const trie: Trie = {}\n  for (const [name, handler] of Object.entries(operators)) {\n    let node = trie\n\n    for (let i = 0; i < name.length; i++) {\n      const c = name[i]\n      node[c] = node[c] || {}\n\n      if (i === name.length - 1 && c !== '=') {\n        node[c].needBoundary = true\n      }\n\n      node = node[c]\n    }\n\n    node.handler = handler\n    node.end = true\n  }\n  return trie\n}\n","import * as _ from './util/underscore'\nimport { Template } from './template/template'\nimport { Cache } from './cache/cache'\nimport { LRU } from './cache/lru'\nimport { FS } from './fs/fs'\nimport { defaultOperators, Operators } from './render/operator'\nimport { createTrie, Trie } from './util/operator-trie'\n\nexport interface LiquidOptions {\n  /** A directory or an array of directories from where to resolve layout and include templates, and the filename passed to `.renderFile()`. If it's an array, the files are looked up in the order they occur in the array. Defaults to `[\".\"]` */\n  root?: string | string[];\n  /** Add a extname (if filepath doesn't include one) before template file lookup. Eg: setting to `\".html\"` will allow including file by basename. Defaults to `\"\"`. */\n  extname?: string;\n  /** Whether or not to cache resolved templates. Defaults to `false`. */\n  cache?: boolean | number | Cache<Template[]>;\n  /** Use Javascript Truthiness. Defaults to `false`. */\n  jsTruthy?: boolean;\n  /** If set, treat the `filepath` parameter in `{%include filepath %}` and `{%layout filepath%}` as a variable, otherwise as a literal value. Defaults to `true`. */\n  dynamicPartials?: boolean;\n  /** Whether or not to assert filter existence. If set to `false`, undefined filters will be skipped. Otherwise, undefined filters will cause an exception. Defaults to `false`. */\n  strictFilters?: boolean;\n  /** Whether or not to assert variable existence.  If set to `false`, undefined variables will be rendered as empty string.  Otherwise, undefined variables will cause an exception. Defaults to `false`. */\n  strictVariables?: boolean;\n  /** Modifies the behavior of `strictVariables`. If set, a single undefined variable will *not* cause an exception in the context of the `if`/`elsif`/`unless` tag and the `default` filter. Instead, it will evaluate to `false` and `null`, respectively. Irrelevant if `strictVariables` is not set. Defaults to `false`. **/\n  lenientIf?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of tags (`{% %}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimTagRight?: boolean;\n  /** Similar to `trimTagRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimTagLeft?: boolean;\n  /** Strip blank characters (including ` `, `\\t`, and `\\r`) from the right of values (`{{ }}`) until `\\n` (inclusive). Defaults to `false`. */\n  trimOutputRight?: boolean;\n  /** Similar to `trimOutputRight`, whereas the `\\n` is exclusive. Defaults to `false`. See Whitespace Control for details. */\n  trimOutputLeft?: boolean;\n  /** The left delimiter for liquid tags. **/\n  tagDelimiterLeft?: string;\n  /** The right delimiter for liquid tags. **/\n  tagDelimiterRight?: string;\n  /** The left delimiter for liquid outputs. **/\n  outputDelimiterLeft?: string;\n  /** The right delimiter for liquid outputs. **/\n  outputDelimiterRight?: string;\n  /** Whether input strings to date filter preserve the given timezone **/\n  preserveTimezones?: boolean;\n  /** Whether `trim*Left`/`trim*Right` is greedy. When set to `true`, all consecutive blank characters including `\\n` will be trimed regardless of line breaks. Defaults to `true`. */\n  greedy?: boolean;\n  /** `fs` is used to override the default file-system module with a custom implementation. */\n  fs?: FS;\n  /** the global environment passed down to all partial templates, i.e. templates included by `include`, `layout` and `render` tags. */\n  globals?: object;\n  /** Whether or not to keep value type when writing the Output. Defaults to `false`. */\n  keepOutputType?: boolean;\n  /** An object of operators for conditional statements. Defaults to the regular Liquid operators. */\n  operators?: Operators;\n}\n\ninterface NormalizedOptions extends LiquidOptions {\n  root?: string[];\n  cache?: Cache<Template[]>;\n  operatorsTrie?: Trie;\n}\n\nexport interface NormalizedFullOptions extends NormalizedOptions {\n  root: string[];\n  extname: string;\n  cache: undefined | Cache<Template[]>;\n  jsTruthy: boolean;\n  dynamicPartials: boolean;\n  strictFilters: boolean;\n  strictVariables: boolean;\n  lenientIf: boolean;\n  trimTagRight: boolean;\n  trimTagLeft: boolean;\n  trimOutputRight: boolean;\n  trimOutputLeft: boolean;\n  tagDelimiterLeft: string;\n  tagDelimiterRight: string;\n  outputDelimiterLeft: string;\n  outputDelimiterRight: string;\n  preserveTimezones: boolean;\n  greedy: boolean;\n  globals: object;\n  keepOutputType: boolean;\n  operators: Operators;\n  operatorsTrie: Trie;\n}\n\nexport const defaultOptions: NormalizedFullOptions = {\n  root: ['.'],\n  cache: undefined,\n  extname: '',\n  dynamicPartials: true,\n  jsTruthy: false,\n  trimTagRight: false,\n  trimTagLeft: false,\n  trimOutputRight: false,\n  trimOutputLeft: false,\n  greedy: true,\n  tagDelimiterLeft: '{%',\n  tagDelimiterRight: '%}',\n  outputDelimiterLeft: '{{',\n  outputDelimiterRight: '}}',\n  preserveTimezones: false,\n  strictFilters: false,\n  strictVariables: false,\n  lenientIf: false,\n  globals: {},\n  keepOutputType: false,\n  operators: defaultOperators,\n  operatorsTrie: createTrie(defaultOperators)\n}\n\nexport function normalize (options?: LiquidOptions): NormalizedOptions {\n  options = options || {}\n  if (options.hasOwnProperty('root')) {\n    options.root = normalizeStringArray(options.root)\n  }\n  if (options.hasOwnProperty('cache')) {\n    let cache: Cache<Template[]> | undefined\n    if (typeof options.cache === 'number') cache = options.cache > 0 ? new LRU(options.cache) : undefined\n    else if (typeof options.cache === 'object') cache = options.cache\n    else cache = options.cache ? new LRU<Template[]>(1024) : undefined\n    options.cache = cache\n  }\n  if (options.hasOwnProperty('operators')) {\n    (options as NormalizedOptions).operatorsTrie = createTrie(options.operators!)\n  }\n  return options as NormalizedOptions\n}\n\nexport function applyDefault (options: NormalizedOptions): NormalizedFullOptions {\n  return { ...defaultOptions, ...options }\n}\n\nexport function normalizeStringArray (value: any): string[] {\n  if (_.isArray(value)) return value as string[]\n  if (_.isString(value)) return [value as string]\n  return []\n}\n","import * as _ from './underscore'\nimport { Token } from '../tokens/token'\nimport { Template } from '../template/template'\n\nabstract class LiquidError extends Error {\n  private token: Token\n  private originalError: Error\n  public constructor (err: Error, token: Token) {\n    super(err.message)\n    this.originalError = err\n    this.token = token\n  }\n  protected update () {\n    const err = this.originalError\n    const context = mkContext(this.token)\n    this.message = mkMessage(err.message, this.token)\n    this.stack = this.message + '\\n' + context +\n      '\\n' + this.stack + '\\nFrom ' + err.stack\n  }\n}\n\nexport class TokenizationError extends LiquidError {\n  public constructor (message: string, token: Token) {\n    super(new Error(message), token)\n    this.name = 'TokenizationError'\n    super.update()\n  }\n}\n\nexport class ParseError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'ParseError'\n    this.message = err.message\n    super.update()\n  }\n}\n\nexport class RenderError extends LiquidError {\n  public constructor (err: Error, tpl: Template) {\n    super(err, tpl.token)\n    this.name = 'RenderError'\n    this.message = err.message\n    super.update()\n  }\n  public static is (obj: any): obj is RenderError {\n    return obj instanceof RenderError\n  }\n}\n\nexport class UndefinedVariableError extends LiquidError {\n  public constructor (err: Error, token: Token) {\n    super(err, token)\n    this.name = 'UndefinedVariableError'\n    this.message = err.message\n    super.update()\n  }\n}\n\n// only used internally; raised where we don't have token information,\n// so it can't be an UndefinedVariableError.\nexport class InternalUndefinedVariableError extends Error {\n  variableName: string\n\n  public constructor (variableName: string) {\n    super(`undefined variable: ${variableName}`)\n    this.name = 'InternalUndefinedVariableError'\n    this.variableName = variableName\n  }\n}\n\nexport class AssertionError extends Error {\n  public constructor (message: string) {\n    super(message)\n    this.name = 'AssertionError'\n    this.message = message + ''\n  }\n}\n\nfunction mkContext (token: Token) {\n  const [line] = token.getPosition()\n  const lines = token.input.split('\\n')\n  const begin = Math.max(line - 2, 1)\n  const end = Math.min(line + 3, lines.length)\n\n  const context = _\n    .range(begin, end + 1)\n    .map(lineNumber => {\n      const indicator = (lineNumber === line) ? '>> ' : '   '\n      const num = _.padStart(String(lineNumber), String(end).length)\n      const text = lines[lineNumber - 1]\n      return `${indicator}${num}| ${text}`\n    })\n    .join('\\n')\n\n  return context\n}\n\nfunction mkMessage (msg: string, token: Token) {\n  if (token.file) msg += `, file:${token.file}`\n  const [line, col] = token.getPosition()\n  msg += `, line:${line}, col:${col}`\n  return msg\n}\n","import { Drop } from '../drop/drop'\nimport { __assign } from 'tslib'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { Scope } from './scope'\nimport { isArray, isNil, isString, isFunction, toLiquid } from '../util/underscore'\nimport { InternalUndefinedVariableError } from '../util/error'\n\nexport class Context {\n  private scopes: Scope[] = [{}]\n  private registers = {}\n  public environments: Scope\n  public globals: Scope\n  public sync: boolean\n  public opts: NormalizedFullOptions\n  public constructor (env: object = {}, opts: NormalizedFullOptions = defaultOptions, sync = false) {\n    this.sync = sync\n    this.opts = opts\n    this.globals = opts.globals\n    this.environments = env\n  }\n  public getRegister (key: string, defaultValue = {}) {\n    return (this.registers[key] = this.registers[key] || defaultValue)\n  }\n  public setRegister (key: string, value: any) {\n    return (this.registers[key] = value)\n  }\n  public saveRegister (...keys: string[]): [string, any][] {\n    return keys.map(key => [key, this.getRegister(key)])\n  }\n  public restoreRegister (keyValues: [string, any][]) {\n    return keyValues.forEach(([key, value]) => this.setRegister(key, value))\n  }\n  public getAll () {\n    return [this.globals, this.environments, ...this.scopes]\n      .reduce((ctx, val) => __assign(ctx, val), {})\n  }\n  public get (paths: string[]) {\n    const scope = this.findScope(paths[0])\n    return this.getFromScope(scope, paths)\n  }\n  public getFromScope (scope: object, paths: string[] | string) {\n    if (typeof paths === 'string') paths = paths.split('.')\n    return paths.reduce((scope, path) => {\n      scope = readProperty(scope, path)\n      if (isNil(scope) && this.opts.strictVariables) {\n        throw new InternalUndefinedVariableError(path)\n      }\n      return scope\n    }, scope)\n  }\n  public push (ctx: object) {\n    return this.scopes.push(ctx)\n  }\n  public pop () {\n    return this.scopes.pop()\n  }\n  public bottom () {\n    return this.scopes[0]\n  }\n  private findScope (key: string) {\n    for (let i = this.scopes.length - 1; i >= 0; i--) {\n      const candidate = this.scopes[i]\n      if (key in candidate) return candidate\n    }\n    if (key in this.environments) return this.environments\n    return this.globals\n  }\n}\n\nexport function readProperty (obj: Scope, key: string) {\n  if (isNil(obj)) return obj\n  obj = toLiquid(obj)\n  if (obj instanceof Drop) {\n    if (isFunction(obj[key])) return obj[key]()\n    if (obj.hasOwnProperty(key)) return obj[key]\n    return obj.liquidMethodMissing(key)\n  }\n  if (key === 'size') return readSize(obj)\n  if (key === 'first') return readFirst(obj)\n  if (key === 'last') return readLast(obj)\n  return obj[key]\n}\n\nfunction readFirst (obj: Scope) {\n  if (isArray(obj)) return obj[0]\n  return obj['first']\n}\n\nfunction readLast (obj: Scope) {\n  if (isArray(obj)) return obj[obj.length - 1]\n  return obj['last']\n}\n\nfunction readSize (obj: Scope) {\n  if (isArray(obj) || isString(obj)) return obj.length\n  return obj['size']\n}\n","export enum TokenKind {\n  Number = 1,\n  Literal = 2,\n  Tag = 4,\n  Output = 8,\n  HTML = 16,\n  Filter = 32,\n  Hash = 64,\n  PropertyAccess = 128,\n  Word = 256,\n  Range = 512,\n  Quoted = 1024,\n  Operator = 2048,\n  Delimited = Tag | Output\n}\n","import { last } from '../util/underscore'\n\nfunction domResolve (root: string, path: string) {\n  const base = document.createElement('base')\n  base.href = root\n\n  const head = document.getElementsByTagName('head')[0]\n  head.insertBefore(base, head.firstChild)\n\n  const a = document.createElement('a')\n  a.href = path\n  const resolved = a.href\n  head.removeChild(base)\n\n  return resolved\n}\n\nexport function resolve (root: string, filepath: string, ext: string) {\n  if (root.length && last(root) !== '/') root += '/'\n  const url = domResolve(root, filepath)\n  return url.replace(/^(\\w+:\\/\\/[^/]+)(\\/[^?]+)/, (str, origin, path) => {\n    const last = path.split('/').pop()\n    if (/\\.\\w+$/.test(last)) return str\n    return origin + path + ext\n  })\n}\n\nexport async function readFile (url: string): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest()\n    xhr.onload = () => {\n      if (xhr.status >= 200 && xhr.status < 300) {\n        resolve(xhr.responseText as string)\n      } else {\n        reject(new Error(xhr.statusText))\n      }\n    }\n    xhr.onerror = () => {\n      reject(new Error('An error occurred whilst receiving the response.'))\n    }\n    xhr.open('GET', url)\n    xhr.send()\n  })\n}\n\nexport function readFileSync (url: string): string {\n  const xhr = new XMLHttpRequest()\n  xhr.open('GET', url, false)\n  xhr.send()\n  if (xhr.status < 200 || xhr.status >= 300) {\n    throw new Error(xhr.statusText)\n  }\n  return xhr.responseText as string\n}\n\nexport async function exists (filepath: string) {\n  return true\n}\n\nexport function existsSync (filepath: string) {\n  return true\n}\n","import { OperatorToken } from '../tokens/operator-token'\nimport { DelimitedToken } from '../tokens/delimited-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { HTMLToken } from '../tokens/html-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport function isDelimitedToken (val: any): val is DelimitedToken {\n  return !!(getKind(val) & TokenKind.Delimited)\n}\n\nexport function isOperatorToken (val: any): val is OperatorToken {\n  return getKind(val) === TokenKind.Operator\n}\n\nexport function isHTMLToken (val: any): val is HTMLToken {\n  return getKind(val) === TokenKind.HTML\n}\n\nexport function isOutputToken (val: any): val is OutputToken {\n  return getKind(val) === TokenKind.Output\n}\n\nexport function isTagToken (val: any): val is TagToken {\n  return getKind(val) === TokenKind.Tag\n}\n\nexport function isQuotedToken (val: any): val is QuotedToken {\n  return getKind(val) === TokenKind.Quoted\n}\n\nexport function isLiteralToken (val: any): val is LiteralToken {\n  return getKind(val) === TokenKind.Literal\n}\n\nexport function isNumberToken (val: any): val is NumberToken {\n  return getKind(val) === TokenKind.Number\n}\n\nexport function isPropertyAccessToken (val: any): val is PropertyAccessToken {\n  return getKind(val) === TokenKind.PropertyAccess\n}\n\nexport function isWordToken (val: any): val is IdentifierToken {\n  return getKind(val) === TokenKind.Word\n}\n\nexport function isRangeToken (val: any): val is RangeToken {\n  return getKind(val) === TokenKind.Range\n}\n\nfunction getKind (val: any) {\n  return val ? val.kind : -1\n}\n","// **DO NOT CHANGE THIS FILE**\n//\n// This file is generated by bin/character-gen.js\n// bitmask character types to boost performance\nexport const TYPES = [0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 4, 4, 4, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 2, 8, 0, 0, 0, 0, 8, 0, 0, 0, 64, 0, 65, 0, 0, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 0, 0, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0]\nexport const IDENTIFIER = 1\nexport const OPERATOR = 2\nexport const BLANK = 4\nexport const QUOTE = 8\nexport const INLINE_BLANK = 16\nexport const NUMBER = 32\nexport const SIGN = 64\nTYPES[160] = TYPES[5760] = TYPES[6158] = TYPES[8192] = TYPES[8193] = TYPES[8194] = TYPES[8195] = TYPES[8196] = TYPES[8197] = TYPES[8198] = TYPES[8199] = TYPES[8200] = TYPES[8201] = TYPES[8202] = TYPES[8232] = TYPES[8233] = TYPES[8239] = TYPES[8287] = TYPES[12288] = BLANK\n","import { Token } from '../tokens/token'\nimport { isTagToken, isHTMLToken, isDelimitedToken } from '../util/type-guards'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TYPES, INLINE_BLANK, BLANK } from '../util/character'\n\nexport function whiteSpaceCtrl (tokens: Token[], options: NormalizedFullOptions) {\n  let inRaw = false\n\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i]\n    if (!isDelimitedToken(token)) continue\n    if (!inRaw && token.trimLeft) {\n      trimLeft(tokens[i - 1], options.greedy)\n    }\n\n    if (isTagToken(token)) {\n      if (token.name === 'raw') inRaw = true\n      else if (token.name === 'endraw') inRaw = false\n    }\n\n    if (!inRaw && token.trimRight) {\n      trimRight(tokens[i + 1], options.greedy)\n    }\n  }\n}\n\nfunction trimLeft (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.end - 1 - token.trimRight)] & mask) token.trimRight++\n}\n\nfunction trimRight (token: Token, greedy: boolean) {\n  if (!token || !isHTMLToken(token)) return\n\n  const mask = greedy ? BLANK : INLINE_BLANK\n  while (TYPES[token.input.charCodeAt(token.begin + token.trimLeft)] & mask) token.trimLeft++\n  if (token.input.charAt(token.begin + token.trimLeft) === '\\n') token.trimLeft++\n}\n","import { TokenKind } from '../parser/token-kind'\n\nexport abstract class Token {\n  public constructor (\n    public kind: TokenKind,\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {}\n  public getText () {\n    return this.input.slice(this.begin, this.end)\n  }\n  public getPosition () {\n    let [row, col] = [1, 1]\n    for (let i = 0; i < this.begin; i++) {\n      if (this.input[i] === '\\n') {\n        row++\n        col = 1\n      } else col++\n    }\n    return [row, col]\n  }\n  public size () {\n    return this.end - this.begin\n  }\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class NumberToken extends Token {\n  constructor (\n    public whole: IdentifierToken,\n    public decimal?: IdentifierToken\n  ) {\n    super(TokenKind.Number, whole.input, whole.begin, decimal ? decimal.end : whole.end, whole.file)\n  }\n}\n","import { Token } from './token'\nimport { NUMBER, TYPES, SIGN } from '../util/character'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class IdentifierToken extends Token {\n  public content: string\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Word, input, begin, end, file)\n    this.content = this.getText()\n  }\n  isNumber (allowSign = false) {\n    const begin = allowSign && TYPES[this.input.charCodeAt(this.begin)] & SIGN\n      ? this.begin + 1\n      : this.begin\n    for (let i = begin; i < this.end; i++) {\n      if (!(TYPES[this.input.charCodeAt(i)] & NUMBER)) return false\n    }\n    return true\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isObject, isString, isArray } from '../util/underscore'\n\nexport class EmptyDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    if (isString(value) || isArray(value)) return value.length === 0\n    if (isObject(value)) return Object.keys(value).length === 0\n    return false\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return ''\n  }\n}\n","import { isNil, isString, toValue } from '../util/underscore'\nimport { EmptyDrop } from '../drop/empty-drop'\n\nexport class BlankDrop extends EmptyDrop {\n  public equals (value: any) {\n    if (value === false) return true\n    if (isNil(toValue(value))) return true\n    if (isString(value)) return /^\\s*$/.test(value)\n    return super.equals(value)\n  }\n}\n","import { Drop } from './drop'\nimport { Comparable } from './comparable'\nimport { isNil, toValue } from '../util/underscore'\nimport { BlankDrop } from '../drop/blank-drop'\n\nexport class NullDrop extends Drop implements Comparable {\n  public equals (value: any) {\n    return isNil(toValue(value)) || value instanceof BlankDrop\n  }\n  public gt () {\n    return false\n  }\n  public geq () {\n    return false\n  }\n  public lt () {\n    return false\n  }\n  public leq () {\n    return false\n  }\n  public valueOf () {\n    return null\n  }\n}\n","import { NullDrop } from '../drop/null-drop'\nimport { EmptyDrop } from '../drop/empty-drop'\nimport { BlankDrop } from '../drop/blank-drop'\n\nexport const literalValues = {\n  'true': true,\n  'false': false,\n  'nil': new NullDrop(),\n  'null': new NullDrop(),\n  'empty': new EmptyDrop(),\n  'blank': new BlankDrop()\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class LiteralToken extends Token {\n  public literal: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Literal, input, begin, end, file)\n    this.literal = this.getText()\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport const precedence = {\n  '==': 1,\n  '!=': 1,\n  '>': 1,\n  '<': 1,\n  '>=': 1,\n  '<=': 1,\n  'contains': 1,\n  'and': 0,\n  'or': 0\n}\n\nexport class OperatorToken extends Token {\n  public operator: string\n  public constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Operator, input, begin, end, file)\n    this.operator = this.getText()\n  }\n  getPrecedence () {\n    const key = this.getText()\n    return key in precedence ? precedence[key] : 1\n  }\n}\n","const rHex = /[\\da-fA-F]/\nconst rOct = /[0-7]/\nconst escapeChar = {\n  b: '\\b',\n  f: '\\f',\n  n: '\\n',\n  r: '\\r',\n  t: '\\t',\n  v: '\\x0B'\n}\n\nfunction hexVal (c: string) {\n  const code = c.charCodeAt(0)\n  if (code >= 97) return code - 87\n  if (code >= 65) return code - 55\n  return code - 48\n}\n\nexport function parseStringLiteral (str: string): string {\n  let ret = ''\n  for (let i = 1; i < str.length - 1; i++) {\n    if (str[i] !== '\\\\') {\n      ret += str[i]\n      continue\n    }\n    if (escapeChar[str[i + 1]] !== undefined) {\n      ret += escapeChar[str[++i]]\n    } else if (str[i + 1] === 'u') {\n      let val = 0\n      let j = i + 2\n      while (j <= i + 5 && rHex.test(str[j])) {\n        val = val * 16 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    } else if (!rOct.test(str[i + 1])) {\n      ret += str[++i]\n    } else {\n      let j = i + 1\n      let val = 0\n      while (j <= i + 3 && rOct.test(str[j])) {\n        val = val * 8 + hexVal(str[j++])\n      }\n      i = j - 1\n      ret += String.fromCharCode(val)\n    }\n  }\n  return ret\n}\n","import { Token } from './token'\nimport { IdentifierToken } from './identifier-token'\nimport { QuotedToken } from './quoted-token'\nimport { TokenKind } from '../parser/token-kind'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\n\nexport class PropertyAccessToken extends Token {\n  constructor (\n    public variable: IdentifierToken | QuotedToken,\n    public props: (IdentifierToken | QuotedToken | PropertyAccessToken)[],\n    end: number\n  ) {\n    super(TokenKind.PropertyAccess, variable.input, variable.begin, end, variable.file)\n  }\n\n  getVariableAsText () {\n    if (this.variable instanceof IdentifierToken) {\n      return this.variable.getText()\n    } else {\n      return parseStringLiteral(this.variable.getText())\n    }\n  }\n}\n","import { AssertionError } from './error'\n\nexport function assert <T> (predicate: T | null | undefined, message?: () => string) {\n  if (!predicate) {\n    const msg = message ? message() : `expect ${predicate} to be true`\n    throw new AssertionError(msg)\n  }\n}\n","import { Token } from './token'\nimport { FilterArg } from '../parser/filter-arg'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class FilterToken extends Token {\n  public constructor (\n    public name: string,\n    public args: FilterArg[],\n    input: string,\n    begin: number,\n    end: number,\n    file?: string\n  ) {\n    super(TokenKind.Filter, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { IdentifierToken } from './identifier-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HashToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public name: IdentifierToken,\n    public value?: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Hash, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class QuotedToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.Quoted, input, begin, end, file)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class HTMLToken extends Token {\n  trimLeft = 0\n  trimRight = 0\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public file?: string\n  ) {\n    super(TokenKind.HTML, input, begin, end, file)\n  }\n  public getContent () {\n    return this.input.slice(this.begin + this.trimLeft, this.end - this.trimRight)\n  }\n}\n","import { Token } from './token'\nimport { TokenKind } from '../parser/token-kind'\nimport { last } from '../util/underscore'\n\nexport abstract class DelimitedToken extends Token {\n  public trimLeft = false\n  public trimRight = false\n  public content: string\n  public constructor (\n    kind: TokenKind,\n    content: string,\n    input: string,\n    begin: number,\n    end: number,\n    trimLeft: boolean,\n    trimRight: boolean,\n    file?: string\n  ) {\n    super(kind, input, begin, end, file)\n    this.content = this.getText()\n    const tl = content[0] === '-'\n    const tr = last(content) === '-'\n    this.content = content\n      .slice(\n        tl ? 1 : 0,\n        tr ? -1 : content.length\n      )\n      .trim()\n    this.trimLeft = tl || trimLeft\n    this.trimRight = tr || trimRight\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\nimport { Tokenizer } from '../parser/tokenizer'\n\nexport class TagToken extends DelimitedToken {\n  public name: string\n  public args: string\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimTagLeft, trimTagRight, tagDelimiterLeft, tagDelimiterRight } = options\n    const value = input.slice(begin + tagDelimiterLeft.length, end - tagDelimiterRight.length)\n    super(TokenKind.Tag, value, input, begin, end, trimTagLeft, trimTagRight, file)\n\n    const tokenizer = new Tokenizer(this.content, options.operatorsTrie)\n    this.name = tokenizer.readIdentifier().getText()\n    if (!this.name) throw new TokenizationError(`illegal tag syntax`, this)\n\n    tokenizer.skipBlank()\n    this.args = tokenizer.remaining()\n  }\n}\n","import { Token } from './token'\nimport { ValueToken } from './value-token'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class RangeToken extends Token {\n  constructor (\n    public input: string,\n    public begin: number,\n    public end: number,\n    public lhs: ValueToken,\n    public rhs: ValueToken,\n    public file?: string\n  ) {\n    super(TokenKind.Range, input, begin, end, file)\n  }\n}\n","import { DelimitedToken } from './delimited-token'\nimport { NormalizedFullOptions } from '../liquid-options'\nimport { TokenKind } from '../parser/token-kind'\n\nexport class OutputToken extends DelimitedToken {\n  public constructor (\n    input: string,\n    begin: number,\n    end: number,\n    options: NormalizedFullOptions,\n    file?: string\n  ) {\n    const { trimOutputLeft, trimOutputRight, outputDelimiterLeft, outputDelimiterRight } = options\n    const value = input.slice(begin + outputDelimiterLeft.length, end - outputDelimiterRight.length)\n    super(TokenKind.Output, value, input, begin, end, trimOutputLeft, trimOutputRight, file)\n  }\n}\n","import { whiteSpaceCtrl } from './whitespace-ctrl'\nimport { NumberToken } from '../tokens/number-token'\nimport { IdentifierToken } from '../tokens/identifier-token'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { PropertyAccessToken } from '../tokens/property-access-token'\nimport { assert } from '../util/assert'\nimport { TopLevelToken } from '../tokens/toplevel-token'\nimport { FilterArg } from './filter-arg'\nimport { FilterToken } from '../tokens/filter-token'\nimport { HashToken } from '../tokens/hash-token'\nimport { QuotedToken } from '../tokens/quoted-token'\nimport { ellipsis } from '../util/underscore'\nimport { HTMLToken } from '../tokens/html-token'\nimport { TagToken } from '../tokens/tag-token'\nimport { Token } from '../tokens/token'\nimport { RangeToken } from '../tokens/range-token'\nimport { ValueToken } from '../tokens/value-token'\nimport { OutputToken } from '../tokens/output-token'\nimport { TokenizationError } from '../util/error'\nimport { NormalizedFullOptions, defaultOptions } from '../liquid-options'\nimport { TYPES, QUOTE, BLANK, IDENTIFIER } from '../util/character'\nimport { matchOperator } from './match-operator'\nimport { Trie } from '../util/operator-trie'\n\nexport class Tokenizer {\n  p = 0\n  N: number\n  private rawBeginAt = -1\n\n  constructor (\n    private input: string,\n    private trie: Trie,\n    private file: string = ''\n  ) {\n    this.N = input.length\n  }\n\n  * readExpression (): IterableIterator<Token> {\n    const operand = this.readValue()\n    if (!operand) return\n\n    yield operand\n\n    while (this.p < this.N) {\n      const operator = this.readOperator()\n      if (!operator) return\n\n      const operand = this.readValue()\n      if (!operand) return\n\n      yield operator\n      yield operand\n    }\n  }\n  readOperator (): OperatorToken | undefined {\n    this.skipBlank()\n    const end = matchOperator(this.input, this.p, this.trie, this.p + 8)\n    if (end === -1) return\n    return new OperatorToken(this.input, this.p, (this.p = end), this.file)\n  }\n  readFilters (): FilterToken[] {\n    const filters = []\n    while (true) {\n      const filter = this.readFilter()\n      if (!filter) return filters\n      filters.push(filter)\n    }\n  }\n  readFilter (): FilterToken | null {\n    this.skipBlank()\n    if (this.end()) return null\n    assert(this.peek() === '|', () => `unexpected token at ${this.snapshot()}`)\n    this.p++\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return null\n    const args = []\n    this.skipBlank()\n    if (this.peek() === ':') {\n      do {\n        ++this.p\n        const arg = this.readFilterArg()\n        arg && args.push(arg)\n        while (this.p < this.N && this.peek() !== ',' && this.peek() !== '|') ++this.p\n      } while (this.peek() === ',')\n    }\n    return new FilterToken(name.getText(), args, this.input, begin, this.p, this.file)\n  }\n\n  readFilterArg (): FilterArg | undefined {\n    const key = this.readValue()\n    if (!key) return\n    this.skipBlank()\n    if (this.peek() !== ':') return key\n    ++this.p\n    const value = this.readValue()\n    return [key.getText(), value]\n  }\n\n  readTopLevelTokens (options: NormalizedFullOptions = defaultOptions): TopLevelToken[] {\n    const tokens: TopLevelToken[] = []\n    while (this.p < this.N) {\n      const token = this.readTopLevelToken(options)\n      tokens.push(token)\n    }\n    whiteSpaceCtrl(tokens, options)\n    return tokens\n  }\n\n  readTopLevelToken (options: NormalizedFullOptions): TopLevelToken {\n    const { tagDelimiterLeft, outputDelimiterLeft } = options\n    if (this.rawBeginAt > -1) return this.readEndrawOrRawContent(options)\n    if (this.match(tagDelimiterLeft)) return this.readTagToken(options)\n    if (this.match(outputDelimiterLeft)) return this.readOutputToken(options)\n    return this.readHTMLToken(options)\n  }\n\n  readHTMLToken (options: NormalizedFullOptions): HTMLToken {\n    const begin = this.p\n    while (this.p < this.N) {\n      const { tagDelimiterLeft, outputDelimiterLeft } = options\n      if (this.match(tagDelimiterLeft)) break\n      if (this.match(outputDelimiterLeft)) break\n      ++this.p\n    }\n    return new HTMLToken(this.input, begin, this.p, this.file)\n  }\n\n  readTagToken (options: NormalizedFullOptions = defaultOptions): TagToken {\n    const { file, input } = this\n    const begin = this.p\n    if (this.readToDelimiter(options.tagDelimiterRight) === -1) {\n      throw this.mkError(`tag ${this.snapshot(begin)} not closed`, begin)\n    }\n    const token = new TagToken(input, begin, this.p, options, file)\n    if (token.name === 'raw') this.rawBeginAt = begin\n    return token\n  }\n\n  readToDelimiter (delimiter: string) {\n    while (this.p < this.N) {\n      if ((this.peekType() & QUOTE)) {\n        this.readQuoted()\n        continue\n      }\n      ++this.p\n      if (this.rmatch(delimiter)) return this.p\n    }\n    return -1\n  }\n\n  readOutputToken (options: NormalizedFullOptions = defaultOptions): OutputToken {\n    const { file, input } = this\n    const { outputDelimiterRight } = options\n    const begin = this.p\n    if (this.readToDelimiter(outputDelimiterRight) === -1) {\n      throw this.mkError(`output ${this.snapshot(begin)} not closed`, begin)\n    }\n    return new OutputToken(input, begin, this.p, options, file)\n  }\n\n  readEndrawOrRawContent (options: NormalizedFullOptions): HTMLToken | TagToken {\n    const { tagDelimiterLeft, tagDelimiterRight } = options\n    const begin = this.p\n    let leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n    while (this.p < this.N) {\n      if (this.readIdentifier().getText() !== 'endraw') {\n        leftPos = this.readTo(tagDelimiterLeft) - tagDelimiterLeft.length\n        continue\n      }\n      while (this.p <= this.N) {\n        if (this.rmatch(tagDelimiterRight)) {\n          const end = this.p\n          if (begin === leftPos) {\n            this.rawBeginAt = -1\n            return new TagToken(this.input, begin, end, options, this.file)\n          } else {\n            this.p = leftPos\n            return new HTMLToken(this.input, begin, leftPos, this.file)\n          }\n        }\n        if (this.rmatch(tagDelimiterLeft)) break\n        this.p++\n      }\n    }\n    throw this.mkError(`raw ${this.snapshot(this.rawBeginAt)} not closed`, begin)\n  }\n\n  mkError (msg: string, begin: number) {\n    return new TokenizationError(msg, new IdentifierToken(this.input, begin, this.N, this.file))\n  }\n\n  snapshot (begin: number = this.p) {\n    return JSON.stringify(ellipsis(this.input.slice(begin), 16))\n  }\n\n  /**\n   * @deprecated\n   */\n  readWord () {\n    console.warn('Tokenizer#readWord() will be removed, use #readIdentifier instead')\n    return this.readIdentifier()\n  }\n\n  readIdentifier (): IdentifierToken {\n    this.skipBlank()\n    const begin = this.p\n    while (this.peekType() & IDENTIFIER) ++this.p\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  readHashes () {\n    const hashes = []\n    while (true) {\n      const hash = this.readHash()\n      if (!hash) return hashes\n      hashes.push(hash)\n    }\n  }\n\n  readHash (): HashToken | undefined {\n    this.skipBlank()\n    if (this.peek() === ',') ++this.p\n    const begin = this.p\n    const name = this.readIdentifier()\n    if (!name.size()) return\n    let value\n\n    this.skipBlank()\n    if (this.peek() === ':') {\n      ++this.p\n      value = this.readValue()\n    }\n    return new HashToken(this.input, begin, this.p, name, value, this.file)\n  }\n\n  remaining () {\n    return this.input.slice(this.p)\n  }\n\n  advance (i = 1) {\n    this.p += i\n  }\n\n  end () {\n    return this.p >= this.N\n  }\n\n  readTo (end: string): number {\n    while (this.p < this.N) {\n      ++this.p\n      if (this.rmatch(end)) return this.p\n    }\n    return -1\n  }\n\n  readValue (): ValueToken | undefined {\n    const value = this.readQuoted() || this.readRange()\n    if (value) return value\n\n    if (this.peek() === '[') {\n      this.p++\n      const prop = this.readQuoted()\n      if (!prop) return\n      if (this.peek() !== ']') return\n      this.p++\n      return new PropertyAccessToken(prop, [], this.p)\n    }\n\n    const variable = this.readIdentifier()\n    if (!variable.size()) return\n\n    let isNumber = variable.isNumber(true)\n    const props: (QuotedToken | IdentifierToken)[] = []\n    while (true) {\n      if (this.peek() === '[') {\n        isNumber = false\n        this.p++\n        const prop = this.readValue() || new IdentifierToken(this.input, this.p, this.p, this.file)\n        this.readTo(']')\n        props.push(prop)\n      } else if (this.peek() === '.' && this.peek(1) !== '.') { // skip range syntax\n        this.p++\n        const prop = this.readIdentifier()\n        if (!prop.size()) break\n        if (!prop.isNumber()) isNumber = false\n        props.push(prop)\n      } else break\n    }\n    if (!props.length && literalValues.hasOwnProperty(variable.content)) {\n      return new LiteralToken(this.input, variable.begin, variable.end, this.file)\n    }\n    if (isNumber) return new NumberToken(variable, props[0] as IdentifierToken)\n    return new PropertyAccessToken(variable, props, this.p)\n  }\n\n  readRange (): RangeToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (this.peek() !== '(') return\n    ++this.p\n    const lhs = this.readValueOrThrow()\n    this.p += 2\n    const rhs = this.readValueOrThrow()\n    ++this.p\n    return new RangeToken(this.input, begin, this.p, lhs, rhs, this.file)\n  }\n\n  readValueOrThrow (): ValueToken {\n    const value = this.readValue()\n    assert(value, () => `unexpected token ${this.snapshot()}, value expected`)\n    return value!\n  }\n\n  readQuoted (): QuotedToken | undefined {\n    this.skipBlank()\n    const begin = this.p\n    if (!(this.peekType() & QUOTE)) return\n    ++this.p\n    let escaped = false\n    while (this.p < this.N) {\n      ++this.p\n      if (this.input[this.p - 1] === this.input[begin] && !escaped) break\n      if (escaped) escaped = false\n      else if (this.input[this.p - 1] === '\\\\') escaped = true\n    }\n    return new QuotedToken(this.input, begin, this.p, this.file)\n  }\n\n  readFileName (): IdentifierToken {\n    const begin = this.p\n    while (!(this.peekType() & BLANK) && this.peek() !== ',' && this.p < this.N) this.p++\n    return new IdentifierToken(this.input, begin, this.p, this.file)\n  }\n\n  match (word: string) {\n    for (let i = 0; i < word.length; i++) {\n      if (word[i] !== this.input[this.p + i]) return false\n    }\n    return true\n  }\n\n  rmatch (pattern: string) {\n    for (let i = 0; i < pattern.length; i++) {\n      if (pattern[pattern.length - 1 - i] !== this.input[this.p - 1 - i]) return false\n    }\n    return true\n  }\n\n  peekType (n = 0) {\n    return TYPES[this.input.charCodeAt(this.p + n)]\n  }\n\n  peek (n = 0) {\n    return this.input[this.p + n]\n  }\n\n  skipBlank () {\n    while (this.peekType() & BLANK) ++this.p\n  }\n}\n","import { IDENTIFIER } from '../util/character'\nimport { Trie } from '../util/operator-trie'\n\nexport function matchOperator (str: string, begin: number, trie: Trie, end = str.length) {\n  let node = trie\n  let i = begin\n  let info\n  while (node[str[i]] && i < end) {\n    node = node[str[i++]]\n    if (node['end']) info = node\n  }\n  if (!info) return -1\n  if (info['needBoundary'] && str.charCodeAt(i) & IDENTIFIER) return -1\n  return i\n}\n","import { stringify, toValue } from '../util/underscore'\n\nexport class Emitter {\n  public html: any = '';\n  public break = false;\n  public continue = false;\n  private keepOutputType? = false;\n\n  constructor (keepOutputType: boolean|undefined) {\n    this.keepOutputType = keepOutputType\n  }\n\n  public write (html: any) {\n    if (this.keepOutputType === true) {\n      html = toValue(html)\n    } else {\n      html = stringify(toValue(html))\n    }\n    // This will only preserve the type if the value is isolated.\n    // I.E:\n    // {{ my-port }} -> 42\n    // {{ my-host }}:{{ my-port }} -> 'host:42'\n    if (this.keepOutputType === true && typeof html !== 'string' && this.html === '') {\n      this.html = html\n    } else {\n      this.html = stringify(this.html) + stringify(html)\n    }\n  }\n}\n","import { RenderError } from '../util/error'\nimport { Context } from '../context/context'\nimport { Template } from '../template/template'\nimport { Emitter } from './emitter'\n\nexport class Render {\n  public * renderTemplates (templates: Template[], ctx: Context, emitter?: Emitter): IterableIterator<any> {\n    if (!emitter) {\n      emitter = new Emitter(ctx.opts.keepOutputType)\n    }\n    for (const tpl of templates) {\n      try {\n        const html = yield tpl.render(ctx, emitter)\n        html && emitter.write(html)\n        if (emitter.break || emitter.continue) break\n      } catch (e) {\n        const err = RenderError.is(e) ? e : new RenderError(e, tpl)\n        throw err\n      }\n    }\n    return emitter.html\n  }\n}\n","import { Token } from '../tokens/token'\nimport { Template } from '../template/template'\nimport { isTagToken } from '../util/type-guards'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\ntype ParseToken<T extends Token> = ((token: T, remainTokens: T[]) => Template)\n\nexport class ParseStream<T extends Token = TopLevelToken> {\n  private tokens: T[]\n  private handlers: {[key: string]: (arg: any) => void} = {}\n  private stopRequested = false\n  private parseToken: ParseToken<T>\n\n  public constructor (tokens: T[], parseToken: ParseToken<T>) {\n    this.tokens = tokens\n    this.parseToken = parseToken\n  }\n  public on<T2 extends Template | T | undefined> (name: string, cb: (arg: T2) => void): ParseStream<T> {\n    this.handlers[name] = cb\n    return this\n  }\n  private trigger <T extends Token | Template> (event: string, arg?: T) {\n    const h = this.handlers[event]\n    return h ? (h(arg), true) : false\n  }\n  public start () {\n    this.trigger('start')\n    let token: T | undefined\n    while (!this.stopRequested && (token = this.tokens.shift())) {\n      if (this.trigger('token', token)) continue\n      if (isTagToken(token) && this.trigger(`tag:${token.name}`, token)) {\n        continue\n      }\n      const template = this.parseToken(token, this.tokens)\n      this.trigger('template', template)\n    }\n    if (!this.stopRequested) this.trigger('end')\n    return this\n  }\n  public stop () {\n    this.stopRequested = true\n    return this\n  }\n}\n","export abstract class TemplateImpl<T> {\n  public token: T;\n  public constructor (token: T) {\n    this.token = token\n  }\n}\n","import { QuotedToken } from '../tokens/quoted-token'\nimport { NumberToken } from '../tokens/number-token'\nimport { assert } from '../util/assert'\nimport { literalValues } from '../util/literal'\nimport { LiteralToken } from '../tokens/literal-token'\nimport * as TypeGuards from '../util/type-guards'\nimport { Token } from '../tokens/token'\nimport { OperatorToken } from '../tokens/operator-token'\nimport { RangeToken } from '../tokens/range-token'\nimport { parseStringLiteral } from '../parser/parse-string-literal'\nimport { Context } from '../context/context'\nimport { range, toValue } from '../util/underscore'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { Operators } from '../render/operator'\nimport { UndefinedVariableError, InternalUndefinedVariableError } from '../util/error'\nimport { Trie } from '../util/operator-trie'\n\nexport class Expression {\n  private operands: any[] = []\n  private postfix: Token[]\n  private lenient: boolean\n  private operators: Operators\n\n  public constructor (str: string, operators: Operators, operatorsTrie: Trie, lenient = false) {\n    const tokenizer = new Tokenizer(str, operatorsTrie)\n    this.postfix = [...toPostfix(tokenizer.readExpression())]\n    this.lenient = lenient\n    this.operators = operators\n  }\n  public evaluate (ctx: Context): any {\n    for (const token of this.postfix) {\n      if (TypeGuards.isOperatorToken(token)) {\n        const r = this.operands.pop()\n        const l = this.operands.pop()\n        const result = evalOperatorToken(this.operators, token, l, r, ctx)\n        this.operands.push(result)\n      } else {\n        this.operands.push(evalToken(token, ctx, this.lenient && this.postfix.length === 1))\n      }\n    }\n    return this.operands[0]\n  }\n  public * value (ctx: Context) {\n    return toValue(this.evaluate(ctx))\n  }\n}\n\nexport function evalToken (token: Token | undefined, ctx: Context, lenient = false): any {\n  assert(ctx, () => 'unable to evaluate: context not defined')\n  if (TypeGuards.isPropertyAccessToken(token)) {\n    const variable = token.getVariableAsText()\n    const props: string[] = token.props.map(prop => evalToken(prop, ctx))\n    try {\n      return ctx.get([variable, ...props])\n    } catch (e) {\n      if (lenient && e instanceof InternalUndefinedVariableError) {\n        return null\n      } else {\n        throw (new UndefinedVariableError(e, token))\n      }\n    }\n  }\n  if (TypeGuards.isRangeToken(token)) return evalRangeToken(token, ctx)\n  if (TypeGuards.isLiteralToken(token)) return evalLiteralToken(token)\n  if (TypeGuards.isNumberToken(token)) return evalNumberToken(token)\n  if (TypeGuards.isWordToken(token)) return token.getText()\n  if (TypeGuards.isQuotedToken(token)) return evalQuotedToken(token)\n}\n\nfunction evalNumberToken (token: NumberToken) {\n  const str = token.whole.content + '.' + (token.decimal ? token.decimal.content : '')\n  return Number(str)\n}\n\nexport function evalQuotedToken (token: QuotedToken) {\n  return parseStringLiteral(token.getText())\n}\n\nfunction evalOperatorToken (operators: Operators, token: OperatorToken, lhs: any, rhs: any, ctx: Context) {\n  const impl = operators[token.operator]\n  return impl(lhs, rhs, ctx)\n}\n\nfunction evalLiteralToken (token: LiteralToken) {\n  return literalValues[token.literal]\n}\n\nfunction evalRangeToken (token: RangeToken, ctx: Context) {\n  const low: number = evalToken(token.lhs, ctx)\n  const high: number = evalToken(token.rhs, ctx)\n  return range(+low, +high + 1)\n}\n\nfunction * toPostfix (tokens: IterableIterator<Token>): IterableIterator<Token> {\n  const ops: OperatorToken[] = []\n  for (const token of tokens) {\n    if (TypeGuards.isOperatorToken(token)) {\n      while (ops.length && ops[ops.length - 1].getPrecedence() > token.getPrecedence()) {\n        yield ops.pop()!\n      }\n      ops.push(token)\n    } else yield token\n  }\n  while (ops.length) {\n    yield ops.pop()!\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { Tokenizer } from '../../parser/tokenizer'\n\n/**\n * Key-Value Pairs Representing Tag Arguments\n * Example:\n *    For the markup `, foo:'bar', coo:2 reversed %}`,\n *    hash['foo'] === 'bar'\n *    hash['coo'] === 2\n *    hash['reversed'] === undefined\n */\nexport class Hash {\n  hash: { [key: string]: any } = {}\n  constructor (markup: string) {\n    const tokenizer = new Tokenizer(markup, {})\n    for (const hash of tokenizer.readHashes()) {\n      this.hash[hash.name.content] = hash.value\n    }\n  }\n  * render (ctx: Context) {\n    const hash = {}\n    for (const key of Object.keys(this.hash)) {\n      hash[key] = yield evalToken(this.hash[key], ctx)\n    }\n    return hash\n  }\n}\n","import { isFunction } from './underscore'\n\ntype resolver = (x?: any) => any\n\ninterface Thenable {\n  then (resolve: resolver, reject?: resolver): Thenable;\n  catch (reject: resolver): Thenable;\n}\n\nfunction createResolvedThenable (value: any): Thenable {\n  const ret = {\n    then: (resolve: resolver) => resolve(value),\n    catch: () => ret\n  }\n  return ret\n}\n\nfunction createRejectedThenable (err: Error): Thenable {\n  const ret = {\n    then: (resolve: resolver, reject?: resolver) => {\n      if (reject) return reject(err)\n      return ret\n    },\n    catch: (reject: resolver) => reject(err)\n  }\n  return ret\n}\n\nfunction isThenable (val: any): val is Thenable {\n  return val && isFunction(val.then)\n}\n\nfunction isAsyncIterator (val: any): val is IterableIterator<any> {\n  return val && isFunction(val.next) && isFunction(val.throw) && isFunction(val.return)\n}\n\n// convert an async iterator to a thenable (Promise compatible)\nexport function toThenable (val: IterableIterator<any> | Thenable | any): Thenable {\n  if (isThenable(val)) return val\n  if (isAsyncIterator(val)) return reduce()\n  return createResolvedThenable(val)\n\n  function reduce (prev?: any): Thenable {\n    let state\n    try {\n      state = (val as IterableIterator<any>).next(prev)\n    } catch (err) {\n      return createRejectedThenable(err)\n    }\n\n    if (state.done) return createResolvedThenable(state.value)\n    return toThenable(state.value!).then(reduce, err => {\n      let state\n      try {\n        state = (val as IterableIterator<any>).throw!(err)\n      } catch (e) {\n        return createRejectedThenable(e)\n      }\n      if (state.done) return createResolvedThenable(state.value)\n      return reduce(state.value)\n    })\n  }\n}\n\nexport function toPromise (val: IterableIterator<any> | Thenable | any): Promise<any> {\n  return Promise.resolve(toThenable(val))\n}\n\n// get the value of async iterator in synchronous manner\nexport function toValue (val: IterableIterator<any> | Thenable | any) {\n  let ret: any\n  toThenable(val)\n    .then((x: any) => {\n      ret = x\n      return createResolvedThenable(ret)\n    })\n    .catch((err: Error) => {\n      throw err\n    })\n  return ret\n}\n","import { isFunction } from '../../util/underscore'\nimport { Liquid } from '../../liquid'\nimport { TemplateImpl } from '../../template/template-impl'\nimport { Emitter, Hash, Context, TagToken, Template, TopLevelToken } from '../../types'\nimport { TagImpl } from './tag-impl'\n\nexport class Tag extends TemplateImpl<TagToken> implements Template {\n  public name: string\n  private impl: TagImpl\n\n  public constructor (token: TagToken, tokens: TopLevelToken[], liquid: Liquid) {\n    super(token)\n    this.name = token.name\n\n    const impl = liquid.tags.get(token.name)\n\n    this.impl = Object.create(impl)\n    this.impl.liquid = liquid\n    if (this.impl.parse) {\n      this.impl.parse(token, tokens)\n    }\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const hash = yield new Hash(this.token.args).render(ctx)\n    const impl = this.impl\n    if (isFunction(impl.render)) return yield impl.render(ctx, emitter, hash)\n  }\n}\n","import { evalToken } from '../../render/expression'\nimport { Context } from '../../context/context'\nimport { identify } from '../../util/underscore'\nimport { FilterImplOptions } from './filter-impl-options'\nimport { FilterArg, isKeyValuePair } from '../../parser/filter-arg'\nimport { Liquid } from '../../liquid'\n\nexport class Filter {\n  public name: string\n  public args: FilterArg[]\n  private impl: FilterImplOptions\n  private liquid: Liquid\n\n  public constructor (name: string, impl: FilterImplOptions, args: FilterArg[], liquid: Liquid) {\n    this.name = name\n    this.impl = impl || identify\n    this.args = args\n    this.liquid = liquid\n  }\n  public * render (value: any, context: Context) {\n    const argv: any[] = []\n    for (const arg of this.args as FilterArg[]) {\n      if (isKeyValuePair(arg)) argv.push([arg[0], yield evalToken(arg[1], context)])\n      else argv.push(yield evalToken(arg, context))\n    }\n    return yield this.impl.apply({ context, liquid: this.liquid }, [value, ...argv])\n  }\n}\n","import { isArray } from '../util/underscore'\nimport { ValueToken } from '../tokens/value-token'\n\ntype KeyValuePair = [string?, ValueToken?]\n\nexport type FilterArg = ValueToken | KeyValuePair\n\nexport function isKeyValuePair (arr: FilterArg): arr is KeyValuePair { // TODO check\n  return isArray(arr)\n}\n","import { evalToken } from '../render/expression'\nimport { Tokenizer } from '../parser/tokenizer'\nimport { FilterMap } from '../template/filter/filter-map'\nimport { Filter } from './filter/filter'\nimport { Context } from '../context/context'\nimport { ValueToken } from '../tokens/value-token'\nimport { Liquid } from '../liquid'\n\nexport class Value {\n  public readonly filters: Filter[] = []\n  public readonly initial?: ValueToken\n\n  /**\n   * @param str the value to be valuated, eg.: \"foobar\" | truncate: 3\n   */\n  public constructor (str: string, private readonly filterMap: FilterMap, liquid: Liquid) {\n    const tokenizer = new Tokenizer(str, liquid.options.operatorsTrie)\n    this.initial = tokenizer.readValue()\n    this.filters = tokenizer.readFilters().map(({ name, args }) => new Filter(name, this.filterMap.get(name), args, liquid))\n  }\n  public * value (ctx: Context) {\n    const lenient = ctx.opts.lenientIf && this.filters.length > 0 && this.filters[0].name === 'default'\n\n    let val = yield evalToken(this.initial, ctx, lenient)\n    for (const filter of this.filters) {\n      val = yield filter.render(val, ctx)\n    }\n    return val\n  }\n}\n","import { Value } from './value'\nimport { FilterMap } from './filter/filter-map'\nimport { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\nimport { OutputToken } from '../tokens/output-token'\nimport { Liquid } from '../liquid'\n\nexport class Output extends TemplateImpl<OutputToken> implements Template {\n  private value: Value\n  public constructor (token: OutputToken, filters: FilterMap, liquid: Liquid) {\n    super(token)\n    this.value = new Value(token.content, filters, liquid)\n  }\n  public * render (ctx: Context, emitter: Emitter) {\n    const val = yield this.value.value(ctx)\n    emitter.write(val)\n  }\n}\n","import { TemplateImpl } from '../template/template-impl'\nimport { Template } from '../template/template'\nimport { HTMLToken } from '../tokens/html-token'\nimport { Context } from '../context/context'\nimport { Emitter } from '../render/emitter'\n\nexport class HTML extends TemplateImpl<HTMLToken> implements Template {\n  private str: string\n  public constructor (token: HTMLToken) {\n    super(token)\n    this.str = token.getContent()\n  }\n  public * render (ctx: Context, emitter: Emitter): IterableIterator<void> {\n    emitter.write(this.str)\n  }\n}\n","import { ParseError } from '../util/error'\nimport { Liquid } from '../liquid'\nimport { ParseStream } from './parse-stream'\nimport { isTagToken, isOutputToken } from '../util/type-guards'\nimport { OutputToken } from '../tokens/output-token'\nimport { Tag } from '../template/tag/tag'\nimport { Output } from '../template/output'\nimport { HTML } from '../template/html'\nimport { Template } from '../template/template'\nimport { TopLevelToken } from '../tokens/toplevel-token'\n\nexport default class Parser {\n  private liquid: Liquid\n\n  public constructor (liquid: Liquid) {\n    this.liquid = liquid\n  }\n  public parse (tokens: TopLevelToken[]) {\n    let token\n    const templates: Template[] = []\n    while ((token = tokens.shift())) {\n      templates.push(this.parseToken(token, tokens))\n    }\n    return templates\n  }\n  public parseToken (token: TopLevelToken, remainTokens: TopLevelToken[]) {\n    try {\n      if (isTagToken(token)) {\n        return new Tag(token, remainTokens, this.liquid)\n      }\n      if (isOutputToken(token)) {\n        return new Output(token as OutputToken, this.liquid.filters, this.liquid)\n      }\n      return new HTML(token)\n    } catch (e) {\n      throw new ParseError(e, token)\n    }\n  }\n  public parseStream (tokens: TopLevelToken[]) {\n    return new ParseStream(tokens, (token, tokens) => this.parseToken(token, tokens))\n  }\n}\n","import { Tokenizer, assert, TagImplOptions, TagToken, Context } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.key = tokenizer.readIdentifier().content\n    tokenizer.skipBlank()\n    assert(tokenizer.peek() === '=', () => `illegal token ${token.getText()}`)\n    tokenizer.advance()\n    this.value = tokenizer.remaining()\n  },\n  render: function * (ctx: Context) {\n    ctx.bottom()[this.key] = yield this.liquid._evalValue(this.value, ctx)\n  }\n} as TagImplOptions\n","import { isString, isObject, isArray } from './underscore'\n\nexport function toEnumerable (val: any) {\n  if (isArray(val)) return val\n  if (isString(val) && val.length > 0) return [val]\n  if (isObject(val)) return Object.keys(val).map((key) => [key, val[key]])\n  return []\n}\n\nexport function toArray (val: any) {\n  if (isArray(val)) return val\n  return [ val ]\n}\n","import { Drop } from './drop'\n\nexport class ForloopDrop extends Drop {\n  protected i = 0\n  public length: number\n  public constructor (length: number) {\n    super()\n    this.length = length\n  }\n  public next () {\n    this.i++\n  }\n  public index0 () {\n    return this.i\n  }\n  public index () {\n    return this.i + 1\n  }\n  public first () {\n    return this.i === 0\n  }\n  public last () {\n    return this.i === this.length - 1\n  }\n  public rindex () {\n    return this.length - this.i\n  }\n  public rindex0 () {\n    return this.length - this.i - 1\n  }\n  public valueOf () {\n    return JSON.stringify(this)\n  }\n}\n","import { assert, Tokenizer, evalToken, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { toEnumerable } from '../../util/collection'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { Hash } from '../../template/tag/hash'\n\nexport default {\n  type: 'block',\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const toknenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n\n    const variable = toknenizer.readIdentifier()\n    const inStr = toknenizer.readIdentifier()\n    const collection = toknenizer.readValue()\n    assert(\n      variable.size() && inStr.content === 'in' && collection,\n      () => `illegal tag: ${token.getText()}`\n    )\n\n    this.variable = variable.content\n    this.collection = collection\n    this.hash = new Hash(toknenizer.remaining())\n    this.templates = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endfor', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n\n    if (!collection.length) {\n      yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n      return\n    }\n\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    if ('reversed' in hash) collection.reverse()\n\n    const scope = { forloop: new ForloopDrop(collection.length) }\n    ctx.push(scope)\n    for (const item of collection) {\n      scope[this.variable] = item\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      if (emitter.break) {\n        emitter.break = false\n        break\n      }\n      emitter.continue = false\n      scope.forloop.next()\n    }\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { Tokenizer, assert, Template, Context, TagImplOptions, TagToken, TopLevelToken } from '../../types'\nimport { evalQuotedToken } from '../../render/expression'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    this.variable = readVariableName(tokenizer)\n    assert(this.variable, () => `${tagToken.args} not valid identifier`)\n\n    this.templates = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream.on('tag:endcapture', () => stream.stop())\n      .on('template', (tpl: Template) => this.templates.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function * (ctx: Context) {\n    const r = this.liquid.renderer\n    const html = yield r.renderTemplates(this.templates, ctx)\n    ctx.bottom()[this.variable] = html\n  }\n} as TagImplOptions\n\nfunction readVariableName (tokenizer: Tokenizer) {\n  const word = tokenizer.readIdentifier().content\n  if (word) return word\n  const quoted = tokenizer.readQuoted()\n  if (quoted) return evalQuotedToken(quoted)\n}\n","enum BlockMode {\n  /* store rendered html into blocks */\n  OUTPUT,\n  /* output rendered html directly */\n  STORE\n}\n\nexport default BlockMode\n","import { Expression, Emitter, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.cond = tagToken.args\n    this.cases = []\n    this.elseTemplates = []\n\n    let p: Template[] = []\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:when', (token: TagToken) => {\n        this.cases.push({\n          val: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endcase', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const { operators, operatorsTrie } = this.liquid.options\n    const cond = yield new Expression(this.cond, operators, operatorsTrie).value(ctx)\n    for (let i = 0; i < this.cases.length; i++) {\n      const branch = this.cases[i]\n      const val = yield new Expression(branch.val, operators, operatorsTrie).value(ctx)\n      if (val === cond) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { TagToken } from '../../tokens/tag-token'\nimport { TopLevelToken } from '../../tokens/toplevel-token'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endcomment') stream.stop()\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    const begin = tokenizer.p\n    const withStr = tokenizer.readIdentifier()\n    if (withStr.content === 'with') {\n      tokenizer.skipBlank()\n      if (tokenizer.peek() !== ':') {\n        this.withVar = tokenizer.readValue()\n      } else tokenizer.p = begin\n    } else tokenizer.p = begin\n\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, withVar, file } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : yield evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const saved = ctx.saveRegister('blocks', 'blockMode')\n    ctx.setRegister('blocks', {})\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n    const scope = yield hash.render(ctx)\n    if (withVar) scope[filepath] = evalToken(withVar, ctx)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n    ctx.push(scope)\n    yield renderer.renderTemplates(templates, ctx, emitter)\n    ctx.pop()\n    ctx.restoreRegister(saved)\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { ForloopDrop } from '../../drop/forloop-drop'\nimport { toEnumerable } from '../../util/collection'\nimport { evalQuotedToken, TypeGuards, Tokenizer, evalToken, Hash, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const args = token.args\n    const tokenizer = new Tokenizer(args, this.liquid.options.operatorsTrie)\n    this.file = this.liquid.options.dynamicPartials\n      ? tokenizer.readValue()\n      : tokenizer.readFileName()\n    assert(this.file, () => `illegal argument \"${token.args}\"`)\n\n    while (!tokenizer.end()) {\n      tokenizer.skipBlank()\n      const begin = tokenizer.p\n      const keyword = tokenizer.readIdentifier()\n      if (keyword.content === 'with' || keyword.content === 'for') {\n        tokenizer.skipBlank()\n        if (tokenizer.peek() !== ':') {\n          const value = tokenizer.readValue()\n          if (value) {\n            const beforeAs = tokenizer.p\n            const asStr = tokenizer.readIdentifier()\n            let alias\n            if (asStr.content === 'as') alias = tokenizer.readIdentifier()\n            else tokenizer.p = beforeAs\n\n            this[keyword.content] = { value, alias: alias && alias.content }\n            tokenizer.skipBlank()\n            if (tokenizer.peek() === ',') tokenizer.advance()\n            continue\n          }\n        }\n      }\n      tokenizer.p = begin\n      break\n    }\n    this.hash = new Hash(tokenizer.remaining())\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, file, hash } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n\n    const childCtx = new Context({}, ctx.opts, ctx.sync)\n    const scope = yield hash.render(ctx)\n    if (this['with']) {\n      const { value, alias } = this['with']\n      scope[alias || filepath] = evalToken(value, ctx)\n    }\n    childCtx.push(scope)\n\n    if (this['for']) {\n      const { value, alias } = this['for']\n      let collection = evalToken(value, ctx)\n      collection = toEnumerable(collection)\n      scope['forloop'] = new ForloopDrop(collection.length)\n      for (const item of collection) {\n        scope[alias] = item\n        const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n        yield renderer.renderTemplates(templates, childCtx, emitter)\n        scope.forloop.next()\n      }\n    } else {\n      const templates = yield liquid._parseFile(filepath, childCtx.opts, childCtx.sync)\n      yield renderer.renderTemplates(templates, childCtx, emitter)\n    }\n  }\n} as TagImplOptions\n","import { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { isNumber, stringify } from '../../util/underscore'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    emitter.write(stringify(--scope[this.variable]))\n  }\n} as TagImplOptions\n","import { assert } from '../../util/assert'\nimport { evalToken, Emitter, TagToken, Context, TagImplOptions } from '../../types'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n    const group = tokenizer.readValue()\n    tokenizer.skipBlank()\n\n    this.candidates = []\n\n    if (group) {\n      if (tokenizer.peek() === ':') {\n        this.group = group\n        tokenizer.advance()\n      } else this.candidates.push(group)\n    }\n\n    while (!tokenizer.end()) {\n      const value = tokenizer.readValue()\n      if (value) this.candidates.push(value)\n      tokenizer.readTo(',')\n    }\n    assert(this.candidates.length, () => `empty candidates: ${tagToken.getText()}`)\n  },\n\n  render: function (ctx: Context, emitter: Emitter) {\n    const group = evalToken(this.group, ctx)\n    const fingerprint = `cycle:${group}:` + this.candidates.join(',')\n    const groups = ctx.getRegister('cycle')\n    let idx = groups[fingerprint]\n\n    if (idx === undefined) {\n      idx = groups[fingerprint] = 0\n    }\n\n    const candidate = this.candidates[idx]\n    idx = (idx + 1) % this.candidates.length\n    groups[fingerprint] = idx\n    const html = evalToken(candidate, ctx)\n    emitter.write(html)\n  }\n} as TagImplOptions\n","import { Emitter, isTruthy, Expression, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.branches = []\n    this.elseTemplates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => this.branches.push({\n        cond: tagToken.args,\n        templates: (p = [])\n      }))\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endif', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const { operators, operatorsTrie } = this.liquid.options\n\n    for (const branch of this.branches) {\n      const cond = yield new Expression(branch.cond, operators, operatorsTrie, ctx.opts.lenientIf).value(ctx)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { isNumber, stringify } from '../../util/underscore'\nimport { Tokenizer, Emitter, TagToken, Context, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (token: TagToken) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    this.variable = tokenizer.readIdentifier().content\n  },\n  render: function (context: Context, emitter: Emitter) {\n    const scope = context.environments\n    if (!isNumber(scope[this.variable])) {\n      scope[this.variable] = 0\n    }\n    const val = scope[this.variable]\n    scope[this.variable]++\n    emitter.write(stringify(val))\n  }\n} as TagImplOptions\n","import { assert, evalQuotedToken, TypeGuards, evalToken, Tokenizer, Emitter, Hash, TagToken, TopLevelToken, Context, TagImplOptions } from '../../types'\nimport BlockMode from '../../context/block-mode'\n\nexport default {\n  parse: function (token: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(token.args, this.liquid.options.operatorsTrie)\n    const file = this.liquid.options.dynamicPartials ? tokenizer.readValue() : tokenizer.readFileName()\n    assert(file, () => `illegal argument \"${token.args}\"`)\n\n    this.file = file\n    this.hash = new Hash(tokenizer.remaining())\n    this.tpls = this.liquid.parser.parse(remainTokens)\n  },\n  render: function * (ctx: Context, emitter: Emitter) {\n    const { liquid, hash, file } = this\n    const { renderer } = liquid\n    const filepath = ctx.opts.dynamicPartials\n      ? (TypeGuards.isQuotedToken(file)\n        ? yield renderer.renderTemplates(liquid.parse(evalQuotedToken(file)), ctx)\n        : evalToken(this.file, ctx))\n      : file.getText()\n    assert(filepath, () => `illegal filename \"${file.getText()}\":\"${filepath}\"`)\n    const templates = yield liquid._parseFile(filepath, ctx.opts, ctx.sync)\n\n    // render remaining contents and store rendered results\n    ctx.setRegister('blockMode', BlockMode.STORE)\n    const html = yield renderer.renderTemplates(this.tpls, ctx)\n    const blocks = ctx.getRegister('blocks')\n    if (blocks[''] === undefined) blocks[''] = () => html\n    ctx.setRegister('blockMode', BlockMode.OUTPUT)\n\n    // render the layout file use stored blocks\n    ctx.push(yield hash.render(ctx))\n    const partial = yield renderer.renderTemplates(templates, ctx)\n    ctx.pop()\n    emitter.write(partial)\n  }\n} as TagImplOptions\n","import { Drop } from './drop'\n\nexport class BlockDrop extends Drop {\n  constructor (\n    // the block render from layout template\n    private superBlockRender: () => Iterable<string> = () => ''\n  ) {\n    super()\n  }\n  public super () {\n    return this.superBlockRender()\n  }\n}\n","import BlockMode from '../../context/block-mode'\nimport { BlockDrop } from '../../drop/block-drop'\nimport { ParseStream, TagToken, TopLevelToken, Template, Context, TagImpl, Emitter } from '../../types'\n\nexport default {\n  parse (this: TagImpl, token: TagToken, remainTokens: TopLevelToken[]) {\n    const match = /\\w+/.exec(token.args)\n    this.block = match ? match[0] : ''\n    this.tpls = [] as Template[]\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('tag:endblock', () => stream.stop())\n      .on('template', (tpl: Template) => this.tpls.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${token.getText()} not closed`)\n      })\n    stream.start()\n  },\n\n  * render (this: TagImpl, ctx: Context, emitter: Emitter) {\n    const blockRender = this.getBlockRender(ctx)\n    yield this.emitHTML(ctx, emitter, blockRender)\n  },\n\n  getBlockRender (this: TagImpl, ctx: Context) {\n    const { liquid, tpls } = this\n    const extendedBlockRender = ctx.getRegister('blocks')[this.block]\n    const defaultBlockRender = function * (superBlock: BlockDrop) {\n      ctx.push({ block: superBlock })\n      const result = yield liquid.renderer.renderTemplates(tpls, ctx)\n      ctx.pop()\n      return result\n    }\n    return extendedBlockRender\n      ? (superBlock: BlockDrop) => extendedBlockRender(new BlockDrop(() => defaultBlockRender(superBlock)))\n      : defaultBlockRender\n  },\n\n  * emitHTML (this: TagImpl, ctx: Context, emitter: Emitter, blockRender: (block: BlockDrop) => string) {\n    if (ctx.getRegister('blockMode', BlockMode.OUTPUT) === BlockMode.STORE) {\n      ctx.getRegister('blocks')[this.block] = blockRender\n    } else {\n      emitter.write(yield blockRender(new BlockDrop()))\n    }\n  }\n}\n","import { TagToken, TopLevelToken, TagImplOptions } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.tokens = []\n\n    const stream = this.liquid.parser.parseStream(remainTokens)\n    stream\n      .on('token', (token: TagToken) => {\n        if (token.name === 'endraw') stream.stop()\n        else this.tokens.push(token)\n      })\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n    stream.start()\n  },\n  render: function () {\n    return this.tokens.map((token: TopLevelToken) => token.getText()).join('')\n  }\n} as TagImplOptions\n","import { ForloopDrop } from './forloop-drop'\n\nexport class TablerowloopDrop extends ForloopDrop {\n  private cols: number\n  public constructor (length: number, cols: number) {\n    super(length)\n    this.length = length\n    this.cols = cols\n  }\n  public row () {\n    return Math.floor(this.i / this.cols) + 1\n  }\n  public col0 () {\n    return (this.i % this.cols)\n  }\n  public col () {\n    return this.col0() + 1\n  }\n  public col_first () {  // eslint-disable-line\n    return this.col0() === 0\n  }\n  public col_last () { // eslint-disable-line\n    return this.col() === this.cols\n  }\n}\n","import assign from './assign'\nimport For from './for'\nimport capture from './capture'\nimport Case from './case'\nimport comment from './comment'\nimport include from './include'\nimport render from './render'\nimport decrement from './decrement'\nimport cycle from './cycle'\nimport If from './if'\nimport increment from './increment'\nimport layout from './layout'\nimport block from './block'\nimport raw from './raw'\nimport tablerow from './tablerow'\nimport unless from './unless'\nimport Break from './break'\nimport Continue from './continue'\nimport { TagImplOptions } from '../../template/tag/tag-impl-options'\n\nconst tags: { [key: string]: TagImplOptions } = {\n  assign, 'for': For, capture, 'case': Case, comment, include, render, decrement, increment, cycle, 'if': If, layout, block, raw, tablerow, unless, 'break': Break, 'continue': Continue\n}\n\nexport default tags\n","import { toEnumerable } from '../../util/collection'\nimport { assert, evalToken, Emitter, Hash, TagToken, TopLevelToken, Context, Template, TagImplOptions, ParseStream } from '../../types'\nimport { TablerowloopDrop } from '../../drop/tablerowloop-drop'\nimport { Tokenizer } from '../../parser/tokenizer'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    const tokenizer = new Tokenizer(tagToken.args, this.liquid.options.operatorsTrie)\n\n    this.variable = tokenizer.readIdentifier()\n    tokenizer.skipBlank()\n\n    const tmp = tokenizer.readIdentifier()\n    assert(tmp && tmp.content === 'in', () => `illegal tag: ${tagToken.getText()}`)\n\n    this.collection = tokenizer.readValue()\n    this.hash = new Hash(tokenizer.remaining())\n    this.templates = []\n\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => (p = this.templates))\n      .on('tag:endtablerow', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    let collection = toEnumerable(yield evalToken(this.collection, ctx))\n    const hash = yield this.hash.render(ctx)\n    const offset = hash.offset || 0\n    const limit = (hash.limit === undefined) ? collection.length : hash.limit\n\n    collection = collection.slice(offset, offset + limit)\n    const cols = hash.cols || collection.length\n\n    const r = this.liquid.renderer\n    const tablerowloop = new TablerowloopDrop(collection.length, cols)\n    const scope = { tablerowloop }\n    ctx.push(scope)\n\n    for (let idx = 0; idx < collection.length; idx++, tablerowloop.next()) {\n      scope[this.variable.content] = collection[idx]\n      if (tablerowloop.col0() === 0) {\n        if (tablerowloop.row() !== 1) emitter.write('</tr>')\n        emitter.write(`<tr class=\"row${tablerowloop.row()}\">`)\n      }\n      emitter.write(`<td class=\"col${tablerowloop.col()}\">`)\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      emitter.write('</td>')\n    }\n    if (collection.length) emitter.write('</tr>')\n    ctx.pop()\n  }\n} as TagImplOptions\n","import { TopLevelToken, Template, Emitter, Expression, isTruthy, isFalsy, ParseStream, Context, TagImplOptions, TagToken } from '../../types'\n\nexport default {\n  parse: function (tagToken: TagToken, remainTokens: TopLevelToken[]) {\n    this.templates = []\n    this.branches = []\n    this.elseTemplates = []\n    let p\n    const stream: ParseStream = this.liquid.parser.parseStream(remainTokens)\n      .on('start', () => {\n        p = this.templates\n        this.cond = tagToken.args\n      })\n      .on('tag:elsif', (token: TagToken) => {\n        this.branches.push({\n          cond: token.args,\n          templates: p = []\n        })\n      })\n      .on('tag:else', () => (p = this.elseTemplates))\n      .on('tag:endunless', () => stream.stop())\n      .on('template', (tpl: Template) => p.push(tpl))\n      .on('end', () => {\n        throw new Error(`tag ${tagToken.getText()} not closed`)\n      })\n\n    stream.start()\n  },\n\n  render: function * (ctx: Context, emitter: Emitter) {\n    const r = this.liquid.renderer\n    const { operators, operatorsTrie } = this.liquid.options\n    const cond = yield new Expression(this.cond, operators, operatorsTrie, ctx.opts.lenientIf).value(ctx)\n\n    if (isFalsy(cond, ctx)) {\n      yield r.renderTemplates(this.templates, ctx, emitter)\n      return\n    }\n\n    for (const branch of this.branches) {\n      const cond = yield new Expression(branch.cond, operators, operatorsTrie, ctx.opts.lenientIf).value(ctx)\n      if (isTruthy(cond, ctx)) {\n        yield r.renderTemplates(branch.templates, ctx, emitter)\n        return\n      }\n    }\n\n    yield r.renderTemplates(this.elseTemplates, ctx, emitter)\n  }\n} as TagImplOptions\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.break = true\n  }\n}\n","import { Emitter, Context } from '../../types'\n\nexport default {\n  render: function (ctx: Context, emitter: Emitter) {\n    emitter.continue = true\n  }\n}\n","import { stringify } from '../../util/underscore'\n\nconst escapeMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&#34;',\n  \"'\": '&#39;'\n}\nconst unescapeMap = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&#34;': '\"',\n  '&#39;': \"'\"\n}\n\nexport function escape (str: string) {\n  return stringify(str).replace(/&|<|>|\"|'/g, m => escapeMap[m])\n}\n\nfunction unescape (str: string) {\n  return String(str).replace(/&(amp|lt|gt|#34|#39);/g, m => unescapeMap[m])\n}\n\nexport function escapeOnce (str: string) {\n  return escape(unescape(str))\n}\n\nexport function newlineToBr (v: string) {\n  return v.replace(/\\n/g, '<br/>')\n}\n\nexport function stripHtml (v: string) {\n  return v.replace(/<script.*?<\\/script>|<!--.*?-->|<style.*?<\\/style>|<.*?>/g, '')\n}\n","import { caseInsensitiveCompare } from '../../util/underscore'\n\nexport const abs = Math.abs\nexport const atLeast = Math.max\nexport const atMost = Math.min\nexport const ceil = Math.ceil\nexport const dividedBy = (v: number, arg: number) => v / arg\nexport const floor = Math.floor\nexport const minus = (v: number, arg: number) => v - arg\nexport const modulo = (v: number, arg: number) => v % arg\nexport const times = (v: number, arg: number) => v * arg\n\nexport function round (v: number, arg = 0) {\n  const amp = Math.pow(10, arg)\n  return Math.round(v * amp) / amp\n}\n\nexport function plus (v: number, arg: number) {\n  return Number(v) + Number(arg)\n}\n\nexport function sortNatural (input: any[], property?: string) {\n  if (!input || !input.sort) return []\n  if (property !== undefined) {\n    return [...input].sort(\n      (lhs, rhs) => caseInsensitiveCompare(lhs[property], rhs[property])\n    )\n  }\n  return [...input].sort(caseInsensitiveCompare)\n}\n","import { changeCase, padStart, padEnd } from './underscore'\n\nconst rFormat = /%([-_0^#:]+)?(\\d+)?([EO])?(.)/\nconst monthNames = [\n  'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',\n  'September', 'October', 'November', 'December'\n]\nconst dayNames = [\n  'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n]\nconst monthNamesShort = monthNames.map(abbr)\nconst dayNamesShort = dayNames.map(abbr)\nconst suffixes = {\n  1: 'st',\n  2: 'nd',\n  3: 'rd',\n  'default': 'th'\n}\ninterface FormatOptions {\n  flags: object;\n  width?: string;\n  modifier?: string;\n}\n\nfunction abbr (str: string) {\n  return str.slice(0, 3)\n}\n\n// prototype extensions\nfunction daysInMonth (d: Date) {\n  const feb = isLeapYear(d) ? 29 : 28\n  return [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n}\nfunction getDayOfYear (d: Date) {\n  let num = 0\n  for (let i = 0; i < d.getMonth(); ++i) {\n    num += daysInMonth(d)[i]\n  }\n  return num + d.getDate()\n}\nfunction getWeekOfYear (d: Date, startDay: number) {\n  // Skip to startDay of this week\n  const now = getDayOfYear(d) + (startDay - d.getDay())\n  // Find the first startDay of the year\n  const jan1 = new Date(d.getFullYear(), 0, 1)\n  const then = (7 - jan1.getDay() + startDay)\n  return String(Math.floor((now - then) / 7) + 1)\n}\nfunction isLeapYear (d: Date) {\n  const year = d.getFullYear()\n  return !!((year & 3) === 0 && (year % 100 || (year % 400 === 0 && year)))\n}\nfunction getSuffix (d: Date) {\n  const str = d.getDate().toString()\n  const index = parseInt(str.slice(-1))\n  return suffixes[index] || suffixes['default']\n}\nfunction century (d: Date) {\n  return parseInt(d.getFullYear().toString().substring(0, 2), 10)\n}\n\n// default to 0\nconst padWidths = {\n  d: 2,\n  e: 2,\n  H: 2,\n  I: 2,\n  j: 3,\n  k: 2,\n  l: 2,\n  L: 3,\n  m: 2,\n  M: 2,\n  S: 2,\n  U: 2,\n  W: 2\n}\n\n// default to '0'\nconst padChars = {\n  a: ' ',\n  A: ' ',\n  b: ' ',\n  B: ' ',\n  c: ' ',\n  e: ' ',\n  k: ' ',\n  l: ' ',\n  p: ' ',\n  P: ' '\n}\nconst formatCodes = {\n  a: (d: Date) => dayNamesShort[d.getDay()],\n  A: (d: Date) => dayNames[d.getDay()],\n  b: (d: Date) => monthNamesShort[d.getMonth()],\n  B: (d: Date) => monthNames[d.getMonth()],\n  c: (d: Date) => d.toLocaleString(),\n  C: (d: Date) => century(d),\n  d: (d: Date) => d.getDate(),\n  e: (d: Date) => d.getDate(),\n  H: (d: Date) => d.getHours(),\n  I: (d: Date) => String(d.getHours() % 12 || 12),\n  j: (d: Date) => getDayOfYear(d),\n  k: (d: Date) => d.getHours(),\n  l: (d: Date) => String(d.getHours() % 12 || 12),\n  L: (d: Date) => d.getMilliseconds(),\n  m: (d: Date) => d.getMonth() + 1,\n  M: (d: Date) => d.getMinutes(),\n  N: (d: Date, opts: FormatOptions) => {\n    const width = Number(opts.width) || 9\n    const str = String(d.getMilliseconds()).substr(0, width)\n    return padEnd(str, width, '0')\n  },\n  p: (d: Date) => (d.getHours() < 12 ? 'AM' : 'PM'),\n  P: (d: Date) => (d.getHours() < 12 ? 'am' : 'pm'),\n  q: (d: Date) => getSuffix(d),\n  s: (d: Date) => Math.round(d.valueOf() / 1000),\n  S: (d: Date) => d.getSeconds(),\n  u: (d: Date) => d.getDay() || 7,\n  U: (d: Date) => getWeekOfYear(d, 0),\n  w: (d: Date) => d.getDay(),\n  W: (d: Date) => getWeekOfYear(d, 1),\n  x: (d: Date) => d.toLocaleDateString(),\n  X: (d: Date) => d.toLocaleTimeString(),\n  y: (d: Date) => d.getFullYear().toString().substring(2, 4),\n  Y: (d: Date) => d.getFullYear(),\n  z: (d: Date, opts: FormatOptions) => {\n    const offset = d.getTimezoneOffset()\n    const nOffset = Math.abs(offset)\n    const h = Math.floor(nOffset / 60)\n    const m = nOffset % 60\n    return (offset > 0 ? '-' : '+') +\n      padStart(h, 2, '0') +\n      (opts.flags[':'] ? ':' : '') +\n      padStart(m, 2, '0')\n  },\n  't': () => '\\t',\n  'n': () => '\\n',\n  '%': () => '%'\n};\n(formatCodes as any).h = formatCodes.b\n\nexport default function (inputDate: Date, formatStr: string) {\n  let d = inputDate\n  if (d instanceof TimezoneDate) {\n    d = d.getDisplayDate()\n  }\n\n  let output = ''\n  let remaining = formatStr\n  let match\n  while ((match = rFormat.exec(remaining))) {\n    output += remaining.slice(0, match.index)\n    remaining = remaining.slice(match.index + match[0].length)\n    output += format(d, match)\n  }\n  return output + remaining\n}\n\nfunction format (d: Date, match: RegExpExecArray) {\n  const [input, flagStr = '', width, modifier, conversion] = match\n  const convert = formatCodes[conversion]\n  if (!convert) return input\n  const flags = {}\n  for (const flag of flagStr) flags[flag] = true\n  let ret = String(convert(d, { flags, width, modifier }))\n  let padChar = padChars[conversion] || '0'\n  let padWidth = width || padWidths[conversion] || 0\n  if (flags['^']) ret = ret.toUpperCase()\n  else if (flags['#']) ret = changeCase(ret)\n  if (flags['_']) padChar = ' '\n  else if (flags['0']) padChar = '0'\n  if (flags['-']) padWidth = 0\n  return padStart(ret, padWidth, padChar)\n}\n\nexport class TimezoneDate extends Date {\n  ISO8601_TIMEZONE_PATTERN = /([zZ]|([+-])(\\d{2}):(\\d{2}))$/;\n\n  inputTimezoneOffset = 0;\n\n  constructor (public dateString: string) {\n    super(dateString)\n    const m = dateString.match(this.ISO8601_TIMEZONE_PATTERN)\n    if (m && m[1] === 'Z') {\n      this.inputTimezoneOffset = this.getTimezoneOffset()\n    } else if (m && m[2] && m[3] && m[4]) {\n      const [, , sign, hours, minutes] = m\n      const delta = (sign === '+' ? 1 : -1) * (parseInt(hours, 10) * 60 + parseInt(minutes, 10))\n      this.inputTimezoneOffset = this.getTimezoneOffset() + delta\n    }\n  }\n\n  getDisplayDate (): Date {\n    return new Date((+this) + this.inputTimezoneOffset * 60 * 1000)\n  }\n}\n","export const urlDecode = (x: string) => x.split('+').map(decodeURIComponent).join(' ')\nexport const urlEncode = (x: string) => x.split(' ').map(encodeURIComponent).join('+')\n","import { isArray, isNil, last as arrayLast } from '../../util/underscore'\nimport { toArray } from '../../util/collection'\nimport { isTruthy } from '../../render/boolean'\nimport { FilterImpl } from '../../template/filter/filter-impl'\nimport { Scope } from '../../context/scope'\n\nexport const join = (v: any[], arg: string) => v.join(arg === undefined ? ' ' : arg)\nexport const last = (v: any) => isArray(v) ? arrayLast(v) : ''\nexport const first = (v: any) => isArray(v) ? v[0] : ''\nexport const reverse = (v: any[]) => [...v].reverse()\n\nexport function sort<T> (this: FilterImpl, arr: T[], property?: string) {\n  const getValue = (obj: Scope) => property ? this.context.getFromScope(obj, property.split('.')) : obj\n  return toArray(arr).sort((lhs, rhs) => {\n    lhs = getValue(lhs)\n    rhs = getValue(rhs)\n    return lhs < rhs ? -1 : (lhs > rhs ? 1 : 0)\n  })\n}\n\nexport const size = (v: string | any[]) => (v && v.length) || 0\n\nexport function map<T1, T2> (this: FilterImpl, arr: Scope[], property: string) {\n  return toArray(arr).map(obj => this.context.getFromScope(obj, property.split('.')))\n}\n\nexport function compact<T> (this: FilterImpl, arr: T[]) {\n  return toArray(arr).filter(x => !isNil(x))\n}\n\nexport function concat<T1, T2> (v: T1[], arg: T2[] | T2): (T1 | T2)[] {\n  return toArray(v).concat(arg)\n}\n\nexport function slice<T> (v: T[], begin: number, length = 1): T[] {\n  begin = begin < 0 ? v.length + begin : begin\n  return v.slice(begin, begin + length)\n}\n\nexport function where<T extends object> (this: FilterImpl, arr: T[], property: string, expected?: any): T[] {\n  return toArray(arr).filter(obj => {\n    const value = this.context.getFromScope(obj, String(property).split('.'))\n    return expected === undefined ? isTruthy(value, this.context) : value === expected\n  })\n}\n\nexport function uniq<T> (arr: T[]): T[] {\n  const u = {}\n  return (arr || []).filter(val => {\n    if (u.hasOwnProperty(String(val))) return false\n    u[String(val)] = true\n    return true\n  })\n}\n","import strftime, { TimezoneDate } from '../../util/strftime'\nimport { isString, isNumber } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function date (this: FilterImpl, v: string | Date, arg: string) {\n  let date = v\n  if (v === 'now' || v === 'today') {\n    date = new Date()\n  } else if (isNumber(v)) {\n    date = new Date(v * 1000)\n  } else if (isString(v)) {\n    if (/^\\d+$/.test(v)) {\n      date = new Date(+v * 1000)\n    } else if (this.context.opts.preserveTimezones) {\n      date = new TimezoneDate(v)\n    } else {\n      date = new Date(v)\n    }\n  }\n  return isValidDate(date) ? strftime(date, arg) : v\n}\n\nfunction isValidDate (date: any): date is Date {\n  return date instanceof Date && !isNaN(date.getTime())\n}\n","import { isFalsy } from '../../render/boolean'\nimport { isArray, isString, toValue } from '../../util/underscore'\nimport { FilterImpl } from '../../template/filter/filter-impl'\n\nexport function Default<T1, T2> (this: FilterImpl, v: string | T1, arg: T2): string | T1 | T2 {\n  if (isArray(v) || isString(v)) return v.length ? v : arg\n  return isFalsy(toValue(v), this.context) ? arg : v\n}\nexport function json (v: any) {\n  return JSON.stringify(v)\n}\n","/**\n * String related filters\n *\n * * prefer stringify() to String() since `undefined`, `null` should eval ''\n */\nimport { stringify } from '../../util/underscore'\nimport { assert } from '../../util/assert'\n\nexport function append (v: string, arg: string) {\n  assert(arg !== undefined, () => 'append expect 2 arguments')\n  return stringify(v) + stringify(arg)\n}\n\nexport function prepend (v: string, arg: string) {\n  assert(arg !== undefined, () => 'prepend expect 2 arguments')\n  return stringify(arg) + stringify(v)\n}\n\nexport function lstrip (v: string) {\n  return stringify(v).replace(/^\\s+/, '')\n}\n\nexport function downcase (v: string) {\n  return stringify(v).toLowerCase()\n}\n\nexport function upcase (str: string) {\n  return stringify(str).toUpperCase()\n}\n\nexport function remove (v: string, arg: string) {\n  return stringify(v).split(String(arg)).join('')\n}\n\nexport function removeFirst (v: string, l: string) {\n  return stringify(v).replace(String(l), '')\n}\n\nexport function rstrip (str: string) {\n  return stringify(str).replace(/\\s+$/, '')\n}\n\nexport function split (v: string, arg: string) {\n  return stringify(v).split(String(arg))\n}\n\nexport function strip (v: string) {\n  return stringify(v).trim()\n}\n\nexport function stripNewlines (v: string) {\n  return stringify(v).replace(/\\n/g, '')\n}\n\nexport function capitalize (str: string) {\n  str = stringify(str)\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nexport function replace (v: string, pattern: string, replacement: string) {\n  return stringify(v).split(String(pattern)).join(replacement)\n}\n\nexport function replaceFirst (v: string, arg1: string, arg2: string) {\n  return stringify(v).replace(String(arg1), arg2)\n}\n\nexport function truncate (v: string, l = 50, o = '...') {\n  v = stringify(v)\n  if (v.length <= l) return v\n  return v.substr(0, l - o.length) + o\n}\n\nexport function truncatewords (v: string, l = 15, o = '...') {\n  const arr = v.split(/\\s+/)\n  let ret = arr.slice(0, l).join(' ')\n  if (arr.length >= l) ret += o\n  return ret\n}\n","import { TagImplOptions } from './tag-impl-options'\nimport { assert } from '../../util/assert'\n\nexport class TagMap {\n  private impls: {[key: string]: TagImplOptions} = {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl, () => `tag \"${name}\" not found`)\n    return impl\n  }\n\n  set (name: string, impl: TagImplOptions) {\n    this.impls[name] = impl\n  }\n}\n","import { FilterImplOptions } from './filter-impl-options'\nimport { Filter } from './filter'\nimport { FilterArg } from '../../parser/filter-arg'\nimport { assert } from '../../util/assert'\nimport { Liquid } from '../../liquid'\n\nexport class FilterMap {\n  private impls: {[key: string]: FilterImplOptions} = {}\n\n  constructor (\n    private readonly strictFilters: boolean,\n    private readonly liquid: Liquid\n  ) {}\n\n  get (name: string) {\n    const impl = this.impls[name]\n    assert(impl || !this.strictFilters, () => `undefined filter: ${name}`)\n    return impl\n  }\n\n  set (name: string, impl: FilterImplOptions) {\n    this.impls[name] = impl\n  }\n\n  create (name: string, args: FilterArg[]) {\n    return new Filter(name, this.get(name), args, this.liquid)\n  }\n}\n","import { Context } from './context/context'\nimport * as fs from './fs/node'\nimport { forOwn, snakeCase } from './util/underscore'\nimport { Template } from './template/template'\nimport { Tokenizer } from './parser/tokenizer'\nimport { Render } from './render/render'\nimport Parser from './parser/parser'\nimport { TagImplOptions } from './template/tag/tag-impl-options'\nimport { Value } from './template/value'\nimport builtinTags from './builtin/tags'\nimport * as builtinFilters from './builtin/filters'\nimport { TagMap } from './template/tag/tag-map'\nimport { FilterMap } from './template/filter/filter-map'\nimport { LiquidOptions, normalizeStringArray, NormalizedFullOptions, applyDefault, normalize } from './liquid-options'\nimport { FilterImplOptions } from './template/filter/filter-impl-options'\nimport { FS } from './fs/fs'\nimport { toPromise, toValue } from './util/async'\nimport { Emitter } from './render/emitter'\n\nexport * from './types'\n\nexport class Liquid {\n  public options: NormalizedFullOptions\n  public renderer: Render\n  public parser: Parser\n  public filters: FilterMap\n  public tags: TagMap\n  private fs: FS\n\n  public constructor (opts: LiquidOptions = {}) {\n    this.options = applyDefault(normalize(opts))\n    this.parser = new Parser(this)\n    this.renderer = new Render()\n    this.fs = opts.fs || fs\n    this.filters = new FilterMap(this.options.strictFilters, this)\n    this.tags = new TagMap()\n\n    forOwn(builtinTags, (conf: TagImplOptions, name: string) => this.registerTag(snakeCase(name), conf))\n    forOwn(builtinFilters, (handler: FilterImplOptions, name: string) => this.registerFilter(snakeCase(name), handler))\n  }\n  public parse (html: string, filepath?: string): Template[] {\n    const tokenizer = new Tokenizer(html, this.options.operatorsTrie, filepath)\n    const tokens = tokenizer.readTopLevelTokens(this.options)\n    return this.parser.parse(tokens)\n  }\n\n  public _render (tpl: Template[], scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const options = { ...this.options, ...normalize(opts) }\n    const ctx = new Context(scope, options, sync)\n    const emitter = new Emitter(options.keepOutputType)\n    return this.renderer.renderTemplates(tpl, ctx, emitter)\n  }\n  public async render (tpl: Template[], scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._render(tpl, scope, opts, false))\n  }\n  public renderSync (tpl: Template[], scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._render(tpl, scope, opts, true))\n  }\n\n  public _parseAndRender (html: string, scope?: object, opts?: LiquidOptions, sync?: boolean): IterableIterator<any> {\n    const tpl = this.parse(html)\n    return this._render(tpl, scope, opts, sync)\n  }\n  public async parseAndRender (html: string, scope?: object, opts?: LiquidOptions): Promise<any> {\n    return toPromise(this._parseAndRender(html, scope, opts, false))\n  }\n  public parseAndRenderSync (html: string, scope?: object, opts?: LiquidOptions): any {\n    return toValue(this._parseAndRender(html, scope, opts, true))\n  }\n\n  public * _parseFile (file: string, opts?: LiquidOptions, sync?: boolean) {\n    const options = { ...this.options, ...normalize(opts) }\n    const paths = options.root.map(root => this.fs.resolve(root, file, options.extname))\n    if (this.fs.fallback !== undefined) {\n      const filepath = this.fs.fallback(file)\n      if (filepath !== undefined) paths.push(filepath)\n    }\n\n    for (const filepath of paths) {\n      const { cache } = options\n      if (cache) {\n        const tpls = yield cache.read(filepath)\n        if (tpls) return tpls\n      }\n      if (!(sync ? this.fs.existsSync(filepath) : yield this.fs.exists(filepath))) continue\n      const tpl = this.parse(sync ? this.fs.readFileSync(filepath) : yield this.fs.readFile(filepath), filepath)\n      if (cache) cache.write(filepath, tpl)\n      return tpl\n    }\n    throw this.lookupError(file, options.root)\n  }\n  public async parseFile (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return toPromise(this._parseFile(file, opts, false))\n  }\n  public parseFileSync (file: string, opts?: LiquidOptions): Template[] {\n    return toValue(this._parseFile(file, opts, true))\n  }\n  public async renderFile (file: string, ctx?: object, opts?: LiquidOptions) {\n    const templates = await this.parseFile(file, opts)\n    return this.render(templates, ctx, opts)\n  }\n  public renderFileSync (file: string, ctx?: object, opts?: LiquidOptions) {\n    const options = normalize(opts)\n    const templates = this.parseFileSync(file, options)\n    return this.renderSync(templates, ctx, opts)\n  }\n\n  public _evalValue (str: string, ctx: Context): IterableIterator<any> {\n    const value = new Value(str, this.filters, this)\n    return value.value(ctx)\n  }\n  public async evalValue (str: string, ctx: Context): Promise<any> {\n    return toPromise(this._evalValue(str, ctx))\n  }\n  public evalValueSync (str: string, ctx: Context): any {\n    return toValue(this._evalValue(str, ctx))\n  }\n\n  public registerFilter (name: string, filter: FilterImplOptions) {\n    this.filters.set(name, filter)\n  }\n  public registerTag (name: string, tag: TagImplOptions) {\n    this.tags.set(name, tag)\n  }\n  public plugin (plugin: (this: Liquid, L: typeof Liquid) => void) {\n    return plugin.call(this, Liquid)\n  }\n  public express () {\n    const self = this // eslint-disable-line\n    return function (this: any, filePath: string, ctx: object, callback: (err: Error | null, rendered: string) => void) {\n      const opts = { root: [...normalizeStringArray(this.root), ...self.options.root] }\n      self.renderFile(filePath, ctx, opts).then(html => callback(null, html) as any, callback as any)\n    }\n  }\n\n  private lookupError (file: string, roots: string[]) {\n    const err = new Error('ENOENT') as any\n    err.message = `ENOENT: Failed to lookup \"${file}\" in \"${roots}\"`\n    err.code = 'ENOENT'\n    return err\n  }\n\n  /**\n   * @deprecated use parseFile instead\n   */\n  public async getTemplate (file: string, opts?: LiquidOptions): Promise<Template[]> {\n    return this.parseFile(file, opts)\n  }\n  /**\n   * @deprecated use parseFileSync instead\n   */\n  public getTemplateSync (file: string, opts?: LiquidOptions): Template[] {\n    return this.parseFileSync(file, opts)\n  }\n}\n"],"names":["Drop","key","toStr","Object","prototype","toString","toLowerCase","String","isString","value","call","isFunction","stringify","isNil","toValue","valueOf","isNumber","isArray","forOwn","object","iteratee","k","hasOwnProperty","last","arr","length","isObject","type","range","start","stop","step","i","push","padStart","str","ch","pad","add","n","identify","val","snakeCase","replace","_","a","b","caseInsensitiveCompare","next","prev","this","LRU","cache","node","Node","head","size","ensureLimit","remove","write","tail","limit","isComparable","arg","equals","isTruthy","ctx","isFalsy","opts","jsTruthy","defaultOperators","==","l","r","!=",">","gt","lt","<",">=","geq","leq","<=","contains","indexOf","and","or","createTrie","operators","trie","_b","tslib_1.__values","entries","_d","name_1","handler","c","needBoundary","end","defaultOptions","root","undefined","extname","dynamicPartials","trimTagRight","trimTagLeft","trimOutputRight","trimOutputLeft","greedy","tagDelimiterLeft","tagDelimiterRight","outputDelimiterLeft","outputDelimiterRight","preserveTimezones","strictFilters","strictVariables","lenientIf","globals","keepOutputType","operatorsTrie","normalize","options","normalizeStringArray","_.isArray","_.isString","tslib_1.__extends","Error","LiquidError","err","originalError","context","token","line","lines","input","split","begin","Math","max","min","_\r\n        .range","map","lineNumber","_.padStart","join","mkContext","message","msg","file","_a","col","mkMessage","stack","_super","_this","name","update","RenderError","obj","tpl","variableName","Context","defaultValue","registers","_i","keys","getRegister","keyValues","forEach","setRegister","tslib_1.__spread","environments","scopes","reduce","__assign","paths","scope","findScope","getFromScope","path","toLiquid","liquidMethodMissing","readSize","readFirst","readLast","readProperty","InternalUndefinedVariableError","pop","candidate","env","sync","TokenKind","filepath","ext","base","document","createElement","href","getElementsByTagName","insertBefore","firstChild","resolved","removeChild","domResolve","origin","test","url","Promise","resolve","reject","xhr","XMLHttpRequest","onload","status","responseText","statusText","onerror","open","send","isDelimitedToken","getKind","Delimited","isOperatorToken","Operator","isHTMLToken","HTML","isOutputToken","Output","isTagToken","Tag","isQuotedToken","Quoted","isLiteralToken","Literal","isNumberToken","Number","isPropertyAccessToken","PropertyAccess","isWordToken","Word","isRangeToken","Range","kind","TYPES","BLANK","INLINE_BLANK","trimLeft","mask","charCodeAt","trimRight","charAt","Token","slice","row","whole","decimal","IdentifierToken","allowSign","content","getText","EmptyDrop","BlankDrop","NullDrop","literalValues","true","false","nil","null","empty","blank","literal","precedence","OperatorToken","operator","rHex","rOct","escapeChar","f","t","v","hexVal","code","parseStringLiteral","ret","j","fromCharCode","PropertyAccessToken","variable","props","assert","predicate","AssertionError","args","Filter","Hash","HTMLToken","tl","tr","trim","DelimitedToken","tokenizer","Tokenizer","readIdentifier","TokenizationError","skipBlank","remaining","lhs","rhs","operand","readValue","p","N","readOperator","operand_1","info","matchOperator","filters","filter","readFilter","peek","snapshot","readFilterArg","FilterToken","tokens","readTopLevelToken","inRaw","whiteSpaceCtrl","rawBeginAt","readEndrawOrRawContent","match","readTagToken","readOutputToken","readHTMLToken","readToDelimiter","mkError","TagToken","delimiter","peekType","readQuoted","rmatch","OutputToken","leftPos","readTo","JSON","substr","ellipsis","console","warn","hashes","hash","readHash","HashToken","readRange","prop","LiteralToken","NumberToken","readValueOrThrow","RangeToken","escaped","QuotedToken","word","pattern","Emitter","html","Render","templates","emitter","templates_1","render","break","continue","is","e_1","ParseStream","cb","handlers","event","h","trigger","stopRequested","shift","template","parseToken","Expression","postfix","TypeGuards.isOperatorToken","operands","result","evalOperatorToken","evalToken","lenient","evaluate","ops","tokens_1","getPrecedence","toPostfix","readExpression","TypeGuards.isPropertyAccessToken","getVariableAsText","get","e","UndefinedVariableError","TypeGuards.isRangeToken","low","high","evalRangeToken","TypeGuards.isLiteralToken","evalLiteralToken","TypeGuards.isNumberToken","evalNumberToken","TypeGuards.isWordToken","TypeGuards.isQuotedToken","evalQuotedToken","_c","_f","markup","readHashes","createResolvedThenable","then","catch","createRejectedThenable","toThenable","isThenable","throw","return","isAsyncIterator","state","done","toPromise","x","TemplateImpl","impl","liquid","tags","create","parse","argv","isKeyValuePair","_j","_g","apply","Value","initial","filterMap","readFilters","getContent","Parser","remainTokens","ParseError","advance","bottom","_evalValue","toEnumerable","toArray","ForloopDrop","toknenizer","inStr","collection","elseTemplates","stream","parser","parseStream","on","renderer","renderTemplates","offset","reverse","forloop","collection_1","item","tagToken","quoted","readVariableName","BlockMode","cond","cases","branch","readFileName","withVar","saved","saveRegister","OUTPUT","_parseFile","restoreRegister","keyword","beforeAs","alias","childCtx","_e","group","candidates","fingerprint","groups","idx","branches","tpls","STORE","blocks","partial","BlockDrop","superBlockRender","exec","block","blockRender","getBlockRender","emitHTML","defaultBlockRender","superBlock","extendedBlockRender","TablerowloopDrop","floor","cols","col0","assign","for","For","capture","case","Case","comment","include","decrement","increment","cycle","if","If","layout","raw","tablerow","tmp","tablerowloop","unless","escapeMap","&","\"","'","unescapeMap","&amp;","&lt;","&gt;","&#34;","&#39;","escape","m","abs","atLeast","atMost","ceil","rFormat","monthNames","dayNames","monthNamesShort","abbr","dayNamesShort","suffixes","1","2","3","default","getDayOfYear","d","num","getMonth","year","getFullYear","isLeapYear","getDate","getWeekOfYear","startDay","now","getDay","Date","padWidths","H","I","L","M","S","U","W","padChars","A","B","P","formatCodes","toLocaleString","C","parseInt","substring","century","getHours","getMilliseconds","getMinutes","width","padEnd","q","index","getSuffix","s","round","getSeconds","u","w","toLocaleDateString","X","toLocaleTimeString","y","Y","z","getTimezoneOffset","nOffset","flags","%","format","flagStr","modifier","conversion","convert","flagStr_1","padChar","padWidth","toUpperCase","some","changeCase","TimezoneDate","inputTimezoneOffset","dateString","ISO8601_TIMEZONE_PATTERN","sign","hours","minutes","delta","unescape","amp","pow","property","sort","decodeURIComponent","encodeURIComponent","arrayLast","getValue","concat","expected","date","isNaN","getTime","isValidDate","inputDate","formatStr","getDisplayDate","output","strftime","replacement","arg1","arg2","o","TagMap","impls","FilterMap","Liquid","readTopLevelTokens","_render","_parseAndRender","fs","fallback","paths_1","read","existsSync","exists","readFileSync","readFile","lookupError","parseFile","parseFileSync","renderSync","set","tag","plugin","self","filePath","callback","renderFile","roots","applyDefault","builtinTags","conf","registerTag","builtinFilters","registerFilter"],"mappings":"shFACSA,oBAAP,aAIOA,gCAAP,SAA4BC,QAL9B,cCEA,IAAMC,EAAQC,OAAOC,UAAUC,SACzBC,EAAcC,OAAOH,UAAUE,qBAOrBE,EAAUC,GACxB,MAA6B,oBAAtBP,EAAMQ,KAAKD,YAGJE,EAAYF,GAC1B,MAAwB,mBAAVA,WAeAG,EAAWH,GAEzB,OAAOI,EADPJ,EAAQK,EAAQL,IACM,GAAKF,OAAOE,YAGpBK,EAASL,GACvB,OAAOA,aAAiBT,EAAOS,EAAMM,UAAYN,WAGnCO,EAAUP,GACxB,MAAwB,iBAAVA,WAQAI,EAAOJ,GACrB,OAAOA,MAAAA,WAGOQ,EAASR,GAEvB,MAA6B,mBAAtBP,EAAMQ,KAAKD,YAWJS,EACdC,EACAC,GAGA,IAAK,IAAMC,KADXF,EAASA,GAAU,GAEjB,GAAIA,EAAOG,eAAeD,KACe,IAAnCD,EAASD,EAAOE,GAAIA,EAAGF,GAAmB,MAGlD,OAAOA,WAKOI,EAAMC,GACpB,OAAOA,EAAIA,EAAIC,OAAS,YASVC,EAAUjB,GACxB,IAAMkB,SAAclB,EACpB,OAAiB,OAAVA,IAA4B,UAATkB,GAA8B,YAATA,YAGjCC,EAAOC,EAAeC,EAAcC,gBAAAA,KAElD,IADA,IAAMP,EAAgB,GACbQ,EAAIH,EAAOG,EAAIF,EAAME,GAAKD,EACjCP,EAAIS,KAAKD,GAEX,OAAOR,WAGOU,EAAUC,EAAUV,EAAgBW,GAClD,oBADkDA,OAC3CC,EAAIF,EAAKV,EAAQW,EAAI,SAACD,EAAKC,GAAO,OAAAA,EAAKD,aAOhCE,EAAKF,EAAUV,EAAgBW,EAAYE,GAGzD,IADA,IAAIC,EAAId,GADRU,EAAM5B,OAAO4B,IACQV,OACR,EAANc,KAASJ,EAAMG,EAAIH,EAAKC,GAC/B,OAAOD,WAGOK,EAAaC,GAC3B,OAAOA,WAGOC,EAAWP,GACzB,OAAOA,EAAIQ,QACT,gBACA,SAACC,EAAGC,EAAGC,GAAM,OAACD,EAAIA,EAAI,IAAM,IAAMC,EAAExC,yBAcxByC,EAAwBF,EAAQC,GAC9C,OAAS,MAALD,GAAkB,MAALC,EAAkB,EAC1B,MAALD,EAAkB,EACb,MAALC,GAAmB,GACvBD,EAAIvC,EAAYI,KAAKmC,KACrBC,EAAIxC,EAAYI,KAAKoC,KACF,EACXA,EAAJD,EAAc,EACX,ECjJT,MACE,SACS5C,EACAQ,EACAuC,EACAC,GAHAC,SAAAjD,EACAiD,WAAAzC,EACAyC,UAAAF,EACAE,UAAAD,MAmBTE,kBAAA,SAAOlD,EAAaQ,GAClB,GAAIyC,KAAKE,MAAMnD,GACbiD,KAAKE,MAAMnD,GAAKQ,MAAQA,MACnB,CACL,IAAM4C,EAAO,IAAIC,EAAKrD,EAAKQ,EAAOyC,KAAKK,KAAKP,KAAME,KAAKK,MACvDL,KAAKK,KAAKP,KAAKC,KAAOI,EACtBH,KAAKK,KAAKP,KAAOK,EAEjBH,KAAKE,MAAMnD,GAAOoD,EAClBH,KAAKM,OACLN,KAAKO,gBAITN,iBAAA,SAAMlD,GACJ,GAAKiD,KAAKE,MAAMnD,GAAhB,CACQ,IAAAQ,sBAGR,OAFAyC,KAAKQ,OAAOzD,GACZiD,KAAKS,MAAM1D,EAAKQ,GACTA,IAGT0C,mBAAA,SAAQlD,GACN,IAAMoD,EAAOH,KAAKE,MAAMnD,GACxBoD,EAAKJ,KAAKD,KAAOK,EAAKL,KACtBK,EAAKL,KAAKC,KAAOI,EAAKJ,YACfC,KAAKE,MAAMnD,GAClBiD,KAAKM,QAGPL,kBAAA,WACED,KAAKK,KAAKP,KAAOE,KAAKU,KACtBV,KAAKU,KAAKX,KAAOC,KAAKK,KACtBL,KAAKM,KAAO,EACZN,KAAKE,MAAQ,IAGPD,wBAAR,WACMD,KAAKM,KAAON,KAAKW,OAAOX,KAAKQ,OAAOR,KAAKU,KAAKX,KAAKhD,SAhDzD,WACS4D,EACAL,gBAAAA,KADAN,WAAAW,EACAX,UAAAM,EANDN,WAAoC,GAQ1CA,KAAKK,KAAO,IAAID,EAAQ,OAAQ,KAAa,KAAa,MAC1DJ,KAAKU,KAAO,IAAIN,EAAQ,OAAQ,KAAa,KAAa,MAC1DJ,KAAKK,KAAKP,KAAOE,KAAKU,KACtBV,KAAKU,KAAKX,KAAOC,KAAKK,cCbVO,EAAcC,GAC5B,OAAOA,GAAOpD,EAAWoD,EAAIC,iBCTfC,EAAUxB,EAAUyB,GAClC,OAAQC,EAAQ1B,EAAKyB,YAGPC,EAAS1B,EAAUyB,GACjC,OAAIA,EAAIE,KAAKC,UACH5B,GAEO,IAARA,GAAAA,MAA+BA,MCD7B6B,EAA8B,CACzCC,KAAM,SAACC,EAAQC,GACb,OAAIX,EAAaU,GAAWA,EAAER,OAAOS,GACjCX,EAAaW,GAAWA,EAAET,OAAOQ,GAC9BA,IAAMC,GAEfC,KAAM,SAACF,EAAQC,GACb,OAAIX,EAAaU,IAAYA,EAAER,OAAOS,GAClCX,EAAaW,IAAYA,EAAET,OAAOQ,GAC/BA,IAAMC,GAEfE,IAAK,SAACH,EAAQC,GACZ,OAAIX,EAAaU,GAAWA,EAAEI,GAAGH,GAC7BX,EAAaW,GAAWA,EAAEI,GAAGL,GACtBC,EAAJD,GAETM,IAAK,SAACN,EAAQC,GACZ,OAAIX,EAAaU,GAAWA,EAAEK,GAAGJ,GAC7BX,EAAaW,GAAWA,EAAEG,GAAGJ,GAC1BA,EAAIC,GAEbM,KAAM,SAACP,EAAQC,GACb,OAAIX,EAAaU,GAAWA,EAAEQ,IAAIP,GAC9BX,EAAaW,GAAWA,EAAEQ,IAAIT,GACtBC,GAALD,GAETU,KAAM,SAACV,EAAQC,GACb,OAAIX,EAAaU,GAAWA,EAAES,IAAIR,GAC9BX,EAAaW,GAAWA,EAAEO,IAAIR,GAC3BA,GAAKC,GAEdU,SAAY,SAACX,EAAQC,GACnB,SAAOD,IAAK7D,EAAW6D,EAAEY,YAA2B,EAAhBZ,EAAEY,QAAQX,IAEhDY,IAAO,SAACb,EAAQC,EAAQP,GAAiB,OAAAD,EAASO,EAAGN,IAAQD,EAASQ,EAAGP,IACzEoB,GAAM,SAACd,EAAQC,EAAQP,GAAiB,OAAAD,EAASO,EAAGN,IAAQD,EAASQ,EAAGP,cCtC1DqB,EAAYC,WACpBC,EAAa,OACnB,IAA8B,IAAAC,EAAAC,EAAAxF,OAAOyF,QAAQJ,kCAAY,CAGvD,IAHS,IAAAK,eAACC,OAAMC,OACZ1C,EAAOoC,EAEFzD,EAAI,EAAGA,EAAI8D,EAAKrE,OAAQO,IAAK,CACpC,IAAMgE,EAAIF,EAAK9D,GACfqB,EAAK2C,GAAK3C,EAAK2C,IAAM,GAEjBhE,IAAM8D,EAAKrE,OAAS,GAAW,MAANuE,IAC3B3C,EAAK2C,GAAGC,cAAe,GAGzB5C,EAAOA,EAAK2C,GAGd3C,EAAK0C,QAAUA,EACf1C,EAAK6C,KAAM,oGAEb,OAAOT,EC6DF,IAAMU,EAAwC,CACnDC,KAAM,CAAC,KACPhD,WAAOiD,EACPC,QAAS,GACTC,iBAAiB,EACjBlC,UAAU,EACVmC,cAAc,EACdC,aAAa,EACbC,iBAAiB,EACjBC,gBAAgB,EAChBC,QAAQ,EACRC,iBAAkB,KAClBC,kBAAmB,KACnBC,oBAAqB,KACrBC,qBAAsB,KACtBC,mBAAmB,EACnBC,eAAe,EACfC,iBAAiB,EACjBC,WAAW,EACXC,QAAS,GACTC,gBAAgB,EAChB9B,UAAWlB,EACXiD,cAAehC,EAAWjB,aAGZkD,EAAWC,GAKzB,IAJAA,EAAUA,GAAW,IACTnG,eAAe,UACzBmG,EAAQrB,KAAOsB,EAAqBD,EAAQrB,OAE1CqB,EAAQnG,eAAe,SAAU,CACnC,IAAI8B,SACmCA,EAAV,iBAAlBqE,EAAQrE,MAA4C,EAAhBqE,EAAQrE,MAAY,IAAID,EAAIsE,EAAQrE,YAASiD,EAC1D,iBAAlBoB,EAAQrE,MAA4BqE,EAAQrE,MAC/CqE,EAAQrE,MAAQ,IAAID,EAAgB,WAAQkD,EACzDoB,EAAQrE,MAAQA,EAKlB,OAHIqE,EAAQnG,eAAe,eACxBmG,EAA8BF,cAAgBhC,EAAWkC,EAAQjC,YAE7DiC,WAOOC,EAAsBjH,GACpC,OAAIkH,EAAUlH,GAAeA,EACzBmH,EAAWnH,GAAe,CAACA,GACxB,GCpIT,SAAmCoH,MAAAC,OAQvBC,mBAAV,WACE,IAAMC,EAAM9E,KAAK+E,cACXC,EAiEV,SAAoBC,GACZ,IAACC,0BACDC,EAAQF,EAAMG,MAAMC,MAAM,MAC1BC,EAAQC,KAAKC,IAAIN,EAAO,EAAG,GAC3BlC,EAAMuC,KAAKE,IAAIP,EAAO,EAAGC,EAAM5G,QAYrC,OAVgBmH,EACPJ,EAAOtC,EAAM,GACnB2C,IAAI,SAAAC,GAIH,OAHmBA,IAAeV,EAAQ,MAAQ,OACtCW,EAAWxI,OAAOuI,GAAavI,OAAO2F,GAAKzE,aAC1C4G,EAAMS,EAAa,KAGjCE,KAAK,MA/EUC,CAAU/F,KAAKiF,OAC/BjF,KAAKgG,QAmFT,SAAoBC,EAAahB,GAC3BA,EAAMiB,OAAMD,GAAO,UAAUhB,EAAMiB,MACjC,IAAAC,uBAACjB,OAAMkB,OAEb,OADAH,GAAO,UAAUf,WAAakB,EAtFbC,CAAUvB,EAAIkB,QAAShG,KAAKiF,OAC3CjF,KAAKsG,MAAQtG,KAAKgG,QAAU,KAAOhB,EACjC,KAAOhF,KAAKsG,MAAQ,UAAYxB,EAAIwB,UAVxC,WAAoBxB,EAAYG,GAAhC,MACEsB,YAAMzB,EAAIkB,sBACVQ,EAAKzB,cAAgBD,EACrB0B,EAAKvB,MAAQA,aAWsBN,MAAAE,MACrC,WAAoBmB,EAAiBf,GAArC,MACEsB,YAAM,IAAI3B,MAAMoB,GAAUf,gBAC1BuB,EAAKC,KAAO,oBACZF,YAAMG,0BAIsB/B,MAAAE,MAC9B,WAAoBC,EAAYG,GAAhC,MACEsB,YAAMzB,EAAKG,gBACXuB,EAAKC,KAAO,aACZD,EAAKR,QAAUlB,EAAIkB,QACnBO,YAAMG,iBAIV,SAAiC/B,MAAAE,GAOjB8B,KAAd,SAAkBC,GAChB,OAAOA,aAAeD,MAPxB,WAAoB7B,EAAY+B,GAAhC,MACEN,YAAMzB,EAAK+B,EAAI5B,oBACfuB,EAAKC,KAAO,cACZD,EAAKR,QAAUlB,EAAIkB,QACnBO,YAAMG,iBAOV,SAA4C/B,OAAAE,OAC1C,YAAoBC,EAAYG,GAAhC,MACEsB,YAAMzB,EAAKG,gBACXuB,EAAKC,KAAO,yBACZD,EAAKR,QAAUlB,EAAIkB,QACnBO,YAAMG,iBAMV,WAAoD/B,QAAAC,WAGlD,YAAoBkC,GAApB,MACEP,aAAM,uBAAuBO,gBAC7BN,EAAKC,KAAO,iCACZD,EAAKM,aAAeA,eAIYnC,QAAAC,WAClC,YAAoBoB,GAApB,MACEO,aAAMP,gBACNQ,EAAKC,KAAO,iBACZD,EAAKR,QAAUA,EAAU,aCvDpBe,yBAAP,SAAoBhK,EAAaiK,GAC/B,oBAD+BA,MACvBhH,KAAKiH,UAAUlK,GAAOiD,KAAKiH,UAAUlK,IAAQiK,GAEhDD,yBAAP,SAAoBhK,EAAaQ,GAC/B,OAAQyC,KAAKiH,UAAUlK,GAAOQ,GAEzBwJ,0BAAP,eAAA,oBAAqBG,mBAAAA,IAAAC,kBACnB,OAAOA,EAAKxB,IAAI,SAAA5I,GAAO,MAAA,CAACA,EAAKyJ,EAAKY,YAAYrK,OAEzCgK,6BAAP,SAAwBM,GAAxB,WACE,OAAOA,EAAUC,QAAQ,SAACnB,OAAA3D,SAACzF,OAAKQ,OAAW,OAAAiJ,EAAKe,YAAYxK,EAAKQ,MAE5DwJ,oBAAP,WACE,OAAOS,GAACxH,KAAKmE,QAASnE,KAAKyH,cAAiBzH,KAAK0H,QAC9CC,OAAO,SAAC3G,EAAKzB,GAAQ,OAAAqI,EAAS5G,EAAKzB,IAAM,KAEvCwH,iBAAP,SAAYc,GACV,IAAMC,EAAQ9H,KAAK+H,UAAUF,EAAM,IACnC,OAAO7H,KAAKgI,aAAaF,EAAOD,IAE3Bd,0BAAP,SAAqBe,EAAeD,GAApC,WAEE,MADqB,iBAAVA,IAAoBA,EAAQA,EAAMxC,MAAM,MAC5CwC,EAAMF,OAAO,SAACG,EAAOG,GAE1B,GAAItK,EADJmK,WA0BwBlB,EAAY7J,GACxC,OAAIY,EAAMiJ,GAAaA,GACvBA,WR5BcsB,EAAU3K,GACxB,OAAIA,GAASE,EAAWF,EAAM2K,UAAkBA,EAAS3K,EAAM2K,YACxD3K,EQ0BD2K,CAAStB,cACI9J,EACbW,EAAWmJ,EAAI7J,IAAc6J,EAAI7J,KACjC6J,EAAIxI,eAAerB,GAAa6J,EAAI7J,GACjC6J,EAAIuB,oBAAoBpL,GAErB,SAARA,EAgBN,SAAmB6J,GACjB,OAAI7I,EAAQ6I,IAAQtJ,EAASsJ,GAAaA,EAAIrI,OACvCqI,EAAU,KAlBUwB,CAASxB,GACxB,UAAR7J,EAKN,SAAoB6J,GAClB,OAAI7I,EAAQ6I,GAAaA,EAAI,GACtBA,EAAW,MAPUyB,CAAUzB,GAC1B,SAAR7J,EASN,SAAmB6J,GACjB,OAAI7I,EAAQ6I,GAAaA,EAAIA,EAAIrI,OAAS,GACnCqI,EAAU,KAXU0B,CAAS1B,GAC7BA,EAAI7J,GArCCwL,CAAaT,EAAOG,KACRzB,EAAKtF,KAAK+C,gBAC5B,MAAM,IAAIuE,GAA+BP,GAE3C,OAAOH,GACNA,IAEEf,kBAAP,SAAa/F,GACX,OAAOhB,KAAK0H,OAAO3I,KAAKiC,IAEnB+F,iBAAP,WACE,OAAO/G,KAAK0H,OAAOe,OAEd1B,oBAAP,WACE,OAAO/G,KAAK0H,OAAO,IAEbX,uBAAR,SAAmBhK,GACjB,IAAK,IAAI+B,EAAIkB,KAAK0H,OAAOnJ,OAAS,EAAQ,GAALO,EAAQA,IAAK,CAChD,IAAM4J,EAAY1I,KAAK0H,OAAO5I,GAC9B,GAAI/B,KAAO2L,EAAW,OAAOA,EAE/B,OAAI3L,KAAOiD,KAAKyH,aAAqBzH,KAAKyH,aACnCzH,KAAKmE,aAnDd,YAAoBwE,EAAkBzH,EAA8C0H,gBAAhED,mBAAkBzH,kBAA8C0H,MAN5E5I,YAAkB,CAAC,IACnBA,eAAY,GAMlBA,KAAK4I,KAAOA,EACZ5I,KAAKkB,KAAOA,EACZlB,KAAKmE,QAAUjD,EAAKiD,QACpBnE,KAAKyH,aAAekB,MClBZE,GAAAA,sCCiBa3F,EAAc4F,EAAkBC,GAGvD,OAFI7F,EAAK3E,QAAyB,MAAfF,EAAK6E,KAAeA,GAAQ,KAhBjD,SAAqBA,EAAc+E,GACjC,IAAMe,EAAOC,SAASC,cAAc,QACpCF,EAAKG,KAAOjG,EAEZ,IAAM7C,EAAO4I,SAASG,qBAAqB,QAAQ,GACnD/I,EAAKgJ,aAAaL,EAAM3I,EAAKiJ,YAE7B,IAAM3J,EAAIsJ,SAASC,cAAc,KACjCvJ,EAAEwJ,KAAOlB,EACT,IAAMsB,EAAW5J,EAAEwJ,KAGnB,OAFA9I,EAAKmJ,YAAYR,GAEVO,EAKKE,CAAWvG,EAAM4F,GAClBrJ,QAAQ,4BAA6B,SAACR,EAAKyK,EAAQzB,GAC5D,IAAM5J,EAAO4J,EAAK5C,MAAM,KAAKoD,MAC7B,MAAI,SAASkB,KAAKtL,GAAcY,EACzByK,EAASzB,EAAOc,uBAIKa,oEAC9B,SAAO,IAAIC,QAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,OAAS,WACO,KAAdF,EAAIG,QAAiBH,EAAIG,OAAS,IACpCL,EAAQE,EAAII,cAEZL,EAAO,IAAInF,MAAMoF,EAAIK,cAGzBL,EAAIM,QAAU,WACZP,EAAO,IAAInF,MAAM,sDAEnBoF,EAAIO,KAAK,MAAOX,GAChBI,EAAIQ,qCAIsBZ,GAC5B,IAAMI,EAAM,IAAIC,eAGhB,GAFAD,EAAIO,KAAK,MAAOX,GAAK,GACrBI,EAAIQ,OACAR,EAAIG,OAAS,KAAqB,KAAdH,EAAIG,OAC1B,MAAM,IAAIvF,MAAMoF,EAAIK,YAEtB,OAAOL,EAAII,8BAGiBtB,oEAC5B,UAAO,4BAGmBA,GAC1B,OAAO,cC/CO2B,GAAkBlL,GAChC,SAAUmL,GAAQnL,GAAOsJ,GAAU8B,oBAGrBC,GAAiBrL,GAC/B,OAAOmL,GAAQnL,KAASsJ,GAAUgC,kBAGpBC,GAAavL,GAC3B,OAAOmL,GAAQnL,KAASsJ,GAAUkC,cAGpBC,GAAezL,GAC7B,OAAOmL,GAAQnL,KAASsJ,GAAUoC,gBAGpBC,GAAY3L,GAC1B,OAAOmL,GAAQnL,KAASsJ,GAAUsC,aAGpBC,GAAe7L,GAC7B,OAAOmL,GAAQnL,KAASsJ,GAAUwC,gBAGpBC,GAAgB/L,GAC9B,OAAOmL,GAAQnL,KAASsJ,GAAU0C,iBAGpBC,GAAejM,GAC7B,OAAOmL,GAAQnL,KAASsJ,GAAU4C,gBAGpBC,GAAuBnM,GACrC,OAAOmL,GAAQnL,KAASsJ,GAAU8C,wBAGpBC,GAAarM,GAC3B,OAAOmL,GAAQnL,KAASsJ,GAAUgD,cAGpBC,GAAcvM,GAC5B,OAAOmL,GAAQnL,KAASsJ,GAAUkD,MAGpC,SAASrB,GAASnL,GAChB,OAAOA,EAAMA,EAAIyM,MAAQ,GF1DfnD,GAAAA,GAAAA,8BAEVA,2BACAA,mBACAA,yBACAA,sBACAA,0BACAA,sBACAA,2CACAA,uBACAA,yBACAA,4BACAA,gCACAA,yPGTWorZC,GAAQ,EAERC,GAAe,GCiB5B,SAASC,GAAUnH,EAAcvB,GAC/B,GAAKuB,GAAU6F,GAAY7F,GAG3B,IADA,IAAMoH,EAAO3I,EAASwI,GAAQC,GACvBF,GAAMhH,EAAMG,MAAMkH,WAAWrH,EAAMjC,IAAM,EAAIiC,EAAMsH,YAAcF,GAAMpH,EAAMsH,YAGtF,SAASA,GAAWtH,EAAcvB,GAChC,GAAKuB,GAAU6F,GAAY7F,GAA3B,CAGA,IADA,IAAMoH,EAAO3I,EAASwI,GAAQC,GACvBF,GAAMhH,EAAMG,MAAMkH,WAAWrH,EAAMK,MAAQL,EAAMmH,WAAaC,GAAMpH,EAAMmH,WACxB,OAArDnH,EAAMG,MAAMoH,OAAOvH,EAAMK,MAAQL,EAAMmH,WAAoBnH,EAAMmH,YD1BvEH,GAAM,KAAOA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,MAAQA,GAAM,OAASC,WEFjQO,qBAAP,WACE,OAAOzM,KAAKoF,MAAMsH,MAAM1M,KAAKsF,MAAOtF,KAAKgD,MAEpCyJ,yBAAP,WAEE,IADI,IAAAtG,aAACwG,OAAKvG,OACDtH,EAAI,EAAGA,EAAIkB,KAAKsF,MAAOxG,IACR,OAAlBkB,KAAKoF,MAAMtG,IACb6N,IACAvG,EAAM,GACDA,IAET,MAAO,CAACuG,EAAKvG,IAERqG,kBAAP,WACE,OAAOzM,KAAKgD,IAAMhD,KAAKsF,WArBzB,YACS0G,EACA5G,EACAE,EACAtC,EACAkD,GAJAlG,UAAAgM,EACAhM,WAAAoF,EACApF,WAAAsF,EACAtF,SAAAgD,EACAhD,UAAAkG,ECJX,WAAiCvB,QAAA8H,QAC/B,YACSG,EACAC,GAFT,MAIEtG,aAAMsC,GAAU4C,OAAQmB,EAAMxH,MAAOwH,EAAMtH,MAAOuH,EAAUA,EAAQ7J,IAAM4J,EAAM5J,IAAK4J,EAAM1G,mBAHpFM,QAAAoG,EACApG,UAAAqG,ICHX,WAAqClI,QAAA8H,IAWnCK,sBAAA,SAAUC,gBAAAA,MAIR,IAHA,IAGSjO,EAHKiO,GJLE,GIKWd,GAAMjM,KAAKoF,MAAMkH,WAAWtM,KAAKsF,QACxDtF,KAAKsF,MAAQ,EACbtF,KAAKsF,MACWxG,EAAIkB,KAAKgD,IAAKlE,IAChC,KJVgB,GIUVmN,GAAMjM,KAAKoF,MAAMkH,WAAWxN,KAAe,OAAO,EAE1D,OAAO,OAhBT,YACSsG,EACAE,EACAtC,EACAkD,GAJT,MAMEK,aAAMsC,GAAUgD,KAAMzG,EAAOE,EAAOtC,EAAKkD,gBALlCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAN,EAGPM,EAAKwG,QAAUxG,EAAKyG,YCTxB,WAA+BtI,QAAA7H,GACtBoQ,oBAAP,SAAe3P,GACb,OAAID,EAASC,IAAUQ,EAAQR,GAAgC,IAAjBA,EAAMgB,SAChDC,EAASjB,IAA6C,IAA9BN,OAAOkK,KAAK5J,GAAOgB,QAG1C2O,gBAAP,WACE,OAAO,GAEFA,iBAAP,WACE,OAAO,GAEFA,gBAAP,WACE,OAAO,GAEFA,iBAAP,WACE,OAAO,GAEFA,qBAAP,WACE,MAAO,QAnBX,+DCDA,WAA+BvI,QAAAuI,IACtBC,oBAAP,SAAe5P,GACb,OAAc,IAAVA,KACAI,EAAMC,EAAQL,MACdD,EAASC,GAAe,QAAQoM,KAAKpM,GAClCgJ,aAAMzF,iBAAOvD,SALxB,+DCEA,WAA8BoH,QAAA7H,GACrBsQ,oBAAP,SAAe7P,GACb,OAAOI,EAAMC,EAAQL,KAAWA,aAAiB4P,IAE5CC,gBAAP,WACE,OAAO,GAEFA,iBAAP,WACE,OAAO,GAEFA,gBAAP,WACE,OAAO,GAEFA,iBAAP,WACE,OAAO,GAEFA,qBAAP,WACE,OAAO,UAjBX,+DCDO,OAAMC,GAAgB,CAC3BC,MAAQ,EACRC,OAAS,EACTC,IAAO,IAAIJ,GACXK,KAAQ,IAAIL,GACZM,MAAS,IAAIR,GACbS,MAAS,IAAIR,QCPmBxI,QAAA8H,QAEhC,YACSrH,EACAE,EACAtC,EACAkD,GAJT,MAMEK,aAAMsC,GAAU0C,QAASnG,EAAOE,EAAOtC,EAAKkD,gBALrCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAN,EAGPM,EAAKoH,QAAUpH,EAAKyG,YCTjB,OAAMY,GAAa,CACxBxM,KAAM,EACNG,KAAM,EACNC,IAAK,EACLG,IAAK,EACLC,KAAM,EACNG,KAAM,EACNC,SAAY,EACZE,IAAO,EACPC,GAAM,OAG2BuC,QAAA8H,IAWjCqB,2BAAA,WACE,IAAM/Q,EAAMiD,KAAKiN,UACjB,OAAOlQ,KAAO8Q,GAAaA,GAAW9Q,GAAO,OAX/C,YACSqI,EACAE,EACAtC,EACAkD,GAJT,MAMEK,aAAMsC,GAAUgC,SAAUzF,EAAOE,EAAOtC,EAAKkD,gBALtCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAN,EAGPM,EAAKuH,SAAWvH,EAAKyG,YCxBzB,IAAMe,GAAO,aACPC,GAAO,QACPC,GAAa,CACjBtO,EAAG,KACHuO,EAAG,KACH9O,EAAG,KACHkC,EAAG,KACH6M,EAAG,KACHC,EAAG,MAGL,SAASC,GAAQxL,GACf,IAAMyL,EAAOzL,EAAEwJ,WAAW,GAC1B,OAAY,IAARiC,EAAmBA,EAAO,GAClB,IAARA,EAAmBA,EAAO,GACvBA,EAAO,YAGAC,GAAoBvP,GAElC,IADA,IAAIwP,EAAM,GACD3P,EAAI,EAAGA,EAAIG,EAAIV,OAAS,EAAGO,IAClC,GAAe,OAAXG,EAAIH,GAIR,QAA+BqE,IAA3B+K,GAAWjP,EAAIH,EAAI,IACrB2P,GAAOP,GAAWjP,IAAMH,SACnB,GAAmB,MAAfG,EAAIH,EAAI,GAAY,CAG7B,IAFA,IAAIS,EAAM,EACNmP,EAAI5P,EAAI,EACL4P,GAAK5P,EAAI,GAAKkP,GAAKrE,KAAK1K,EAAIyP,KACjCnP,EAAY,GAANA,EAAW+O,GAAOrP,EAAIyP,MAE9B5P,EAAI4P,EAAI,EACRD,GAAOpR,OAAOsR,aAAapP,QACtB,GAAK0O,GAAKtE,KAAK1K,EAAIH,EAAI,IAEvB,CAGL,IAFI4P,EAAI5P,EAAI,EACRS,EAAM,EACHmP,GAAK5P,EAAI,GAAKmP,GAAKtE,KAAK1K,EAAIyP,KACjCnP,EAAY,EAANA,EAAU+O,GAAOrP,EAAIyP,MAE7B5P,EAAI4P,EAAI,EACRD,GAAOpR,OAAOsR,aAAapP,QAR3BkP,GAAOxP,IAAMH,QAdb2P,GAAOxP,EAAIH,GAyBf,OAAO2P,ECzCT,WAAyC9J,QAAA8H,IASvCmC,+BAAA,WACE,OAAI5O,KAAK6O,oBAAoB/B,GACpB9M,KAAK6O,SAAS5B,UAEduB,GAAmBxO,KAAK6O,SAAS5B,gBAZ5C,YACS4B,EACAC,EACP9L,GAHF,MAKEuD,aAAMsC,GAAU8C,eAAgBkD,EAASzJ,MAAOyJ,EAASvJ,MAAOtC,EAAK6L,EAAS3I,mBAJvEM,WAAAqI,EACArI,QAAAsI,aCPKC,GAAYC,EAAiChJ,GAC3D,IAAKgJ,EAAW,CACd,IAAM/I,EAAMD,EAAUA,IAAY,UAAUgJ,gBAC5C,MAAM,IAAIC,GAAehJ,ICD7B,WAAiCtB,QAAA8H,QAC/B,YACShG,EACAyI,EACP9J,EACAE,EACAtC,EACAkD,GANF,MAQEK,aAAMsC,GAAUsG,OAAQ/J,EAAOE,EAAOtC,EAAKkD,gBAPpCM,OAAAC,EACAD,OAAA0I,ICFX,WAA+BvK,QAAA8H,QAC7B,YACSrH,EACAE,EACAtC,EACAyD,EACAlJ,EACA2I,GANT,MAQEK,aAAMsC,GAAUuG,KAAMhK,EAAOE,EAAOtC,EAAKkD,gBAPlCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAC,EACAD,QAAAjJ,EACAiJ,OAAAN,ICTX,WAAiCvB,QAAA8H,QAC/B,YACSrH,EACAE,EACAtC,EACAkD,GAJT,MAMEK,aAAMsC,GAAUwC,OAAQjG,EAAOE,EAAOtC,EAAKkD,gBALpCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAN,ICLX,WAA+BvB,QAAA8H,IAWtB4C,wBAAP,WACE,OAAOrP,KAAKoF,MAAMsH,MAAM1M,KAAKsF,MAAQtF,KAAKoM,SAAUpM,KAAKgD,IAAMhD,KAAKuM,gBATtE,YACSnH,EACAE,EACAtC,EACAkD,GAJT,MAMEK,aAAMsC,GAAUkC,KAAM3F,EAAOE,EAAOtC,EAAKkD,gBALlCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,OAAAN,EANTM,WAAW,EACXA,YAAY,ICDd,WAA6C7B,QAAA8H,QAI3C,YACET,EACAgB,EACA5H,EACAE,EACAtC,EACAoJ,EACAG,EACArG,GARF,MAUEK,aAAMyF,EAAM5G,EAAOE,EAAOtC,EAAKkD,SAb1BM,YAAW,EACXA,aAAY,EAajBA,EAAKwG,QAAUxG,EAAKyG,UACpB,IAAMqC,EAAoB,MAAftC,EAAQ,GACbuC,EAAuB,MAAlBlR,EAAK2O,UAChBxG,EAAKwG,QAAUA,EACZN,MACC4C,EAAK,EAAI,EACTC,GAAM,EAAIvC,EAAQzO,QAEnBiR,OACHhJ,EAAK4F,SAAWkD,GAAMlD,EACtB5F,EAAK+F,UAAYgD,GAAMhD,eCvBG5H,QAAA8K,QAG5B,YACErK,EACAE,EACAtC,EACAuB,EACA2B,GALF,WAOU3C,gBAAaD,iBAAcK,qBAAkBC,sBAC/CrG,EAAQ6H,EAAMsH,MAAMpH,EAAQ3B,EAAiBpF,OAAQyE,EAAMY,EAAkBrF,QACnFiI,EAAAD,aAAMsC,GAAUsC,IAAK5N,EAAO6H,EAAOE,EAAOtC,EAAKO,EAAaD,EAAc4C,SAE1E,IAAMwJ,EAAY,IAAIC,GAAUnJ,EAAKwG,QAASzI,EAAQF,eAEtD,GADAmC,EAAKC,KAAOiJ,EAAUE,iBAAiB3C,WAClCzG,EAAKC,KAAM,MAAM,IAAIoJ,EAAkB,qBAAsBrJ,UAElEkJ,EAAUI,YACVtJ,EAAK0I,KAAOQ,EAAUK,cCrB1B,WAAgCpL,QAAA8H,QAC9B,YACSrH,EACAE,EACAtC,EACAgN,EACAC,EACA/J,GANT,MAQEK,aAAMsC,GAAUkD,MAAO3G,EAAOE,EAAOtC,EAAKkD,gBAPnCM,QAAApB,EACAoB,QAAAlB,EACAkB,MAAAxD,EACAwD,MAAAwJ,EACAxJ,MAAAyJ,EACAzJ,OAAAN,ICPX,WAAiCvB,QAAA8K,QAC/B,YACErK,EACAE,EACAtC,EACAuB,EACA2B,GALF,IAOUzC,mBAAgBD,oBAAiBK,wBAAqBC,yBACxDvG,EAAQ6H,EAAMsH,MAAMpH,EAAQzB,EAAoBtF,OAAQyE,EAAMc,EAAqBvF,eACzFgI,aAAMsC,GAAUoC,OAAQ1N,EAAO6H,EAAOE,EAAOtC,EAAKS,EAAgBD,EAAiB0C,iBCyBnFyJ,4BAAF,sEAEE,OADMO,EAAUlQ,KAAKmQ,gBAGfD,cAAN/J,iCAEOnG,KAAKoQ,EAAIpQ,KAAKqQ,GACbtC,EAAW/N,KAAKsQ,kBAGhBC,EAAUvQ,KAAKmQ,gBAGfpC,oBACN,OADA5H,YACMoK,iBAANpK,oCAGJwJ,0BAAA,WACE3P,KAAK8P,YACL,IAAM9M,WCvDqB/D,EAAaqG,EAAe/C,EAAYS,gBAAAA,EAAM/D,EAAIV,QAI/E,IAHA,IAEIiS,EAFArQ,EAAOoC,EACPzD,EAAIwG,EAEDnF,EAAKlB,EAAIH,KAAOA,EAAIkE,IACzB7C,EAAOA,EAAKlB,EAAIH,OACF,MAAG0R,EAAOrQ,GAE1B,OAAKqQ,EACDA,EAAmB,cvBPC,EuBOIvR,EAAIqN,WAAWxN,IAAyB,EAC7DA,GAFY,ED+CL2R,CAAczQ,KAAKoF,MAAOpF,KAAKoQ,EAAGpQ,KAAKuC,KAAMvC,KAAKoQ,EAAI,GAClE,IAAa,IAATpN,EACJ,OAAO,IAAI8K,GAAc9N,KAAKoF,MAAOpF,KAAKoQ,EAAIpQ,KAAKoQ,EAAIpN,EAAMhD,KAAKkG,OAEpEyJ,yBAAA,WAEE,IADA,IAAMe,EAAU,KACH,CACX,IAAMC,EAAS3Q,KAAK4Q,aACpB,IAAKD,EAAQ,OAAOD,EACpBA,EAAQ3R,KAAK4R,KAGjBhB,wBAAA,WAAA,WAEE,GADA3P,KAAK8P,YACD9P,KAAKgD,MAAO,OAAO,KACvB+L,GAAuB,MAAhB/O,KAAK6Q,OAAgB,WAAM,MAAA,uBAAuBrK,EAAKsK,aAC9D9Q,KAAKoQ,IACL,IAAM9K,EAAQtF,KAAKoQ,EACb3J,EAAOzG,KAAK4P,iBAClB,IAAKnJ,EAAKnG,OAAQ,OAAO,KACzB,IAAM4O,EAAO,GAEb,GADAlP,KAAK8P,YACe,MAAhB9P,KAAK6Q,OACP,EAAG,GACC7Q,KAAKoQ,EACP,IAAMvP,EAAMb,KAAK+Q,gBAEjB,IADAlQ,GAAOqO,EAAKnQ,KAAK8B,GACVb,KAAKoQ,EAAIpQ,KAAKqQ,GAAqB,MAAhBrQ,KAAK6Q,QAAkC,MAAhB7Q,KAAK6Q,UAAkB7Q,KAAKoQ,QACtD,MAAhBpQ,KAAK6Q,QAEhB,OAAO,IAAIG,GAAYvK,EAAKwG,UAAWiC,EAAMlP,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGpQ,KAAKkG,OAG/EyJ,2BAAA,WACE,IAAM5S,EAAMiD,KAAKmQ,YACjB,GAAKpT,EAAL,CAEA,GADAiD,KAAK8P,YACe,MAAhB9P,KAAK6Q,OAAgB,OAAO9T,IAC9BiD,KAAKoQ,EACP,IAAM7S,EAAQyC,KAAKmQ,YACnB,MAAO,CAACpT,EAAIkQ,UAAW1P,KAGzBoS,gCAAA,SAAoBpL,gBAAAA,KAElB,IADA,IAAM0M,EAA0B,GACzBjR,KAAKoQ,EAAIpQ,KAAKqQ,GAAG,CACtB,IAAMpL,EAAQjF,KAAKkR,kBAAkB3M,GACrC0M,EAAOlS,KAAKkG,GAGd,gBrBvG4BgM,EAAiB1M,GAG/C,IAFA,IAAI4M,GAAQ,EAEHrS,EAAI,EAAGA,EAAImS,EAAO1S,OAAQO,IAAK,CACtC,IAAMmG,EAAQgM,EAAOnS,GAChB2L,GAAiBxF,MACjBkM,GAASlM,EAAMmH,UAClBA,GAAS6E,EAAOnS,EAAI,GAAIyF,EAAQb,QAG9BwH,GAAWjG,KACM,QAAfA,EAAMwB,KAAgB0K,GAAQ,EACV,WAAflM,EAAMwB,OAAmB0K,GAAQ,KAGvCA,GAASlM,EAAMsH,WAClBA,GAAU0E,EAAOnS,EAAI,GAAIyF,EAAQb,UqBsFnC0N,CAAeH,EAAQ1M,GAChB0M,GAGTtB,+BAAA,SAAmBpL,GACT,IAAAZ,qBAAkBE,wBAC1B,OAAuB,EAAnB7D,KAAKqR,WAAwBrR,KAAKsR,uBAAuB/M,GACzDvE,KAAKuR,MAAM5N,GAA0B3D,KAAKwR,aAAajN,GACvDvE,KAAKuR,MAAM1N,GAA6B7D,KAAKyR,gBAAgBlN,GAC1DvE,KAAK0R,cAAcnN,IAG5BoL,2BAAA,SAAepL,GAEb,IADA,IAAMe,EAAQtF,KAAKoQ,EACZpQ,KAAKoQ,EAAIpQ,KAAKqQ,GAAG,CACd,IAAA1M,qBAAkBE,wBAC1B,GAAI7D,KAAKuR,MAAM5N,GAAmB,MAClC,GAAI3D,KAAKuR,MAAM1N,GAAsB,QACnC7D,KAAKoQ,EAET,OAAO,IAAIf,GAAUrP,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGpQ,KAAKkG,OAGvDyJ,0BAAA,SAAcpL,gBAAAA,KACN,IAAE2B,YAAMd,aACRE,EAAQtF,KAAKoQ,EACnB,IAAyD,IAArDpQ,KAAK2R,gBAAgBpN,EAAQX,mBAC/B,MAAM5D,KAAK4R,QAAQ,OAAO5R,KAAK8Q,SAASxL,iBAAqBA,GAE/D,IAAML,EAAQ,IAAI4M,GAASzM,EAAOE,EAAOtF,KAAKoQ,EAAG7L,EAAS2B,GAE1D,MADmB,QAAfjB,EAAMwB,OAAgBzG,KAAKqR,WAAa/L,GACrCL,GAGT0K,6BAAA,SAAiBmC,GACf,KAAO9R,KAAKoQ,EAAIpQ,KAAKqQ,GACnB,GtBvIe,EsBuIVrQ,KAAK+R,WACR/R,KAAKgS,kBAIP,KADEhS,KAAKoQ,EACHpQ,KAAKiS,OAAOH,GAAY,OAAO9R,KAAKoQ,EAE1C,OAAQ,GAGVT,6BAAA,SAAiBpL,gBAAAA,KACT,IAAE2B,YAAMd,aACNtB,yBACFwB,EAAQtF,KAAKoQ,EACnB,IAAoD,IAAhDpQ,KAAK2R,gBAAgB7N,GACvB,MAAM9D,KAAK4R,QAAQ,UAAU5R,KAAK8Q,SAASxL,iBAAqBA,GAElE,OAAO,IAAI4M,GAAY9M,EAAOE,EAAOtF,KAAKoQ,EAAG7L,EAAS2B,IAGxDyJ,oCAAA,SAAwBpL,GAItB,IAHQ,IAAAZ,qBAAkBC,sBACpB0B,EAAQtF,KAAKoQ,EACf+B,EAAUnS,KAAKoS,OAAOzO,GAAoBA,EAAiBpF,OACxDyB,KAAKoQ,EAAIpQ,KAAKqQ,GACnB,GAAwC,WAApCrQ,KAAK4P,iBAAiB3C,UAI1B,KAAOjN,KAAKoQ,GAAKpQ,KAAKqQ,GAAG,CACvB,GAAIrQ,KAAKiS,OAAOrO,GAAoB,CAClC,IAAMZ,EAAMhD,KAAKoQ,EACjB,OAAI9K,IAAU6M,GACZnS,KAAKqR,YAAc,EACZ,IAAIQ,GAAS7R,KAAKoF,MAAOE,EAAOtC,EAAKuB,EAASvE,KAAKkG,QAE1DlG,KAAKoQ,EAAI+B,EACF,IAAI9C,GAAUrP,KAAKoF,MAAOE,EAAO6M,EAASnS,KAAKkG,OAG1D,GAAIlG,KAAKiS,OAAOtO,GAAmB,MACnC3D,KAAKoQ,SAfL+B,EAAUnS,KAAKoS,OAAOzO,GAAoBA,EAAiBpF,OAkB/D,MAAMyB,KAAK4R,QAAQ,OAAO5R,KAAK8Q,SAAS9Q,KAAKqR,0BAA0B/L,IAGzEqK,qBAAA,SAAS1J,EAAaX,GACpB,OAAO,IAAIuK,EAAkB5J,EAAK,IAAI6G,GAAgB9M,KAAKoF,MAAOE,EAAOtF,KAAKqQ,EAAGrQ,KAAKkG,QAGxFyJ,sBAAA,SAAUrK,GACR,oBADQA,EAAgBtF,KAAKoQ,GACtBiC,KAAK3U,mBlC7DUuB,EAAaoR,GACrC,OAAOpR,EAAIV,OAAS8R,EAAIpR,EAAIqT,OAAO,EAAGjC,EAAI,GAAK,MAAQpR,EkC4D/BsT,CAASvS,KAAKoF,MAAMsH,MAAMpH,GAAQ,MAM1DqK,sBAAA,WAEE,OADA6C,QAAQC,KAAK,qEACNzS,KAAK4P,kBAGdD,4BAAA,WACE3P,KAAK8P,YAEL,IADA,IAAMxK,EAAQtF,KAAKoQ,EtB3MG,EsB4MfpQ,KAAK+R,cAA2B/R,KAAKoQ,EAC5C,OAAO,IAAItD,GAAgB9M,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGpQ,KAAKkG,OAG7DyJ,wBAAA,WAEE,IADA,IAAM+C,EAAS,KACF,CACX,IAAMC,EAAO3S,KAAK4S,WAClB,IAAKD,EAAM,OAAOD,EAClBA,EAAO3T,KAAK4T,KAIhBhD,sBAAA,WACE3P,KAAK8P,YACe,MAAhB9P,KAAK6Q,UAAkB7Q,KAAKoQ,EAChC,IAGI7S,EAHE+H,EAAQtF,KAAKoQ,EACb3J,EAAOzG,KAAK4P,iBAClB,GAAKnJ,EAAKnG,OAQV,OALAN,KAAK8P,YACe,MAAhB9P,KAAK6Q,WACL7Q,KAAKoQ,EACP7S,EAAQyC,KAAKmQ,aAER,IAAI0C,GAAU7S,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAG3J,EAAMlJ,EAAOyC,KAAKkG,OAGpEyJ,uBAAA,WACE,OAAO3P,KAAKoF,MAAMsH,MAAM1M,KAAKoQ,IAG/BT,qBAAA,SAAS7Q,gBAAAA,KACPkB,KAAKoQ,GAAKtR,GAGZ6Q,iBAAA,WACE,OAAO3P,KAAKoQ,GAAKpQ,KAAKqQ,GAGxBV,oBAAA,SAAQ3M,GACN,KAAOhD,KAAKoQ,EAAIpQ,KAAKqQ,GAEnB,KADErQ,KAAKoQ,EACHpQ,KAAKiS,OAAOjP,GAAM,OAAOhD,KAAKoQ,EAEpC,OAAQ,GAGVT,uBAAA,WACE,IAAMpS,EAAQyC,KAAKgS,cAAgBhS,KAAK8S,YACxC,GAAIvV,EAAO,OAAOA,EAElB,GAAoB,MAAhByC,KAAK6Q,OAAgB,CAGvB,GAFA7Q,KAAKoQ,MACC2C,EAAO/S,KAAKgS,cACP,OACX,GAAoB,MAAhBhS,KAAK6Q,OAAgB,OAEzB,OADA7Q,KAAKoQ,IACE,IAAIxB,GAAoBmE,EAAM,GAAI/S,KAAKoQ,GAGhD,IAAMvB,EAAW7O,KAAK4P,iBACtB,GAAKf,EAASvO,OAAd,CAIA,IAFA,IAAIxC,EAAW+Q,EAAS/Q,UAAS,GAC3BgR,EAA2C,KAE/C,GAAoB,MAAhB9O,KAAK6Q,OAAgB,CACvB/S,GAAW,EACXkC,KAAKoQ,IACL,IAAM2C,EAAO/S,KAAKmQ,aAAe,IAAIrD,GAAgB9M,KAAKoF,MAAOpF,KAAKoQ,EAAGpQ,KAAKoQ,EAAGpQ,KAAKkG,MACtFlG,KAAKoS,OAAO,KACZtD,EAAM/P,KAAKgU,OACN,CAAA,GAAoB,MAAhB/S,KAAK6Q,QAAmC,MAAjB7Q,KAAK6Q,KAAK,GAMrC,MAHL,GAFA7Q,KAAKoQ,MACC2C,EAAO/S,KAAK4P,kBACRtP,OAAQ,MACbyS,EAAKjV,aAAYA,GAAW,GACjCgR,EAAM/P,KAAKgU,GAGf,OAAKjE,EAAMvQ,QAAU8O,GAAcjP,eAAeyQ,EAAS7B,SAClD,IAAIgG,GAAahT,KAAKoF,MAAOyJ,EAASvJ,MAAOuJ,EAAS7L,IAAKhD,KAAKkG,MAErEpI,EAAiB,IAAImV,GAAYpE,EAAUC,EAAM,IAC9C,IAAIF,GAAoBC,EAAUC,EAAO9O,KAAKoQ,KAGvDT,uBAAA,WACE3P,KAAK8P,YACL,IAAMxK,EAAQtF,KAAKoQ,EACnB,GAAoB,MAAhBpQ,KAAK6Q,OAAT,GACE7Q,KAAKoQ,EACP,IAAMJ,EAAMhQ,KAAKkT,mBACjBlT,KAAKoQ,GAAK,EACV,IAAMH,EAAMjQ,KAAKkT,mBAEjB,QADElT,KAAKoQ,EACA,IAAI+C,GAAWnT,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGJ,EAAKC,EAAKjQ,KAAKkG,QAGlEyJ,8BAAA,WAAA,WACQpS,EAAQyC,KAAKmQ,YAEnB,OADApB,GAAOxR,EAAO,WAAM,MAAA,oBAAoBiJ,EAAKsK,gCACtCvT,GAGToS,wBAAA,WACE3P,KAAK8P,YACL,IAAMxK,EAAQtF,KAAKoQ,EACnB,GtBvTiB,EsBuTXpQ,KAAK+R,WAAX,GACE/R,KAAKoQ,EAEP,IADA,IAAIgD,GAAU,EACPpT,KAAKoQ,EAAIpQ,KAAKqQ,MACjBrQ,KAAKoQ,EACHpQ,KAAKoF,MAAMpF,KAAKoQ,EAAI,KAAOpQ,KAAKoF,MAAME,IAAW8N,IACjDA,EAASA,GAAU,EACa,OAA3BpT,KAAKoF,MAAMpF,KAAKoQ,EAAI,KAAagD,GAAU,GAEtD,OAAO,IAAIC,GAAYrT,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGpQ,KAAKkG,QAGzDyJ,0BAAA,WAEE,IADA,IAAMrK,EAAQtF,KAAKoQ,IACVpQ,KAAK+R,WAAa7F,KAA0B,MAAhBlM,KAAK6Q,QAAkB7Q,KAAKoQ,EAAIpQ,KAAKqQ,GAAGrQ,KAAKoQ,IAClF,OAAO,IAAItD,GAAgB9M,KAAKoF,MAAOE,EAAOtF,KAAKoQ,EAAGpQ,KAAKkG,OAG7DyJ,mBAAA,SAAO2D,GACL,IAAK,IAAIxU,EAAI,EAAGA,EAAIwU,EAAK/U,OAAQO,IAC/B,GAAIwU,EAAKxU,KAAOkB,KAAKoF,MAAMpF,KAAKoQ,EAAItR,GAAI,OAAO,EAEjD,OAAO,GAGT6Q,oBAAA,SAAQ4D,GACN,IAAK,IAAIzU,EAAI,EAAGA,EAAIyU,EAAQhV,OAAQO,IAClC,GAAIyU,EAAQA,EAAQhV,OAAS,EAAIO,KAAOkB,KAAKoF,MAAMpF,KAAKoQ,EAAI,EAAItR,GAAI,OAAO,EAE7E,OAAO,GAGT6Q,sBAAA,SAAUtQ,GACR,oBADQA,KACD4M,GAAMjM,KAAKoF,MAAMkH,WAAWtM,KAAKoQ,EAAI/Q,KAG9CsQ,kBAAA,SAAMtQ,GACJ,oBADIA,KACGW,KAAKoF,MAAMpF,KAAKoQ,EAAI/Q,IAG7BsQ,uBAAA,WACE,KAAO3P,KAAK+R,WAAa7F,MAASlM,KAAKoQ,OAzUzC,YACUhL,EACA7C,EACA2D,gBAAAA,MAFAlG,WAAAoF,EACApF,UAAAuC,EACAvC,UAAAkG,EAPVlG,OAAI,EAEIA,iBAAc,EAOpBA,KAAKqQ,EAAIjL,EAAM7G,eExBViV,mBAAP,SAAcC,GAEVA,GAD0B,IAAxBzT,KAAKoE,eACAxG,EAAQ6V,GAER/V,EAAUE,EAAQ6V,KAMC,IAAxBzT,KAAKoE,gBAA2C,iBAATqP,GAAmC,KAAdzT,KAAKyT,KACnEzT,KAAKyT,KAAOA,EAEZzT,KAAKyT,KAAO/V,EAAUsC,KAAKyT,MAAQ/V,EAAU+V,QAjBjD,YAAarP,GALNpE,UAAY,GACZA,YAAQ,EACRA,eAAW,EACVA,qBAAkB,EAGxBA,KAAKoE,eAAiBA,ECJ1B,QACWsP,6BAAT,SAA0BC,EAAuB3S,EAAc4S,wEAE3DA,EADGA,GACO,IAAIJ,GAAQxS,EAAIE,KAAKkD,yDAEfyP,EAAApR,EAAAkR,qDAAP9M,2BAEM,gCAAMA,EAAIiN,OAAO9S,EAAK4S,WAEnC,OAFMH,EAAOjR,WACLoR,EAAQnT,MAAMgT,GAClBG,EAAQG,OAASH,EAAQI,4BAG7B,iBADYrN,EAAYsN,GAAGC,GAAKA,EAAI,IAAIvN,EAAYuN,EAAGrN,8LAI3D,SAAO+M,EAAQH,cAfnB,uBCYSU,gBAAP,SAAgD1N,EAAc2N,GAE5D,OADApU,KAAKqU,SAAS5N,GAAQ2N,EACfpU,MAEDmU,qBAAR,SAA8CG,EAAezT,GAC3D,IAAM0T,EAAIvU,KAAKqU,SAASC,GACxB,QAAOC,IAAKA,EAAE1T,IAAM,IAEfsT,mBAAP,WAEE,IAAIlP,EACJ,IAFAjF,KAAKwU,QAAQ,UAELxU,KAAKyU,gBAAkBxP,EAAQjF,KAAKiR,OAAOyD,UACjD,KAAI1U,KAAKwU,QAAQ,QAASvP,IACtBiG,GAAWjG,IAAUjF,KAAKwU,QAAQ,OAAOvP,EAAMwB,KAAQxB,IAA3D,CAGA,IAAM0P,EAAW3U,KAAK4U,WAAW3P,EAAOjF,KAAKiR,QAC7CjR,KAAKwU,QAAQ,WAAYG,GAG3B,OADK3U,KAAKyU,eAAezU,KAAKwU,QAAQ,OAC/BxU,MAEFmU,kBAAP,WAEE,OADAnU,KAAKyU,eAAgB,EACdzU,UA5BT,YAAoBiR,EAAa2D,GAJzB5U,cAAgD,GAChDA,oBAAgB,EAItBA,KAAKiR,OAASA,EACdjR,KAAK4U,WAAaA,ECbpB,YAAoB3P,GAClBjF,KAAKiF,MAAQA,EAHjB,QC6BS4P,sBAAP,SAAiB7T,WAiDSsB,EAA4C0N,EAAUC,EAAUjP,MAhDxF,IAAoB,IAAAwB,EAAAC,EAAAzC,KAAK8U,uCAAS,CAA7B,IAAM7P,UACT,GAAI8P,GAA2B9P,GAAQ,CACrC,IAAM1D,EAAIvB,KAAKgV,SAASvM,MAClBnH,EAAItB,KAAKgV,SAASvM,MAClBwM,GA4Cc3S,EA5CatC,KAAKsC,UA4C0B0N,EA5CR1O,EA4CkB2O,EA5Cf1O,EA4CyBP,EA5CtBA,GAA/CkU,EA6CR5S,EA7C0C2C,EA6C1B8I,WACjBiC,EAAKC,EAAKjP,IA7ChBhB,KAAKgV,SAASjW,KAAKkW,QAEnBjV,KAAKgV,SAASjW,KAAKoW,GAAUlQ,EAAOjE,EAAKhB,KAAKoV,SAAmC,IAAxBpV,KAAK8U,QAAQvW,2GAG1E,OAAOyB,KAAKgV,SAAS,IAEdH,mBAAT,SAAgB7T,6BACd,SAAOpD,EAAQoC,KAAKqV,SAASrU,YApB/B,YAAoB/B,EAAaqD,EAAsB+B,EAAqB+Q,gBAAAA,MALpEpV,cAAkB,GAMxB,IAAM0P,EAAY,IAAIC,GAAU1Q,EAAKoF,GACrCrE,KAAK8U,UAoET,SAAsB7D,sEACdqE,EAAuB,8CACTC,EAAA9S,EAAAwO,yDACd8D,GADK9P,WACL,oCACKqQ,EAAI/W,QAAU+W,EAAIA,EAAI/W,OAAS,GAAGiX,gBAAkBvQ,EAAMuQ,mBACzDF,EAAI7M,2BAAVjG,6BAEF8S,EAAIvW,KAAKkG,gBACJ,SAAMA,UAANzC,uNAEF8S,EAAI/W,UACH+W,EAAI7M,6BAAVjG,qCA/EmBiT,CAAU/F,EAAUgG,mBACvC1V,KAAKoV,QAAUA,EACfpV,KAAKsC,UAAYA,WAoBL6S,GAAWlQ,EAA0BjE,EAAcoU,GAEjE,gBAFiEA,MACjErG,GAAO/N,EAAK,WAAM,MAAA,4CACd2U,GAAiC1Q,GAAQ,CAC3C,IAAM4J,EAAW5J,EAAM2Q,oBACjB9G,EAAkB7J,EAAM6J,MAAMnJ,IAAI,SAAAoN,GAAQ,OAAAoC,GAAUpC,EAAM/R,KAChE,IACE,OAAOA,EAAI6U,OAAKhH,GAAaC,IAC7B,MAAOgH,GACP,GAAIV,GAAWU,aAAatN,GAC1B,OAAO,KAEP,UAAWuN,EAAuBD,EAAG7Q,IAI3C,OAAI+Q,GAAwB/Q,GAyB9B,SAAyBA,EAAmBjE,GAC1C,IAAMiV,EAAcd,GAAUlQ,EAAM+K,IAAKhP,GACnCkV,EAAef,GAAUlQ,EAAMgL,IAAKjP,GAC1C,OAAOtC,GAAOuX,GAAMC,EAAO,GA5BgBC,CAAelR,EAAOjE,GAC7DoV,GAA0BnR,GAoBhC,SAA2BA,GACzB,OAAOoI,GAAcpI,EAAM2I,SArBkByI,CAAiBpR,GAC1DqR,GAAyBrR,GAK/B,SAA0BA,GACxB,IAAMhG,EAAMgG,EAAM2H,MAAMI,QAAU,KAAO/H,EAAM4H,QAAU5H,EAAM4H,QAAQG,QAAU,IACjF,OAAOvB,OAAOxM,GAP8BsX,CAAgBtR,GACxDuR,GAAuBvR,GAAeA,EAAMgI,UAC5CwJ,GAAyBxR,GAAeyR,GAAgBzR,QAA5D,WAQcyR,GAAiBzR,GAC/B,OAAOuJ,GAAmBvJ,EAAMgI,mBCvD9BmC,oBAAF,SAAUpO,0EACF2R,EAAO,2CACKxM,EAAA1D,EAAAxF,OAAOkK,KAAKnH,KAAK2S,wDAAxB5V,UACT4Z,EAAAhE,EAAKhQ,EAAA5F,KAAaoY,GAAUnV,KAAK2S,KAAK5V,GAAMiE,YAA5C2V,KAAYC,2MAEd,SAAOjE,WAXT,YAAakE,WADb7W,UAA+B,GAE7B,IAAM0P,EAAY,IAAIC,GAAUkH,EAAQ,QACxC,IAAmB,IAAArU,EAAAC,EAAAiN,EAAUoH,4CAAc,CAAtC,IAAMnE,UACT3S,KAAK2S,KAAKA,EAAKlM,KAAKuG,SAAW2F,EAAKpV,yGCR1C,SAASwZ,GAAwBxZ,GAC/B,IAAMkR,EAAM,CACVuI,KAAM,SAAClN,GAAsB,OAAAA,EAAQvM,IACrC0Z,MAAO,WAAM,OAAAxI,IAEf,OAAOA,EAGT,SAASyI,GAAwBpS,GAC/B,IAAM2J,EAAM,CACVuI,KAAM,SAAClN,EAAmBC,GACxB,OAAIA,EAAeA,EAAOjF,GACnB2J,GAETwI,MAAO,SAAClN,GAAqB,OAAAA,EAAOjF,KAEtC,OAAO2J,WAYO0I,GAAY5X,GAC1B,OAVF,SAAqBA,GACnB,OAAOA,GAAO9B,EAAW8B,EAAIyX,MASzBI,CAAW7X,GAAaA,EAN9B,SAA0BA,GACxB,OAAOA,GAAO9B,EAAW8B,EAAIO,OAASrC,EAAW8B,EAAI8X,QAAU5Z,EAAW8B,EAAI+X,QAM1EC,CAAgBhY,GAGpB,SAASoI,EAAQ5H,GACf,IAAIyX,EACJ,IACEA,EAASjY,EAA8BO,KAAKC,GAC5C,MAAO+E,GACP,OAAOoS,GAAuBpS,GAGhC,GAAI0S,EAAMC,KAAM,OAAOV,GAAuBS,EAAMja,OACpD,OAAO4Z,GAAWK,EAAMja,OAAQyZ,KAAKrP,EAAQ,SAAA7C,GAC3C,IAAI0S,EACJ,IACEA,EAASjY,EAA8B8X,MAAOvS,GAC9C,MAAOgR,GACP,OAAOoB,GAAuBpB,GAEhC,OAAI0B,EAAMC,KAAaV,GAAuBS,EAAMja,OAC7CoK,EAAO6P,EAAMja,SApBSoK,GAC1BoP,GAAuBxX,YAwBhBmY,GAAWnY,GACzB,OAAOsK,QAAQC,QAAQqN,GAAW5X,aAIpB3B,GAAS2B,GACvB,IAAIkP,EASJ,OARA0I,GAAW5X,GACRyX,KAAK,SAACW,GAEL,OAAOZ,GADPtI,EAAMkJ,KAGPV,MAAM,SAACnS,GACN,MAAMA,IAEH2J,ECzET,WAAyB9J,QAAAiT,IAgBdzM,oBAAT,SAAiBnK,EAAc4S,4DAChB,SAAM,IAAIxE,GAAKpP,KAAKiF,MAAMiK,MAAM4E,OAAO9S,kBAA9C2R,EAAOxM,SAET1I,GADEoa,EAAO7X,KAAK6X,MACE/D,WAAsB+D,EAAK/D,OAAO9S,EAAK4S,EAASjB,iBAAvC,SAAOxM,mCAftC,YAAoBlB,EAAiBgM,EAAyB6G,GAA9D,MACEvR,aAAMtB,SACNuB,EAAKC,KAAOxB,EAAMwB,KAElB,IAAMoR,EAAOC,EAAOC,KAAKlC,IAAI5Q,EAAMwB,aAEnCD,EAAKqR,KAAO5a,OAAO+a,OAAOH,GAC1BrR,EAAKqR,KAAKC,OAASA,EACftR,EAAKqR,KAAKI,OACZzR,EAAKqR,KAAKI,MAAMhT,EAAOgM,KCZ7B,QAYW9B,oBAAT,SAAiB5R,EAAYyH,gFACrBkT,EAAc,4CACF/R,EAAA1D,EAAAzC,KAAKkP,+DCdK5Q,GAC9B,OAAOP,EAAQO,GDcP6Z,CADKtX,YACgB8B,GAAAgU,EAAAuB,GAAKnZ,QAAM8B,EAAI,OAAUsU,GAAUtU,EAAI,GAAImE,yBAA3CrC,qBAAmByV,0BAC7B,OAAVC,GAAAzB,EAAAsB,GAAKnZ,QAAWoW,GAAUtU,EAAKmE,WAA/BqT,WAAUD,gNAEV,SAAMpY,KAAK6X,KAAKS,MAAM,CAAEtT,UAAS8S,OAAQ9X,KAAK8X,WAAWva,GAAU2a,aAA1E,SAAOE,kBAZT,YAAoB3R,EAAcoR,EAAyB3I,EAAmB4I,GAC5E9X,KAAKyG,KAAOA,EACZzG,KAAK6X,KAAOA,GAAQvY,EACpBU,KAAKkP,KAAOA,EACZlP,KAAK8X,OAASA,EETlB,QAYWS,mBAAT,SAAgBvX,sEAGJ,OAFJoU,EAAUpU,EAAIE,KAAKgD,WAAmC,EAAtBlE,KAAK0Q,QAAQnS,QAAuC,YAAzByB,KAAK0Q,QAAQ,GAAGjK,QAEjE0O,GAAUnV,KAAKwY,QAASxX,EAAKoU,WAAzC7V,EAAMoD,iDACWwD,EAAA1D,EAAAzC,KAAK0Q,oEACLoD,OAAOvU,EAAKyB,WAA/BzB,EAAMoD,2MAER,SAAOpD,WAZT,YAAoBN,EAA8BwZ,EAAsBX,GAAxE,WAAkD9X,eAAAyY,EANlCzY,aAAoB,GAOlC,IAAM0P,EAAY,IAAIC,GAAU1Q,EAAK6Y,EAAOvT,QAAQF,eACpDrE,KAAKwY,QAAU9I,EAAUS,YACzBnQ,KAAK0Q,QAAUhB,EAAUgJ,cAAc/S,IAAI,SAACQ,OAAEM,SAAMyI,SAAW,OAAA,IAAIC,GAAO1I,EAAMD,EAAKiS,UAAU5C,IAAIpP,GAAOyI,EAAM4I,KCTpH,WAA4BnT,QAAAiT,IAMjB3M,oBAAT,SAAiBjK,EAAc4S,0DACjB,SAAM5T,KAAKzC,MAAMA,MAAMyD,kBAA7BzB,EAAM4G,SACZyN,EAAQnT,MAAMlB,eANhB,YAAoB0F,EAAoByL,EAAoBoH,GAA5D,MACEvR,aAAMtB,gBACNuB,EAAKjJ,MAAQ,IAAIgb,GAAMtT,EAAM+H,QAAS0D,EAASoH,KCPnD,WAA0BnT,QAAAiT,IAMf7M,oBAAT,SAAiB/J,EAAc4S,oCAC7BA,EAAQnT,MAAMT,KAAKf,gBALrB,YAAoBgG,GAApB,MACEsB,aAAMtB,gBACNuB,EAAKvH,IAAMgG,EAAM0T,eCCrB,QAMSC,mBAAP,SAAc3H,GAGZ,IAFA,IAAIhM,EACE0O,EAAwB,GACtB1O,EAAQgM,EAAOyD,SACrBf,EAAU5U,KAAKiB,KAAK4U,WAAW3P,EAAOgM,IAExC,OAAO0C,GAEFiF,wBAAP,SAAmB3T,EAAsB4T,GACvC,IACE,OAAI3N,GAAWjG,GACN,IAAIkG,GAAIlG,EAAO4T,EAAc7Y,KAAK8X,QAEvC9M,GAAc/F,GACT,IAAIgG,GAAOhG,EAAsBjF,KAAK8X,OAAOpH,QAAS1Q,KAAK8X,QAE7D,IAAI/M,GAAK9F,GAChB,MAAO6Q,GACP,MAAM,IAAIgD,EAAWhD,EAAG7Q,KAGrB2T,yBAAP,SAAoB3H,GAApB,WACE,OAAO,IAAIkD,GAAYlD,EAAQ,SAAChM,EAAOgM,GAAW,OAAAzK,EAAKoO,WAAW3P,EAAOgM,UAzB3E,YAAoB6G,GAClB9X,KAAK8X,OAASA,SCbH,CACbG,MAAO,SAAUhT,GACf,IAAMyK,EAAY,IAAIC,GAAU1K,EAAMiK,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAChErE,KAAKjD,IAAM2S,EAAUE,iBAAiB5C,QACtC0C,EAAUI,YACVf,GAA4B,MAArBW,EAAUmB,OAAgB,WAAM,MAAA,iBAAiB5L,EAAMgI,YAC9DyC,EAAUqJ,UACV/Y,KAAKzC,MAAQmS,EAAUK,aAEzB+D,OAAQ,SAAY9S,4DACO,OAAzBmF,EAAAnF,EAAIgY,SAASxW,EAAAxC,KAAKjD,OAAaiD,KAAK8X,OAAOmB,WAAWjZ,KAAKzC,MAAOyD,kBAAlEmF,KAAyBwQ,2BCVbuC,GAAc3Z,GAC5B,OAAIxB,EAAQwB,GAAaA,EACrBjC,EAASiC,IAAqB,EAAbA,EAAIhB,OAAmB,CAACgB,GACzCf,EAASe,GAAatC,OAAOkK,KAAK5H,GAAKoG,IAAI,SAAC5I,GAAQ,MAAA,CAACA,EAAKwC,EAAIxC,MAC3D,YAGOoc,GAAS5Z,GACvB,OAAIxB,EAAQwB,GAAaA,EAClB,CAAEA,GCTX,WAAiCoF,QAAA7H,GAOxBsc,kBAAP,WACEpZ,KAAKlB,KAEAsa,oBAAP,WACE,OAAOpZ,KAAKlB,GAEPsa,mBAAP,WACE,OAAOpZ,KAAKlB,EAAI,GAEXsa,mBAAP,WACE,OAAkB,IAAXpZ,KAAKlB,GAEPsa,kBAAP,WACE,OAAOpZ,KAAKlB,IAAMkB,KAAKzB,OAAS,GAE3B6a,oBAAP,WACE,OAAOpZ,KAAKzB,OAASyB,KAAKlB,GAErBsa,qBAAP,WACE,OAAOpZ,KAAKzB,OAASyB,KAAKlB,EAAI,GAEzBsa,qBAAP,WACE,OAAO/G,KAAK3U,UAAUsC,WA1BxB,YAAoBzB,GAApB,MACEgI,2BAHQC,IAAI,EAIZA,EAAKjI,OAASA,WCFH,CACbE,KAAM,QACNwZ,MAAO,SAAUhT,EAAiB4T,GAA3B,IAiBDzI,SAhBEiJ,EAAa,IAAI1J,GAAU1K,EAAMiK,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAE3DwK,EAAWwK,EAAWzJ,iBACtB0J,EAAQD,EAAWzJ,iBACnB2J,EAAaF,EAAWlJ,YAC9BpB,GACEF,EAASvO,QAA4B,OAAlBgZ,EAAMtM,SAAoBuM,EAC7C,WAAM,MAAA,gBAAgBtU,EAAMgI,YAG9BjN,KAAK6O,SAAWA,EAAS7B,QACzBhN,KAAKuZ,WAAaA,EAClBvZ,KAAK2S,KAAO,IAAIvD,GAAKiK,EAAWtJ,aAChC/P,KAAK2T,UAAY,GACjB3T,KAAKwZ,cAAgB,GAGrB,IAAMC,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,QAAS,WAAM,OAACxJ,EAAI5J,EAAKmN,YAC5BiG,GAAG,WAAY,WAAM,OAACxJ,EAAI5J,EAAKgT,gBAC/BI,GAAG,aAAc,WAAM,OAAAH,EAAO7a,SAC9Bgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAuJ,EAAErR,KAAK8H,KACzC+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOK,EAAMgI,2BAGjCwM,EAAO9a,SAETmV,OAAQ,SAAY9S,EAAc4S,kFAEF,OADxBrS,EAAIvB,KAAK8X,OAAO+B,SACL1T,EAAA+S,MAAmB/D,GAAUnV,KAAKuZ,WAAYvY,kBAA3DuY,EAAapT,gBAAawQ,YAEdpY,gBACRgD,EAAEuY,gBAAgB9Z,KAAKwZ,cAAexY,EAAK4S,WACjD,OADA+C,oBAIW,SAAM3W,KAAK2S,KAAKmB,OAAO9S,WAA9B2R,EAAOgE,SACPoD,EAASpH,EAAKoH,QAAU,EACxBpZ,OAAwBwC,IAAfwP,EAAKhS,MAAuB4Y,EAAWhb,OAASoU,EAAKhS,MAEpE4Y,EAAaA,EAAW7M,MAAMqN,EAAQA,EAASpZ,GAC3C,aAAcgS,GAAM4G,EAAWS,UAE7BlS,EAAQ,CAAEmS,QAAS,IAAIb,GAAYG,EAAWhb,SACpDyC,EAAIjC,KAAK+I,8CACUoS,EAAAzX,EAAA8W,oDAARY,UACTrS,EAAM9H,KAAK6O,UAAYsL,KACjB5Y,EAAEuY,gBAAgB9Z,KAAK2T,UAAW3S,EAAK4S,YAC7C,GADA+C,SACI/C,EAAQG,MAEV,OADAH,EAAQG,OAAQ,QAGlBH,EAAQI,UAAW,EACnBlM,EAAMmS,QAAQna,qNAEhBkB,EAAIyH,kBC7DO,CACbwP,MAAO,SAAUmC,EAAoBvB,GAA9B,WACCnJ,EAAY,IAAIC,GAAUyK,EAASlL,KAAMlP,KAAK8X,OAAOvT,QAAQF,eACnErE,KAAK6O,SAoBT,SAA2Ba,GACzB,IAAM4D,EAAO5D,EAAUE,iBAAiB5C,QACxC,GAAIsG,EAAM,OAAOA,EACjB,IAAM+G,EAAS3K,EAAUsC,aACzB,GAAIqI,EAAQ,OAAO3D,GAAgB2D,GAxBjBC,CAAiB5K,GACjCX,GAAO/O,KAAK6O,SAAU,WAAM,OAAGuL,EAASlL,+BAExClP,KAAK2T,UAAY,GAEjB,IAAM8F,EAASzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GAC9CY,EAAOG,GAAG,iBAAkB,WAAM,OAAAH,EAAO7a,SACtCgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAL,EAAKmN,UAAU5U,KAAK8H,KACtD+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAEpCwM,EAAO9a,SAETmV,OAAQ,SAAY9S,0DAEL,SADHhB,KAAK8X,OAAO+B,SACDC,gBAAgB9Z,KAAK2T,UAAW3S,kBAA/CyS,EAAOtN,SACbnF,EAAIgY,SAAShZ,KAAK6O,UAAY4E,eCtB7B8G,GAAAA,MCEU,CACbtC,MAAO,SAAUmC,EAAoBvB,GAA9B,WACL7Y,KAAKwa,KAAOJ,EAASlL,KACrBlP,KAAKya,MAAQ,GACbza,KAAKwZ,cAAgB,GAErB,IAAIpJ,EAAgB,GACdqJ,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,WAAY,SAAC3U,GACfuB,EAAKiU,MAAM1b,KAAK,CACdQ,IAAK0F,EAAMiK,KACXyE,UAAWvD,EAAI,OAGlBwJ,GAAG,WAAY,WAAM,OAACxJ,EAAI5J,EAAKgT,gBAC/BI,GAAG,cAAe,WAAM,OAAAH,EAAO7a,SAC/Bgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAuJ,EAAErR,KAAK8H,KACzC+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAGpCwM,EAAO9a,SAGTmV,OAAQ,SAAY9S,EAAc4S,sEAGnB,OAFPrS,EAAIvB,KAAK8X,OAAO+B,SAChB1T,EAA+BnG,KAAK8X,OAAOvT,QAAzCjC,cAAW+B,qBACA,IAAIwQ,GAAW7U,KAAKwa,KAAMlY,EAAW+B,GAAe9G,MAAMyD,WAAvEwZ,EAAOhY,SACJ1D,EAAI,0BAAGA,EAAIkB,KAAKya,MAAMlc,QACvBmc,EAAS1a,KAAKya,MAAM3b,MACR,IAAI+V,GAAW6F,EAAOnb,IAAK+C,EAAW+B,GAAe9G,MAAMyD,yBAAjEwB,WACAgY,WACJjZ,EAAEuY,gBAAgBY,EAAO/G,UAAW3S,EAAK4S,WAC/C,OADApR,2BAJmC1D,iBAQvC,SAAMyC,EAAEuY,gBAAgB9Z,KAAKwZ,cAAexY,EAAK4S,kBAAjDpR,qBClCW,CACbyV,MAAO,SAAUmC,EAAoBvB,GACnC,IAAMY,EAASzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GAC9CY,EACGG,GAAG,QAAS,SAAC3U,GACO,eAAfA,EAAMwB,MAAuBgT,EAAO7a,SAEzCgb,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAEpCwM,EAAO9a,WFdN4b,GAAAA,GAAAA,8BAIHA,iCAGaA,MGJA,CACbtC,MAAO,SAAUhT,GACf,IAAMiK,EAAOjK,EAAMiK,KACbQ,EAAY,IAAIC,GAAUT,EAAMlP,KAAK8X,OAAOvT,QAAQF,eAC1DrE,KAAKkG,KAAOlG,KAAK8X,OAAOvT,QAAQlB,gBAC5BqM,EAAUS,YACVT,EAAUiL,eACd5L,GAAO/O,KAAKkG,KAAM,WAAM,MAAA,qBAAqBjB,EAAMiK,WAEnD,IAAM5J,EAAQoK,EAAUU,EAEA,SADRV,EAAUE,iBACd5C,SACV0C,EAAUI,YACe,MAArBJ,EAAUmB,OACZ7Q,KAAK4a,QAAUlL,EAAUS,YACpBT,EAAUU,EAAI9K,GAChBoK,EAAUU,EAAI9K,EAErBtF,KAAK2S,KAAO,IAAIvD,GAAKM,EAAUK,cAEjC+D,OAAQ,SAAY9S,EAAc4S,uFACxBkE,GAAF3R,EAAkCnG,aAAxB2S,SAAMiI,YAAS1U,SACvB2T,EAAa/B,WACJ9W,EAAIE,KAAKmC,gBACrBoT,GAAyBvQ,MAClB2T,EAASC,gBAAgBhC,EAAOG,MAAMvB,GAAgBxQ,IAAQlF,8BAApE2V,EAAAhU,sBACA,SAAMwS,GAAUjP,EAAMlF,WAAtB2V,EAAAhU,iCAFFH,iBAGAA,EAAA0D,EAAK+G,2BAMK,OALd8B,GALMjG,IAKW,WAAM,MAAA,qBAAqB5C,EAAK+G,gBAAenE,QAE1D+R,EAAQ7Z,EAAI8Z,aAAa,SAAU,aACzC9Z,EAAIuG,YAAY,SAAU,IAC1BvG,EAAIuG,YAAY,YAAagT,GAAUQ,WACnBpI,EAAKmB,OAAO9S,WAEd,OAFZ8G,EAAQnF,SACViY,IAAS9S,EAAMgB,GAAYqM,GAAUyF,EAAS5Z,OAC1B8W,EAAOkD,WAAWlS,EAAU9H,EAAIE,KAAMF,EAAI4H,cAElE,OAFM+K,EAAYhR,SAClB3B,EAAIjC,KAAK+I,MACH+R,EAASC,gBAAgBnG,EAAW3S,EAAK4S,kBAA/CjR,SACA3B,EAAIyH,MACJzH,EAAIia,gBAAgBJ,eCrCT,CACb5C,MAAO,SAAUhT,GACf,IAAMiK,EAAOjK,EAAMiK,KACbQ,EAAY,IAAIC,GAAUT,EAAMlP,KAAK8X,OAAOvT,QAAQF,eAM1D,IALArE,KAAKkG,KAAOlG,KAAK8X,OAAOvT,QAAQlB,gBAC5BqM,EAAUS,YACVT,EAAUiL,eACd5L,GAAO/O,KAAKkG,KAAM,WAAM,MAAA,qBAAqBjB,EAAMiK,YAE3CQ,EAAU1M,OAAO,CACvB0M,EAAUI,YACV,IAAMxK,EAAQoK,EAAUU,EAClB8K,EAAUxL,EAAUE,iBAC1B,IAAwB,SAApBsL,EAAQlO,SAA0C,QAApBkO,EAAQlO,WACxC0C,EAAUI,YACe,MAArBJ,EAAUmB,QAAgB,CAC5B,IAAMtT,EAAQmS,EAAUS,YACxB,GAAI5S,EAAO,CACT,IAAM4d,EAAWzL,EAAUU,EAEvBgL,SACkB,OAFR1L,EAAUE,iBAEd5C,QAAkBoO,EAAQ1L,EAAUE,iBACzCF,EAAUU,EAAI+K,EAEnBnb,KAAKkb,EAAQlO,SAAW,CAAEzP,QAAO6d,MAAOA,GAASA,EAAMpO,SACvD0C,EAAUI,YACe,MAArBJ,EAAUmB,QAAgBnB,EAAUqJ,UACxC,UAINrJ,EAAUU,EAAI9K,EACd,MAEFtF,KAAK2S,KAAO,IAAIvD,GAAKM,EAAUK,cAEjC+D,OAAQ,SAAY9S,EAAc4S,2GACxBkE,GAAF3R,EAAyBnG,aAAfkG,SAAMyM,SACdkH,EAAa/B,WACJ9W,EAAIE,KAAKmC,gBACrBoT,GAAyBvQ,MAClB2T,EAASC,gBAAgBhC,EAAOG,MAAMvB,GAAgBxQ,IAAQlF,8BAApE2V,EAAA0B,sBACA1B,EAAAxB,GAAUjP,EAAMlF,2BAFlBwB,iBAGAA,EAAA0D,EAAK+G,2BAIK,OAHd8B,GALMjG,IAKW,WAAM,MAAA,qBAAqB5C,EAAK+G,gBAAenE,QAE1DuS,EAAW,IAAItU,GAAQ,GAAI/F,EAAIE,KAAMF,EAAI4H,SAC3B+J,EAAKmB,OAAO9S,cAA1B8G,EAAQuQ,SACVrY,KAAW,OACP2C,EAAmB3C,KAAW,KAA5BzC,UAAO6d,UACftT,EAAMsT,GAAStS,GAAYqM,GAAU5X,EAAOyD,IAE9Cqa,EAAStc,KAAK+I,IAEV9H,KAAU,IAAV,aACIsb,EAAmBtb,KAAU,IAA3BzC,UAAO6d,UAEf7B,EAAaL,GADTK,EAAapE,GAAU5X,EAAOyD,IAElC8G,EAAe,QAAI,IAAIsR,GAAYG,EAAWhb,mDAC3B2b,EAAAzX,EAAA8W,qDAARY,UACTrS,EAAMsT,GAASjB,KACSrC,EAAOkD,WAAWlS,EAAUuS,EAASna,KAAMma,EAASzS,eAC5E,OADM+K,EAAY0E,YACZwB,EAASC,gBAAgBnG,EAAW0H,EAAUzH,YAApDyE,SACAvQ,EAAMmS,QAAQna,sOAGE,SAAMgY,EAAOkD,WAAWlS,EAAUuS,EAASna,KAAMma,EAASzS,eAC5E,OADM+K,EAAY0E,YACZwB,EAASC,gBAAgBnG,EAAW0H,EAAUzH,YAApDyE,8CCrES,CACbJ,MAAO,SAAUhT,GACf,IAAMyK,EAAY,IAAIC,GAAU1K,EAAMiK,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAChErE,KAAK6O,SAAWa,EAAUE,iBAAiB5C,SAE7C8G,OAAQ,SAAU9O,EAAkB4O,GAClC,IAAM9L,EAAQ9C,EAAQyC,aACjB3J,EAASgK,EAAM9H,KAAK6O,aACvB/G,EAAM9H,KAAK6O,UAAY,GAEzB+E,EAAQnT,MAAM/C,IAAYoK,EAAM9H,KAAK6O,iBCT1B,CACboJ,MAAO,SAAUmC,GACf,IAAM1K,EAAY,IAAIC,GAAUyK,EAASlL,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAC7DkX,EAAQ7L,EAAUS,YAYxB,IAXAT,EAAUI,YAEV9P,KAAKwb,WAAa,GAEdD,IACuB,MAArB7L,EAAUmB,QACZ7Q,KAAKub,MAAQA,EACb7L,EAAUqJ,WACL/Y,KAAKwb,WAAWzc,KAAKwc,KAGtB7L,EAAU1M,OAAO,CACvB,IAAMzF,EAAQmS,EAAUS,YACpB5S,GAAOyC,KAAKwb,WAAWzc,KAAKxB,GAChCmS,EAAU0C,OAAO,KAEnBrD,GAAO/O,KAAKwb,WAAWjd,OAAQ,WAAM,MAAA,qBAAqB6b,EAASnN,aAGrE6G,OAAQ,SAAU9S,EAAc4S,GAC9B,IACM6H,EAAc,SADNtG,GAAUnV,KAAKub,MAAOva,OACIhB,KAAKwb,WAAW1V,KAAK,KACvD4V,EAAS1a,EAAIoG,YAAY,SAC3BuU,EAAMD,EAAOD,QAELtY,IAARwY,IACFA,EAAMD,EAAOD,GAAe,GAG9B,IAAM/S,EAAY1I,KAAKwb,WAAWG,GAClCA,GAAOA,EAAM,GAAK3b,KAAKwb,WAAWjd,OAClCmd,EAAOD,GAAeE,EACtB,IAAMlI,EAAO0B,GAAUzM,EAAW1H,GAClC4S,EAAQnT,MAAMgT,QCvCH,CACbwE,MAAO,SAAUmC,EAAoBvB,GAA9B,IAIDzI,SAHJpQ,KAAK4b,SAAW,GAChB5b,KAAKwZ,cAAgB,GAGrB,IAAMC,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,QAAS,WAAM,OAAApT,EAAKoV,SAAS7c,KAAK,CACpCyb,KAAMJ,EAASlL,KACfyE,UAAYvD,EAAI,OAEjBwJ,GAAG,YAAa,SAAC3U,GAChBuB,EAAKoV,SAAS7c,KAAK,CACjByb,KAAMvV,EAAMiK,KACZyE,UAAWvD,EAAI,OAGlBwJ,GAAG,WAAY,WAAM,OAACxJ,EAAI5J,EAAKgT,gBAC/BI,GAAG,YAAa,WAAM,OAAAH,EAAO7a,SAC7Bgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAuJ,EAAErR,KAAK8H,KACzC+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAGpCwM,EAAO9a,SAGTmV,OAAQ,SAAY9S,EAAc4S,4EAC1BrS,EAAIvB,KAAK8X,OAAO+B,SAChB1T,EAA+BnG,KAAK8X,OAAOvT,QAAzCjC,cAAW+B,0DAEE7B,EAAAC,EAAAzC,KAAK4b,2DAAflB,aACU,IAAI7F,GAAW6F,EAAOF,KAAMlY,EAAW+B,EAAerD,EAAIE,KAAKgD,WAAW3G,MAAMyD,mBAC/FD,EADSua,SACMta,MACXO,EAAEuY,gBAAgBY,EAAO/G,UAAW3S,EAAK4S,iBAC/C,OADA0H,qMAIJ,SAAM/Z,EAAEuY,gBAAgB9Z,KAAKwZ,cAAexY,EAAK4S,mBAAjD0H,qBCrCW,CACbrD,MAAO,SAAUhT,GACf,IAAMyK,EAAY,IAAIC,GAAU1K,EAAMiK,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAChErE,KAAK6O,SAAWa,EAAUE,iBAAiB5C,SAE7C8G,OAAQ,SAAU9O,EAAkB4O,GAClC,IAAM9L,EAAQ9C,EAAQyC,aACjB3J,EAASgK,EAAM9H,KAAK6O,aACvB/G,EAAM9H,KAAK6O,UAAY,GAEzB,IAAMtP,EAAMuI,EAAM9H,KAAK6O,UACvB/G,EAAM9H,KAAK6O,YACX+E,EAAQnT,MAAM/C,EAAU6B,SCZb,CACb0Y,MAAO,SAAUhT,EAAiB4T,GAChC,IAAMnJ,EAAY,IAAIC,GAAU1K,EAAMiK,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAC1D6B,EAAOlG,KAAK8X,OAAOvT,QAAQlB,gBAAkBqM,EAAUS,YAAcT,EAAUiL,eACrF5L,GAAO7I,EAAM,WAAM,MAAA,qBAAqBjB,EAAMiK,WAE9ClP,KAAKkG,KAAOA,EACZlG,KAAK2S,KAAO,IAAIvD,GAAKM,EAAUK,aAC/B/P,KAAK6b,KAAO7b,KAAK8X,OAAO4B,OAAOzB,MAAMY,IAEvC/E,OAAQ,SAAY9S,EAAc4S,2FACxBkE,GAAF3R,EAAyBnG,aAAf2S,SAAMzM,SACd2T,EAAa/B,WACJ9W,EAAIE,KAAKmC,gBACrBoT,GAAyBvQ,MAClB2T,EAASC,gBAAgBhC,EAAOG,MAAMvB,GAAgBxQ,IAAQlF,8BAApE2V,EAAAC,sBACAD,EAAAxB,GAAUnV,KAAKkG,KAAMlF,2BAFvBwB,iBAGAA,EAAA0D,EAAK+G,2BAES,OADlB8B,GALMjG,IAKW,WAAM,MAAA,qBAAqB5C,EAAK+G,gBAAenE,WACxCgP,EAAOkD,WAAWlS,EAAU9H,EAAIE,KAAMF,EAAI4H,cAIrD,OAJP+K,EAAYiD,SAGlB5V,EAAIuG,YAAY,YAAagT,GAAUuB,UACpBjC,EAASC,gBAAgB9Z,KAAK6b,KAAM7a,WAM9C,OANHyS,EAAOmD,cAEMzT,KADb4Y,EAAS/a,EAAIoG,YAAY,WACpB,MAAmB2U,EAAO,IAAM,WAAM,OAAAtI,IACjDzS,EAAIuG,YAAY,YAAagT,GAAUQ,QAGvCO,GAAA3Y,EAAA3B,GAAIjC,QAAW4T,EAAKmB,OAAO9S,WACX,OADhBsa,WAAS1E,cACaiD,EAASC,gBAAgBnG,EAAW3S,kBAApDgb,EAAUpF,SAChB5V,EAAIyH,MACJmL,EAAQnT,MAAMub,gBCjCarX,QAAA7H,GAOtBmf,mBAAP,WACE,OAAOjc,KAAKkc,wBAPd,YAEUA,gBAAAA,aAAiD,MAAA,KAF3D,MAIE3V,2BAFQC,mBAAA0V,cCDG,CACbjE,MAAA,SAAsBhT,EAAiB4T,GAAvC,WACQtH,EAAQ,MAAM4K,KAAKlX,EAAMiK,MAC/BlP,KAAKoc,MAAQ7K,EAAQA,EAAM,GAAK,GAChCvR,KAAK6b,KAAO,GACZ,IAAMpC,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,eAAgB,WAAM,OAAAH,EAAO7a,SAChCgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAL,EAAKqV,KAAK9c,KAAK8H,KACjD+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOK,EAAMgI,2BAEjCwM,EAAO9a,SAGPmV,OAAF,SAAyB9S,EAAc4S,0DAErC,OADMyI,EAAcrc,KAAKsc,eAAetb,MAClChB,KAAKuc,SAASvb,EAAK4S,EAASyI,kBAAlClW,iBAGFmW,eAAA,SAA+Btb,GAGF,SAArBwb,EAAiCC,0DAEtB,OADfzb,EAAIjC,KAAK,CAAEqd,MAAOK,OACG3E,EAAO+B,SAASC,gBAAgB+B,EAAM7a,WAE3D,OAFMiU,EAAS9O,SACfnF,EAAIyH,SACGwM,MANH,IAAE6C,cAAQ+D,YACVa,EAAsB1b,EAAIoG,YAAY,UAAUpH,KAAKoc,OAO3D,OAAOM,EACH,SAACD,GAA0B,OAAAC,EAAoB,IAAIT,GAAU,WAAM,OAAAO,EAAmBC,OACtFD,GAGJD,SAAF,SAA2Bvb,EAAc4S,EAAkByI,mEACrDrb,EAAIoG,YAAY,YAAamT,GAAUQ,UAAYR,GAAUuB,aAC/D9a,EAAIoG,YAAY,UAAUpH,KAAKoc,OAASC,gBAE1B,OAAd7Z,GAAA2D,EAAAyN,GAAQnT,SAAY4b,EAAY,IAAIJ,YAApCzZ,WAAcmU,8CCvCL,CACbsB,MAAO,SAAUmC,EAAoBvB,GAA9B,WACL7Y,KAAKiR,OAAS,GAEd,IAAMwI,EAASzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GAC9CY,EACGG,GAAG,QAAS,SAAC3U,GACO,WAAfA,EAAMwB,KAAmBgT,EAAO7a,OAC/B4H,EAAKyK,OAAOlS,KAAKkG,KAEvB2U,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAEpCwM,EAAO9a,SAETmV,OAAQ,WACN,OAAO9T,KAAKiR,OAAOtL,IAAI,SAACV,GAAyB,OAAAA,EAAMgI,YAAWnH,KAAK,UChBrCnB,QAAAyU,IAO7BuD,iBAAP,WACE,OAAOpX,KAAKqX,MAAM5c,KAAKlB,EAAIkB,KAAK6c,MAAQ,GAEnCF,kBAAP,WACE,OAAQ3c,KAAKlB,EAAIkB,KAAK6c,MAEjBF,iBAAP,WACE,OAAO3c,KAAK8c,OAAS,GAEhBH,uBAAP,WACE,OAAuB,IAAhB3c,KAAK8c,QAEPH,sBAAP,WACE,OAAO3c,KAAKoG,QAAUpG,KAAK6c,UAlB7B,YAAoBte,EAAgBse,GAApC,MACEtW,aAAMhI,gBACNiI,EAAKjI,OAASA,EACdiI,EAAKqW,KAAOA,QCaV9E,GAA0C,CAC9CgF,UAAQC,IAAOC,GAAKC,WAASC,KAAQC,GAAMC,WAASC,WAASxJ,UAAQyJ,aAAWC,aAAWC,SAAOC,GAAMC,GAAIC,UAAQxB,SAAOyB,OAAKC,SChBnH,CACb7F,MAAO,SAAUmC,EAAoBvB,GAA9B,WACCnJ,EAAY,IAAIC,GAAUyK,EAASlL,KAAMlP,KAAK8X,OAAOvT,QAAQF,eAEnErE,KAAK6O,SAAWa,EAAUE,iBAC1BF,EAAUI,YAEV,IAOIM,EAPE2N,EAAMrO,EAAUE,iBACtBb,GAAOgP,GAAuB,OAAhBA,EAAI/Q,QAAkB,WAAM,MAAA,gBAAgBoN,EAASnN,YAEnEjN,KAAKuZ,WAAa7J,EAAUS,YAC5BnQ,KAAK2S,KAAO,IAAIvD,GAAKM,EAAUK,aAC/B/P,KAAK2T,UAAY,GAGjB,IAAM8F,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,QAAS,WAAM,OAACxJ,EAAI5J,EAAKmN,YAC5BiG,GAAG,kBAAmB,WAAM,OAAAH,EAAO7a,SACnCgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAuJ,EAAErR,KAAK8H,KACzC+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAGpCwM,EAAO9a,SAGTmV,OAAQ,SAAY9S,EAAc4S,4EACF,OAAbzN,EAAA+S,MAAmB/D,GAAUnV,KAAKuZ,WAAYvY,WAClD,OADTuY,EAAapT,gBAAa3D,cACXxC,KAAK2S,KAAKmB,OAAO9S,WAA9B2R,EAAOnQ,SACPuX,EAASpH,EAAKoH,QAAU,EACxBpZ,OAAwBwC,IAAfwP,EAAKhS,MAAuB4Y,EAAWhb,OAASoU,EAAKhS,MAEpE4Y,EAAaA,EAAW7M,MAAMqN,EAAQA,EAASpZ,GACzCkc,EAAOlK,EAAKkK,MAAQtD,EAAWhb,OAE/BgD,EAAIvB,KAAK8X,OAAO+B,SAChBmE,EAAe,IAAIrB,GAAiBpD,EAAWhb,OAAQse,GACvD/U,EAAQ,CAAEkW,gBAChBhd,EAAIjC,KAAK+I,GAEA6T,EAAM,0BAAGA,EAAMpC,EAAWhb,QACjCuJ,EAAM9H,KAAK6O,SAAS7B,SAAWuM,EAAWoC,GACd,IAAxBqC,EAAalB,SACY,IAAvBkB,EAAarR,OAAaiH,EAAQnT,MAAM,SAC5CmT,EAAQnT,MAAM,iBAAiBud,EAAarR,aAE9CiH,EAAQnT,MAAM,iBAAiBud,EAAa5X,eACtC7E,EAAEuY,gBAAgB9Z,KAAK2T,UAAW3S,EAAK4S,kBAA7CpR,SACAoR,EAAQnT,MAAM,iCAR2Bkb,IAAOqC,EAAale,2BAU3DyZ,EAAWhb,QAAQqV,EAAQnT,MAAM,SACrCO,EAAIyH,eDnCoIwV,OEnB7H,CACbhG,MAAO,SAAUmC,EAAoBvB,GAA9B,IAIDzI,SAHJpQ,KAAK2T,UAAY,GACjB3T,KAAK4b,SAAW,GAChB5b,KAAKwZ,cAAgB,GAErB,IAAMC,EAAsBzZ,KAAK8X,OAAO4B,OAAOC,YAAYd,GACxDe,GAAG,QAAS,WACXxJ,EAAI5J,EAAKmN,UACTnN,EAAKgU,KAAOJ,EAASlL,OAEtB0K,GAAG,YAAa,SAAC3U,GAChBuB,EAAKoV,SAAS7c,KAAK,CACjByb,KAAMvV,EAAMiK,KACZyE,UAAWvD,EAAI,OAGlBwJ,GAAG,WAAY,WAAM,OAACxJ,EAAI5J,EAAKgT,gBAC/BI,GAAG,gBAAiB,WAAM,OAAAH,EAAO7a,SACjCgb,GAAG,WAAY,SAAC/S,GAAkB,OAAAuJ,EAAErR,KAAK8H,KACzC+S,GAAG,MAAO,WACT,MAAM,IAAIhV,MAAM,OAAOwV,EAASnN,2BAGpCwM,EAAO9a,SAGTmV,OAAQ,SAAY9S,EAAc4S,4EAGnB,OAFPrS,EAAIvB,KAAK8X,OAAO+B,SAChB1T,EAA+BnG,KAAK8X,OAAOvT,QAAzCjC,cAAW+B,qBACA,IAAIwQ,GAAW7U,KAAKwa,KAAMlY,EAAW+B,EAAerD,EAAIE,KAAKgD,WAAW3G,MAAMyD,kBAE7FC,EAFSqa,SAEKta,MACVO,EAAEuY,gBAAgB9Z,KAAK2T,UAAW3S,EAAK4S,iBAC7C,OADA0H,6CAImB9Y,EAAAC,EAAAzC,KAAK4b,2DAAflB,aACU,IAAI7F,GAAW6F,EAAOF,KAAMlY,EAAW+B,EAAerD,EAAIE,KAAKgD,WAAW3G,MAAMyD,mBAC/FD,EADSua,SACMta,MACXO,EAAEuY,gBAAgBY,EAAO/G,UAAW3S,EAAK4S,iBAC/C,OADA0H,yMAKJ,SAAM/Z,EAAEuY,gBAAgB9Z,KAAKwZ,cAAexY,EAAK4S,mBAAjD0H,kBF1BgJvH,MGnBrI,CACbD,OAAQ,SAAU9S,EAAc4S,GAC9BA,EAAQG,OAAQ,IHiBgJC,SInBrJ,CACbF,OAAQ,SAAU9S,EAAc4S,GAC9BA,EAAQI,UAAW,KCFjBkK,GAAY,CAChBC,IAAK,QACLvc,IAAK,OACLH,IAAK,OACL2c,IAAK,QACLC,IAAK,SAEDC,GAAc,CAClBC,QAAS,IACTC,OAAQ,IACRC,OAAQ,IACRC,QAAS,IACTC,QAAS,cAGKC,GAAQ3f,GACtB,OAAOvB,EAAUuB,GAAKQ,QAAQ,aAAc,SAAAof,GAAK,OAAAX,GAAUW,KChBtD,IAAMC,GAAMvZ,KAAKuZ,IACXC,GAAUxZ,KAAKC,IACfwZ,GAASzZ,KAAKE,IACdwZ,GAAO1Z,KAAK0Z,KAEZrC,GAAQrX,KAAKqX,MCL1B,IAAMsC,GAAU,gCACVC,GAAa,CACjB,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAChE,YAAa,UAAW,WAAY,YAEhCC,GAAW,CACf,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE9DC,GAAkBF,GAAWxZ,IAAI2Z,IACjCC,GAAgBH,GAASzZ,IAAI2Z,IAC7BE,GAAW,CACfC,EAAG,KACHC,EAAG,KACHC,EAAG,KACHC,QAAW,MAQb,SAASN,GAAMrgB,GACb,OAAOA,EAAIyN,MAAM,EAAG,GAQtB,SAASmT,GAAcC,GAErB,IADA,IAAIC,EAAM,EACDjhB,EAAI,EAAGA,EAAIghB,EAAEE,aAAclhB,EAClCihB,GALK,CAAC,GAiBV,SAAqBD,GACnB,IAAMG,EAAOH,EAAEI,cACf,QAAyB,IAAP,EAAPD,MAAoBA,EAAO,KAAQA,EAAO,KAAQ,GAAKA,IApBtDE,CAMSL,GANO,GAAK,GAChB,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAK7BhhB,GAExB,OAAOihB,EAAMD,EAAEM,UAEjB,SAASC,GAAeP,EAASQ,GAE/B,IAAMC,EAAMV,GAAaC,IAAMQ,EAAWR,EAAEU,UAGtCxJ,EAAQ,EADD,IAAIyJ,KAAKX,EAAEI,cAAe,EAAG,GACnBM,SAAWF,EAClC,OAAOjjB,OAAOkI,KAAKqX,OAAO2D,EAAMvJ,GAAQ,GAAK,GAgB/C,IAAM0J,GAAY,CAChBZ,EAAG,EACHhK,EAAG,EACH6K,EAAG,EACHC,EAAG,EACHlS,EAAG,EACHvQ,EAAG,EACHmD,EAAG,EACHuf,EAAG,EACHhC,EAAG,EACHiC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAICC,GAAW,CACfvhB,EAAG,IACHwhB,EAAG,IACHvhB,EAAG,IACHwhB,EAAG,IACHte,EAAG,IACHgT,EAAG,IACH3X,EAAG,IACHmD,EAAG,IACH8O,EAAG,IACHiR,EAAG,KAECC,GAAc,CAClB3hB,EAAG,SAACmgB,GAAY,OAAAP,GAAcO,EAAEU,WAChCW,EAAG,SAACrB,GAAY,OAAAV,GAASU,EAAEU,WAC3B5gB,EAAG,SAACkgB,GAAY,OAAAT,GAAgBS,EAAEE,aAClCoB,EAAG,SAACtB,GAAY,OAAAX,GAAWW,EAAEE,aAC7Bld,EAAG,SAACgd,GAAY,OAAAA,EAAEyB,kBAClBC,EAAG,SAAC1B,GAAY,OAxClB,SAAkBA,GAChB,OAAO2B,SAAS3B,EAAEI,cAAc/iB,WAAWukB,UAAU,EAAG,GAAI,IAuC5CC,CAAQ7B,IACxBA,EAAG,SAACA,GAAY,OAAAA,EAAEM,WAClBtK,EAAG,SAACgK,GAAY,OAAAA,EAAEM,WAClBO,EAAG,SAACb,GAAY,OAAAA,EAAE8B,YAClBhB,EAAG,SAACd,GAAY,OAAAziB,OAAOyiB,EAAE8B,WAAa,IAAM,KAC5ClT,EAAG,SAACoR,GAAY,OAAAD,GAAaC,IAC7B3hB,EAAG,SAAC2hB,GAAY,OAAAA,EAAE8B,YAClBtgB,EAAG,SAACwe,GAAY,OAAAziB,OAAOyiB,EAAE8B,WAAa,IAAM,KAC5Cf,EAAG,SAACf,GAAY,OAAAA,EAAE+B,mBAClBhD,EAAG,SAACiB,GAAY,OAAAA,EAAEE,WAAa,GAC/Bc,EAAG,SAAChB,GAAY,OAAAA,EAAEgC,cAClBzR,EAAG,SAACyP,EAAS5e,GACX,IAAM6gB,EAAQtW,OAAOvK,EAAK6gB,QAAU,EAEpC,gB5EJoB9iB,EAAUV,EAAgBW,GAChD,oBADgDA,OACzCC,EAAIF,EAAKV,EAAQW,EAAI,SAACD,EAAKC,GAAO,OAAAD,EAAMC,I4EGtC8iB,CADK3kB,OAAOyiB,EAAE+B,mBAAmBvP,OAAO,EAAGyP,GAC/BA,EAAO,MAE5B3R,EAAG,SAAC0P,GAAY,OAACA,EAAE8B,WAAa,GAAK,KAAO,MAC5CP,EAAG,SAACvB,GAAY,OAACA,EAAE8B,WAAa,GAAK,KAAO,MAC5CK,EAAG,SAACnC,GAAY,OA/DlB,SAAoBA,GAClB,IAAM7gB,EAAM6gB,EAAEM,UAAUjjB,WAClB+kB,EAAQT,SAASxiB,EAAIyN,OAAO,IAClC,OAAO8S,GAAS0C,IAAU1C,GAAkB,QA4D5B2C,CAAUrC,IAC1BsC,EAAG,SAACtC,GAAY,OAAAva,KAAK8c,MAAMvC,EAAEjiB,UAAY,MACzCkjB,EAAG,SAACjB,GAAY,OAAAA,EAAEwC,cAClBC,EAAG,SAACzC,GAAY,OAAAA,EAAEU,UAAY,GAC9BQ,EAAG,SAAClB,GAAY,OAAAO,GAAcP,EAAG,IACjC0C,EAAG,SAAC1C,GAAY,OAAAA,EAAEU,UAClBS,EAAG,SAACnB,GAAY,OAAAO,GAAcP,EAAG,IACjCnI,EAAG,SAACmI,GAAY,OAAAA,EAAE2C,sBAClBC,EAAG,SAAC5C,GAAY,OAAAA,EAAE6C,sBAClBC,EAAG,SAAC9C,GAAY,OAAAA,EAAEI,cAAc/iB,WAAWukB,UAAU,EAAG,IACxDmB,EAAG,SAAC/C,GAAY,OAAAA,EAAEI,eAClB4C,EAAG,SAAChD,EAAS5e,GACX,IAAM6Y,EAAS+F,EAAEiD,oBACXC,EAAUzd,KAAKuZ,IAAI/E,GAEnB8E,EAAImE,EAAU,GACpB,OAAiB,EAATjJ,EAAa,IAAM,KACzB/a,EAHQuG,KAAKqX,MAAMoG,EAAU,IAGjB,EAAG,MACd9hB,EAAK+hB,MAAM,KAAO,IAAM,IACzBjkB,EAAS6f,EAAG,EAAG,MAEnBzQ,EAAK,WAAM,MAAA,MACX/O,EAAK,WAAM,MAAA,MACX6jB,IAAK,WAAM,MAAA,MAqBb,SAASC,GAAQrD,EAASvO,WAClB/O,SAAC4C,OAAOuR,OAAAyM,kBAAcrB,OAAOsB,OAAUC,OACvCC,EAAUjC,GAAYgC,GAC5B,IAAKC,EAAS,OAAOne,EACrB,IAAM6d,EAAQ,OACd,IAAmB,IAAAO,EAAA/gB,EAAA2gB,kCAASH,YAAc,oGAC1C,IAAIxU,EAAMpR,OAAOkmB,EAAQzD,EAAG,CAAEmD,QAAOlB,QAAOsB,cACxCI,EAAUvC,GAASoC,IAAe,IAClCI,EAAW3B,GAASrB,GAAU4C,IAAe,EAMjD,OALIL,EAAM,KAAMxU,EAAMA,EAAIkV,cACjBV,EAAM,OAAMxU,W5ExCKxP,GAE1B,OADqBuI,EAAIvI,GAAK2kB,KAAK,SAAA1kB,GAAM,MAAM,KAANA,GAAaA,GAAM,MACtCD,EAAI0kB,cAAgB1kB,EAAI7B,c4EsCnBymB,CAAWpV,IAClCwU,EAAS,EAAGQ,EAAU,IACjBR,EAAM,KAAMQ,EAAU,KAC3BR,EAAM,OAAMS,EAAW,GACpB1kB,EAASyP,EAAKiV,EAAUD,GAjChCnC,GAAoB/M,EAAI+M,GAAY1hB,EAoCrC,WAAkC+E,QAAA8b,MAiBhCqD,4BAAA,WACE,OAAO,IAAIrD,MAAOzgB,KAAmC,GAA3BA,KAAK+jB,oBAA2B,UAb5D,YAAoBC,GAApB,MACEzd,aAAMyd,SADYxd,aAAAwd,EAJpBxd,2BAA2B,gCAE3BA,sBAAsB,EAIpB,IAAMqY,EAAImF,EAAWzS,MAAM/K,EAAKyd,0BAChC,GAAIpF,GAAc,MAATA,EAAE,GACTrY,EAAKud,oBAAsBvd,EAAKuc,yBAC3B,GAAIlE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,GAAI,CAC9B,IAAA1Y,SAAK+d,OAAMC,OAAOC,OAClBC,GAAkB,MAATH,EAAe,GAAK,IAA4B,GAAtBzC,SAAS0C,EAAO,IAAW1C,SAAS2C,EAAS,KACtF5d,EAAKud,oBAAsBvd,EAAKuc,oBAAsBsB,+DFpKhCplB,GAC1B,OAAO2f,GALT,SAAmB3f,GACjB,OAAO5B,OAAO4B,GAAKQ,QAAQ,yBAA0B,SAAAof,GAAK,OAAAP,GAAYO,KAIxDyF,CAASrlB,0BAGIoP,GAC3B,OAAOA,EAAE5O,QAAQ,MAAO,6BAGC4O,GACzB,OAAOA,EAAE5O,QAAQ,4DAA6D,mDC5BvD,SAAC4O,EAAWxN,GAAgB,OAAAwN,EAAIxN,kBAEpC,SAACwN,EAAWxN,GAAgB,OAAAwN,EAAIxN,UAC/B,SAACwN,EAAWxN,GAAgB,OAAAwN,EAAIxN,SACjC,SAACwN,EAAWxN,GAAgB,OAAAwN,EAAIxN,kBAE9BwN,EAAWxN,gBAAAA,KAChC,IAAM0jB,EAAMhf,KAAKif,IAAI,GAAI3jB,GACzB,OAAO0E,KAAK8c,MAAMhU,EAAIkW,GAAOA,iBAGTlW,EAAWxN,GAC/B,OAAO4K,OAAO4C,GAAK5C,OAAO5K,yBAGCuE,EAAcqf,GACzC,OAAKrf,GAAUA,EAAMsf,UACJvhB,IAAbshB,EACKjd,EAAIpC,GAAOsf,KAChB,SAAC1U,EAAKC,GAAQ,OAAApQ,EAAuBmQ,EAAIyU,GAAWxU,EAAIwU,MAGrDjd,EAAIpC,GAAOsf,KAAK7kB,GANW,cEtBX,SAAC8X,GAAc,OAAAA,EAAEtS,MAAM,KAAKM,IAAIgf,oBAAoB7e,KAAK,gBACzD,SAAC6R,GAAc,OAAAA,EAAEtS,MAAM,KAAKM,IAAIif,oBAAoB9e,KAAK,WCK9D,SAACuI,EAAUxN,GAAgB,OAAAwN,EAAEvI,UAAa3C,IAARtC,EAAoB,IAAMA,SAC5D,SAACwN,GAAW,OAAAtQ,EAAQsQ,GAAKwW,EAAUxW,GAAK,UACvC,SAACA,GAAW,OAAAtQ,EAAQsQ,GAAKA,EAAE,GAAK,YAC9B,SAACA,GAAa,OAAA7G,EAAI6G,GAAG2L,yBAED1b,EAAUmmB,GAClC,SAAXK,EAAYle,GAAe,OAAA6d,EAAWje,EAAKxB,QAAQgD,aAAapB,EAAK6d,EAASpf,MAAM,MAAQuB,EADpG,WAEE,OAAOuS,GAAQ7a,GAAKomB,KAAK,SAAC1U,EAAKC,GAG7B,OAFAD,EAAM8U,EAAS9U,KACfC,EAAM6U,EAAS7U,KACK,EAAWA,EAAND,EAAY,EAAI,UAIzB,SAAC3B,GAAsB,OAACA,GAAKA,EAAE9P,QAAW,gBAEfD,EAAcmmB,GAA7D,WACE,OAAOtL,GAAQ7a,GAAKqH,IAAI,SAAAiB,GAAO,OAAAJ,EAAKxB,QAAQgD,aAAapB,EAAK6d,EAASpf,MAAM,0BAGjC/G,GAC5C,OAAO6a,GAAQ7a,GAAKqS,OAAO,SAAAgH,GAAK,OAACha,EAAMga,sBAGTtJ,EAASxN,GACvC,OAAOsY,GAAQ9K,GAAG0W,OAAOlkB,mBAGDwN,EAAQ/I,EAAe/G,GAE/C,oBAF+CA,KAC/C+G,EAAQA,EAAQ,EAAI+I,EAAE9P,OAAS+G,EAAQA,EAChC+I,EAAE3B,MAAMpH,EAAOA,EAAQ/G,mBAG2BD,EAAUmmB,EAAkBO,GAAvF,WACE,OAAO7L,GAAQ7a,GAAKqS,OAAO,SAAA/J,GACzB,IAAMrJ,EAAQiJ,EAAKxB,QAAQgD,aAAapB,EAAKvJ,OAAOonB,GAAUpf,MAAM,MACpE,YAAoBlC,IAAb6hB,EAAyBjkB,EAASxD,EAAOiJ,EAAKxB,SAAWzH,IAAUynB,mBAIrD1mB,GACvB,IAAMikB,EAAI,GACV,OAAQjkB,GAAO,IAAIqS,OAAO,SAAApR,GACxB,OAAIgjB,EAAEnkB,eAAef,OAAOkC,MAC5BgjB,EAAEllB,OAAOkC,KAAQ,oBC9CmB8O,EAAkBxN,GACxD,IAAIokB,EAAO5W,EAcX,MAbU,QAANA,GAAqB,UAANA,EACjB4W,EAAO,IAAIxE,KACF3iB,EAASuQ,GAClB4W,EAAO,IAAIxE,KAAS,IAAJpS,GACP/Q,EAAS+Q,KAEhB4W,EADE,QAAQtb,KAAK0E,GACR,IAAIoS,KAAU,KAAJpS,GACRrO,KAAKgF,QAAQ9D,KAAK6C,kBACpB,IAAI+f,GAAazV,GAEjB,IAAIoS,KAAKpS,IAMtB,SAAsB4W,GACpB,OAAOA,aAAgBxE,OAASyE,MAAMD,EAAKE,WAJpCC,CAAYH,YH2HII,EAAiBC,GACxC,IAAIxF,EAAIuF,EACJvF,aAAagE,KACfhE,EAAIA,EAAEyF,kBAMR,IAHA,IAEIhU,EAFAiU,EAAS,GACTzV,EAAYuV,EAER/T,EAAQ2N,GAAQ/C,KAAKpM,IAC3ByV,GAAUzV,EAAUrD,MAAM,EAAG6E,EAAM2Q,OACnCnS,EAAYA,EAAUrD,MAAM6E,EAAM2Q,MAAQ3Q,EAAM,GAAGhT,QACnDinB,GAAUrC,GAAOrD,EAAGvO,GAEtB,OAAOiU,EAASzV,EGzIW0V,CAASR,EAAMpkB,GAAOwN,oBCfAA,EAAgBxN,GACjE,OAAI9C,EAAQsQ,IAAM/Q,EAAS+Q,GAAWA,EAAE9P,OAAS8P,EAAIxN,EAC9CI,EAAQrD,EAAQyQ,GAAIrO,KAAKgF,SAAWnE,EAAMwN,iBAE7BA,GACpB,OAAOgE,KAAK3U,UAAU2Q,oBCDAA,EAAWxN,GAEjC,OADAkO,QAAe5L,IAARtC,EAAmB,WAAM,MAAA,8BACzBnD,EAAU2Q,GAAK3Q,EAAUmD,qBAGTwN,EAAWxN,GAElC,OADAkO,QAAe5L,IAARtC,EAAmB,WAAM,MAAA,+BACzBnD,EAAUmD,GAAOnD,EAAU2Q,oBAGZA,GACtB,OAAO3Q,EAAU2Q,GAAG5O,QAAQ,OAAQ,uBAGZ4O,GACxB,OAAO3Q,EAAU2Q,GAAGjR,+BAGE6B,GACtB,OAAOvB,EAAUuB,GAAK0kB,+BAGAtV,EAAWxN,GACjC,OAAOnD,EAAU2Q,GAAGhJ,MAAMhI,OAAOwD,IAAMiF,KAAK,0BAGjBuI,EAAW/M,GACtC,OAAO5D,EAAU2Q,GAAG5O,QAAQpC,OAAOiE,GAAI,qBAGjBrC,GACtB,OAAOvB,EAAUuB,GAAKQ,QAAQ,OAAQ,oBAGjB4O,EAAWxN,GAChC,OAAOnD,EAAU2Q,GAAGhJ,MAAMhI,OAAOwD,oBAGZwN,GACrB,OAAO3Q,EAAU2Q,GAAGmB,+BAGSnB,GAC7B,OAAO3Q,EAAU2Q,GAAG5O,QAAQ,MAAO,yBAGTR,GAE1B,OADAA,EAAMvB,EAAUuB,IACLuN,OAAO,GAAGmX,cAAgB1kB,EAAIyN,MAAM,qBAGxB2B,EAAWkF,EAAiBmS,GACnD,OAAOhoB,EAAU2Q,GAAGhJ,MAAMhI,OAAOkW,IAAUzN,KAAK4f,0BAGpBrX,EAAWsX,EAAcC,GACrD,OAAOloB,EAAU2Q,GAAG5O,QAAQpC,OAAOsoB,GAAOC,sBAGlBvX,EAAW/M,EAAQukB,GAE3C,oBAFmCvkB,mBAAQukB,UAC3CxX,EAAI3Q,EAAU2Q,IACR9P,QAAU+C,EAAU+M,EACnBA,EAAEiE,OAAO,EAAGhR,EAAIukB,EAAEtnB,QAAUsnB,0BAGNxX,EAAW/M,EAAQukB,gBAARvkB,mBAAQukB,SAChD,IAAMvnB,EAAM+P,EAAEhJ,MAAM,OAChBoJ,EAAMnQ,EAAIoO,MAAM,EAAGpL,GAAGwE,KAAK,KAE/B,OADIxH,EAAIC,QAAU+C,IAAGmN,GAAOoX,GACrBpX,SCvEPqX,iBAAA,SAAKrf,GACH,IAAMoR,EAAO7X,KAAK+lB,MAAMtf,GAExB,OADAsI,GAAO8I,EAAM,WAAM,MAAA,QAAQpR,kBACpBoR,GAGTiO,iBAAA,SAAKrf,EAAcoR,GACjB7X,KAAK+lB,MAAMtf,GAAQoR,OAVvB,cACU7X,WAAyC,GCEnD,QAQEgmB,iBAAA,SAAKvf,GACH,IAAMoR,EAAO7X,KAAK+lB,MAAMtf,GAExB,OADAsI,GAAO8I,IAAS7X,KAAKgE,cAAe,WAAM,MAAA,qBAAqByC,IACxDoR,GAGTmO,iBAAA,SAAKvf,EAAcoR,GACjB7X,KAAK+lB,MAAMtf,GAAQoR,GAGrBmO,oBAAA,SAAQvf,EAAcyI,GACpB,OAAO,IAAIC,GAAO1I,EAAMzG,KAAK6V,IAAIpP,GAAOyI,EAAMlP,KAAK8X,aAhBrD,YACmB9T,EACA8T,GADA9X,mBAAAgE,EACAhE,YAAA8X,EAJX9X,WAA4C,WCiC7CimB,mBAAP,SAAcxS,EAAc3K,GAC1B,IACMmI,EADY,IAAItB,GAAU8D,EAAMzT,KAAKuE,QAAQF,cAAeyE,GACzCod,mBAAmBlmB,KAAKuE,SACjD,OAAOvE,KAAK0Z,OAAOzB,MAAMhH,IAGpBgV,qBAAP,SAAgBpf,EAAiBiB,EAAgB5G,EAAsB0H,GACrE,IAAMrE,OAAevE,KAAKuE,QAAYD,EAAUpD,IAC1CF,EAAM,IAAI+F,GAAQe,EAAOvD,EAASqE,GAClCgL,EAAU,IAAIJ,GAAQjP,EAAQH,gBACpC,OAAOpE,KAAK6Z,SAASC,gBAAgBjT,EAAK7F,EAAK4S,IAEpCqS,oBAAb,SAAqBpf,EAAiBiB,EAAgB5G,oEACpD,SAAOwW,GAAU1X,KAAKmmB,QAAQtf,EAAKiB,EAAO5G,GAAM,UAE3C+kB,wBAAP,SAAmBpf,EAAiBiB,EAAgB5G,GAClD,OAAOtD,GAAQoC,KAAKmmB,QAAQtf,EAAKiB,EAAO5G,GAAM,KAGzC+kB,6BAAP,SAAwBxS,EAAc3L,EAAgB5G,EAAsB0H,GAC1E,IAAM/B,EAAM7G,KAAKiY,MAAMxE,GACvB,OAAOzT,KAAKmmB,QAAQtf,EAAKiB,EAAO5G,EAAM0H,IAE3Bqd,4BAAb,SAA6BxS,EAAc3L,EAAgB5G,oEACzD,SAAOwW,GAAU1X,KAAKomB,gBAAgB3S,EAAM3L,EAAO5G,GAAM,UAEpD+kB,gCAAP,SAA2BxS,EAAc3L,EAAgB5G,GACvD,OAAOtD,GAAQoC,KAAKomB,gBAAgB3S,EAAM3L,EAAO5G,GAAM,KAGhD+kB,wBAAT,SAAqB/f,EAAchF,EAAsB0H,2FACjDrE,OAAevE,KAAKuE,QAAYD,EAAUpD,IAC1C2G,EAAQtD,EAAQrB,KAAKyC,IAAI,SAAAzC,GAAQ,OAAAsD,EAAK6f,GAAGvc,QAAQ5G,EAAMgD,EAAM3B,EAAQnB,gBAClDD,IAArBnD,KAAKqmB,GAAGC,eAEOnjB,KADX2F,EAAW9I,KAAKqmB,GAAGC,SAASpgB,KACN2B,EAAM9I,KAAK+J,8CAGlByd,EAAA9jB,EAAAoF,qDAAZiB,WACD5I,EAAUqE,YAEGrE,EAAMsmB,KAAK1d,kBAC9B,GADM+S,EAAOP,SACH,SAAOO,2BAEbjT,GAAOzC,EAAAnG,KAAKqmB,GAAGI,WAAW3d,uBAAY,SAAM9I,KAAKqmB,GAAGK,OAAO5d,WAArB3C,EAAAmV,0BAA5C,UACY9Y,EAAAxC,KAAKiY,MAAMrP,GAAO+N,EAAA3W,KAAKqmB,GAAGM,aAAa7d,gCAAY,SAAM9I,KAAKqmB,GAAGO,SAAS9d,WAAvB6N,EAAA2E,4BAE/D,OAFMzU,EAAMrE,QAAAxC,QAAqF8I,IAC7F5I,GAAOA,EAAMO,MAAMqI,EAAUjC,MAC1BA,kMAET,MAAM7G,KAAK6mB,YAAY3gB,EAAM3B,EAAQrB,UAE1B+iB,uBAAb,SAAwB/f,EAAchF,oEACpC,SAAOwW,GAAU1X,KAAKgb,WAAW9U,EAAMhF,GAAM,UAExC+kB,2BAAP,SAAsB/f,EAAchF,GAClC,OAAOtD,GAAQoC,KAAKgb,WAAW9U,EAAMhF,GAAM,KAEhC+kB,wBAAb,SAAyB/f,EAAclF,EAAcE,iGACjC,SAAMlB,KAAK8mB,UAAU5gB,EAAMhF,WAC7C,OADMyS,EAAYxN,YACXnG,KAAK8T,OAAOH,EAAW3S,EAAKE,UAE9B+kB,4BAAP,SAAuB/f,EAAclF,EAAcE,GACjD,IAAMqD,EAAUD,EAAUpD,GACpByS,EAAY3T,KAAK+mB,cAAc7gB,EAAM3B,GAC3C,OAAOvE,KAAKgnB,WAAWrT,EAAW3S,EAAKE,IAGlC+kB,wBAAP,SAAmBhnB,EAAa+B,GAE9B,OADc,IAAIuX,GAAMtZ,EAAKe,KAAK0Q,QAAS1Q,MAC9BzC,MAAMyD,IAERilB,uBAAb,SAAwBhnB,EAAa+B,oEACnC,SAAO0W,GAAU1X,KAAKiZ,WAAWha,EAAK+B,UAEjCilB,2BAAP,SAAsBhnB,EAAa+B,GACjC,OAAOpD,GAAQoC,KAAKiZ,WAAWha,EAAK+B,KAG/BilB,4BAAP,SAAuBxf,EAAckK,GACnC3Q,KAAK0Q,QAAQuW,IAAIxgB,EAAMkK,IAElBsV,yBAAP,SAAoBxf,EAAcygB,GAChClnB,KAAK+X,KAAKkP,IAAIxgB,EAAMygB,IAEfjB,oBAAP,SAAekB,GACb,OAAOA,EAAO3pB,KAAKwC,KAAMimB,KAEpBA,qBAAP,WACE,IAAMmB,EAAOpnB,KACb,OAAO,SAAqBqnB,EAAkBrmB,EAAasmB,GACzD,IAAMpmB,EAAO,CAAEgC,OAAUsB,EAAqBxE,KAAKkD,MAAUkkB,EAAK7iB,QAAQrB,OAC1EkkB,EAAKG,WAAWF,EAAUrmB,EAAKE,GAAM8V,KAAK,SAAAvD,GAAQ,OAAA6T,EAAS,KAAM7T,IAAc6T,KAI3ErB,yBAAR,SAAqB/f,EAAcshB,GACjC,IAAM1iB,EAAM,IAAIF,MAAM,UAGtB,OAFAE,EAAIkB,QAAU,6BAA6BE,WAAashB,MACxD1iB,EAAIyJ,KAAO,SACJzJ,GAMImhB,yBAAb,SAA0B/f,EAAchF,oEACtC,SAAOlB,KAAK8mB,UAAU5gB,EAAMhF,SAKvB+kB,6BAAP,SAAwB/f,EAAchF,GACpC,OAAOlB,KAAK+mB,cAAc7gB,EAAMhF,QA3HlC,YAAoBA,GAApB,wBAAoBA,MAClBlB,KAAKuE,iB9EmGqBA,GAC5B,YAAYtB,EAAmBsB,G8EpGdkjB,CAAanjB,EAAUpD,IACtClB,KAAK0Z,OAAS,IAAId,GAAO5Y,MACzBA,KAAK6Z,SAAW,IAAInG,GACpB1T,KAAKqmB,GAAKnlB,EAAKmlB,IAAMA,GACrBrmB,KAAK0Q,QAAU,IAAIsV,GAAUhmB,KAAKuE,QAAQP,cAAehE,MACzDA,KAAK+X,KAAO,IAAI+N,GAEhB9nB,EAAO0pB,GAAa,SAACC,EAAsBlhB,GAAiB,OAAAD,EAAKohB,YAAYpoB,EAAUiH,GAAOkhB,KAC9F3pB,EAAO6pB,GAAgB,SAAChlB,EAA4B4D,GAAiB,OAAAD,EAAKshB,eAAetoB,EAAUiH,GAAO5D"}